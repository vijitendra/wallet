{"version":3,"sources":["node_modules/regenerator-runtime/runtime.js","node_modules/bn.js/lib/bn.js","../src.ts/_version.ts","../src.ts/index.ts","../src.ts/bignumber.ts","../src.ts/fixednumber.ts","../src.ts/fragments.ts","../../src.ts/coders/abstract-coder.ts","node_modules/process/browser.js","node_modules/js-sha3/src/sha3.js","../../src.ts/coders/address.ts","../../src.ts/coders/anonymous.ts","../../src.ts/coders/array.ts","../../src.ts/coders/boolean.ts","../../src.ts/coders/bytes.ts","../../src.ts/coders/fixed-bytes.ts","../../src.ts/coders/null.ts","../src.ts/addresses.ts","../src.ts/bignumbers.ts","../src.ts/hashes.ts","../src.ts/strings.ts","../../src.ts/coders/number.ts","../src.ts/utf8.ts","../src.ts/bytes32.ts","../src.ts/idna.ts","../../src.ts/coders/string.ts","../../src.ts/coders/tuple.ts","../src.ts/abi-coder.ts","../src.ts/id.ts","../src.ts/namehash.ts","../src.ts/message.ts","../src.ts/typed-data.ts","../src.ts/interface.ts","node_modules/minimalistic-assert/index.js","node_modules/inherits/inherits_browser.js","node_modules/hash.js/lib/hash/utils.js","node_modules/hash.js/lib/hash/common.js","node_modules/hash.js/lib/hash/sha/common.js","node_modules/hash.js/lib/hash/sha/1.js","node_modules/hash.js/lib/hash/sha/256.js","node_modules/hash.js/lib/hash/sha/224.js","node_modules/hash.js/lib/hash/sha/512.js","node_modules/hash.js/lib/hash/sha/384.js","node_modules/hash.js/lib/hash/sha.js","node_modules/hash.js/lib/hash/ripemd.js","node_modules/hash.js/lib/hash/hmac.js","node_modules/hash.js/lib/hash.js","../../../node_modules/minimalistic-assert/index.js","../../../node_modules/minimalistic-crypto-utils/lib/utils.js","../../../node_modules/elliptic/lib/elliptic/utils.js","../../../node_modules/elliptic/lib/elliptic/curve/base.js","../../../node_modules/inherits/inherits_browser.js","../../../node_modules/elliptic/lib/elliptic/curve/short.js","../../../node_modules/elliptic/lib/elliptic/curve/index.js","../../../node_modules/elliptic/lib/elliptic/curves.js","../../../node_modules/hmac-drbg/lib/hmac-drbg.js","../../../node_modules/elliptic/lib/elliptic/ec/key.js","../../../node_modules/elliptic/lib/elliptic/ec/signature.js","../../../node_modules/elliptic/lib/elliptic/ec/index.js","../../../node_modules/elliptic/lib/elliptic.js","elliptic.js","../src.ts/types.ts","../src.ts/browser-sha2.ts","../src.ts/browser-pbkdf2.ts","../src.ts/wordlist.ts","../src.ts/lang-en.ts","../src.ts/browser-wordlists.ts","../src.ts/browser-random.ts","../src.ts/shuffle.ts","node_modules/aes-js/index.js","../src.ts/utils.ts","../src.ts/crowdsale.ts","../src.ts/inspect.ts","node_modules/scrypt-js/scrypt.js","../src.ts/keystore.ts","../src.ts/browser-base64.ts","../src.ts/browser-geturl.ts","node_modules/bech32/index.js","../src.ts/formatter.ts","../src.ts/base-provider.ts","../src.ts/json-rpc-provider.ts","../src.ts/browser-ws.ts","../src.ts/websocket-provider.ts","../src.ts/url-json-rpc-provider.ts","../src.ts/alchemy-provider.ts","../src.ts/cloudflare-provider.ts","../src.ts/etherscan-provider.ts","../src.ts/fallback-provider.ts","../src.ts/browser-ipc-provider.ts","../src.ts/infura-provider.ts","../src.ts/json-rpc-batch-provider.ts","../src.ts/nodesmith-provider.ts","../src.ts/pocket-provider.ts","../src.ts/web3-provider.ts","../src.ts/ethers.ts","index.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["process","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","call","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","nextTick","args","Array","arguments","i","push","Item","array","prototype","apply","title","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","minAssert","minUtils","utils","assert","Base","inherits","require$$0","require$$1","curve","curves","KeyPair","HmacDRBG","Signature","signature","require$$2","require$$3","EC","_ec","require","_ethers","_utils","_typeof","obj","Symbol","iterator","constructor","_regeneratorRuntime","Op","Object","hasOwn","hasOwnProperty","defineProperty","key","desc","value","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","provider","signer","document","addEventListener","loadApp","_loadApp","_callee","_callee$","_context","ethers","providers","Web3Provider","window","ethereum","getSigner","location","reload","send","processAction","urlParams","URLSearchParams","search","action","get","message","chainId","to","data","gasLimit","gasPrice","signMessage","sendTransaction","displayResponse","_x","_x2","_x3","_x4","_x5","_x6","_sendTransaction","_callee2","network","from","tx","_callee2$","_context2","getNetwork","request","params","parseInt","toString","getAddress","parseUnits","hexlify","Number","console","log","hash","t0","copyToClipboard","_x7","_signMessage","_callee3","_callee3$","_context3","_x8","_copyToClipboard","_callee4","response","input","_callee4$","_context4","focus","navigator","clipboard","writeText","getElementById","innerHTML","createElement","body","appendChild","select","execCommand","style","text","responseText","className","responseButton","onclick","OVERLAY_ID","OldModule","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","event","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","clear","hmrApply","v","hmrAcceptRun","close","onclose","removeErrorOverlay","stack","overlay","createErrorOverlay","remove","stackTrace","innerText","getParents","modules","parents","k","d","dep","isArray","Function","deps","cached","cache","some","cb"],"mappingszvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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AE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAE;EAAE,CAAC,EAAE;AAAE,CAAE,EAChD;EAAE,CAAC,EAAE,EAAE;EAAE,CAAC,EAAE,CAAC,MAAM;EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE;EAAE,CAAC,EAAE;AAAE,CAAE,EACzD;EAAE,CAAC,EAAE,EAAE;EAAE,CAAC,EAAE,CAAC,MAAM;EAAE,CAAC,EAAE;AAAE,CAAE,EAC5B;EAAE,CAAC,EAAE,EAAE;EAAE,CAAC,EAAE,CAAC,MAAM;EAAE,CAAC,EAAE;AAAE,CAAE,EAC5B;EAAE,CAAC,EAAE,EAAE;EAAE,CAAC,EAAE,CAAC,MAAM;EAAE,CAAC,EAAE;AAAE,CAAE,EAC5B;EAAE,CAAC,EAAE,EAAE;EAAE,CAAC,EAAE,CAAC,MAAM;EAAE,CAAC,EAAE;AAAE,CAAE,EAC5B;EAAE,CAAC,EAAE,EAAE;EAAE,CAAC,EAAE,CAAC,MAAM;EAAE,CAAC,EAAE;AAAE,CAAE,EAC5B;EAAE,CAAC,EAAE,EAAE;EAAE,CAAC,EAAE,CAAC,MAAM;EAAE,CAAC,EAAE;AAAE,CAAE,EAC5B;EAAE,CAAC,EAAE,EAAE;EAAE,CAAC,EAAE,CAAC,MAAM;EAAE,CAAC,EAAE,CAAE,EAAE,CAAE;EAAE,CAAC,EAAE;AAAE,CAAE,EACvC;EAAE,CAAC,EAAE,EAAE;EAAE,CAAC,EAAE,CAAC,MAAM;EAAE,CAAC,EAAE,CAAE,EAAE,CAAE;EAAE,CAAC,EAAE;AAAE,CAAE,EACvC;EAAE,CAAC,EAAE,EAAE;EAAE,CAAC,EAAE,CAAC,MAAM;EAAE,CAAC,EAAE,CAAE,EAAE,CAAE;EAAE,CAAC,EAAE;AAAE,CAAE,EACvC;EAAE,CAAC,EAAE,EAAE;EAAE,CAAC,EAAE,CAAC,MAAM;EAAE,CAAC,EAAE,CAAE,EAAE,CAAE;EAAE,CAAC,EAAE;AAAE,CAAE,EACvC;EAAE,CAAC,EAAE,EAAE;EAAE,CAAC,EAAE,CAAC,MAAM;EAAE,CAAC,EAAE,CAAE,EAAE,CAAE;EAAE,CAAC,EAAE;AAAE,CAAE,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,EAAE,SAAiB,EAAA;IACpC,OAAO,OAAO,CAAC,OAAO,CAAA,CAAE,CAAC,IAAI,CAAC,MAAK;MAC/B,MAAM,CAAC,UAAU,CAAC,OAAO,EAAE,cAAM,CAAC,MAAM,CAAC,qBAAqB,EAAE;QAAE,SAAS,EAAE;MAAS,CAAE,CAAC;IAC7F,CAAC,CAAC;EACN;EAEA,WAAW,CAAC,OAAuB,EAAA;IAC/B,OAAO,IAAI,CAAC,KAAK,CAAC,iCAAiC,EAAE,aAAa,CAAC;EACvE;EAEA,eAAe,CAAC,WAA2C,EAAA;IACvD,OAAO,IAAI,CAAC,KAAK,CAAC,qCAAqC,EAAE,iBAAiB,CAAC;EAC/E;EAEA,cAAc,CAAC,MAAuB,EAAE,KAA4C,EAAE,KAA0B,EAAA;IAC5G,OAAO,IAAI,CAAC,KAAK,CAAC,mCAAmC,EAAE,eAAe,CAAC;EAC3E;EAEA,OAAO,CAAC,QAAkB,EAAA;IACtB,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC;EACjD;;AACH,OAAA,CAAA,UAAA,GAAA,UAAA;;A8BtXD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtjznlJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AnE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,IAAI;MACA,OAAO,IAAA,mBAAU,EAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC;KAC9C,CAAC,OAAO,KAAK,EAAE;MAAE,OAAO,IAAI;;;EAGjC,OAAO,IAAI;AACf;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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1C;SACC,MAAM,IAAI,CAAC,IAAI,EAAE;UACd,OAAO,EAAE;UACT,IAAI,OAAO,GAAG,UAAU,EAAE;YACtB,IAAI,MAAM,CAAA,CAAE,EAAE;cAAE,MAAM,CAAC,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;;YACxD;;UAGJ,IAAI,OAAO,GAAG,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAA,CAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;UACvF,IAAI,OAAO,GAAG,OAAO,CAAC,KAAK,EAAE;YAAE,OAAO,GAAG,OAAO,CAAC,KAAK;;UACtD,IAAI,OAAO,GAAG,OAAO,CAAC,OAAO,EAAE;YAAE,OAAO,GAAG,OAAO,CAAC,OAAO;;UAE1D,UAAU,CAAC,KAAK,EAAE,OAAO,CAAC;;QAG9B,OAAO,IAAI;MACf,CAAC,EAAE,UAAS,KAAK,EAAA;QACb,IAAI,MAAM,CAAA,CAAE,EAAE;UAAE,MAAM,CAAC,KAAK,CAAC;;MACjC,CAAC,CAAC;IACN;IACA,KAAK,CAAA,CAAE;EACX,CAAC,CAAC;AACN;;A0EnaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","file":"game-web3wallet-main.e31bb0bc.js","sourceRoot":"..","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; };\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) });\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: true });\n  defineProperty(\n    GeneratorFunctionPrototype,\n    \"constructor\",\n    { value: GeneratorFunction, configurable: true }\n  );\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    defineProperty(this, \"_invoke\", { value: enqueue });\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method;\n    var method = delegate.iterator[methodName];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method, or a missing .next mehtod, always terminate the\n      // yield* loop.\n      context.delegate = null;\n\n      // Note: [\"return\"] must be used for ES3 parsing compatibility.\n      if (methodName === \"throw\" && delegate.iterator[\"return\"]) {\n        // If the delegate iterator has a return method, give it a\n        // chance to clean up.\n        context.method = \"return\";\n        context.arg = undefined;\n        maybeInvokeDelegate(delegate, context);\n\n        if (context.method === \"throw\") {\n          // If maybeInvokeDelegate(context) changed context.method from\n          // \"return\" to \"throw\", let that override the TypeError below.\n          return ContinueSentinel;\n        }\n      }\n      if (methodName !== \"return\") {\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a '\" + methodName + \"' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(val) {\n    var object = Object(val);\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","export const version = \"logger/5.5.0\";\n","\"use strict\";\n\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\n\nconst LogLevels: { [ name: string ]: number } = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\n\nimport { version } from \"./_version\";\n\nlet _globalLogger: Logger = null;\n\nfunction _checkNormalize(): string {\n    try {\n        const missing: Array<string> = [ ];\n\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                };\n            } catch(error) {\n                missing.push(form);\n            }\n        });\n\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\")\n        }\n    } catch (error) {\n        return error.message;\n    }\n\n    return null;\n}\n\nconst _normalizeError = _checkNormalize();\n\nexport enum LogLevel {\n    DEBUG    = \"DEBUG\",\n    INFO     = \"INFO\",\n    WARNING  = \"WARNING\",\n    ERROR    = \"ERROR\",\n    OFF      = \"OFF\"\n}\n\n\nexport enum ErrorCode {\n\n    ///////////////////\n    // Generic Errors\n\n    // Unknown Error\n    UNKNOWN_ERROR = \"UNKNOWN_ERROR\",\n\n    // Not Implemented\n    NOT_IMPLEMENTED = \"NOT_IMPLEMENTED\",\n\n    // Unsupported Operation\n    //   - operation\n    UNSUPPORTED_OPERATION = \"UNSUPPORTED_OPERATION\",\n\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    NETWORK_ERROR = \"NETWORK_ERROR\",\n\n    // Some sort of bad response from the server\n    SERVER_ERROR = \"SERVER_ERROR\",\n\n    // Timeout\n    TIMEOUT = \"TIMEOUT\",\n\n    ///////////////////\n    // Operational  Errors\n\n    // Buffer Overrun\n    BUFFER_OVERRUN = \"BUFFER_OVERRUN\",\n\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    NUMERIC_FAULT = \"NUMERIC_FAULT\",\n\n\n    ///////////////////\n    // Argument Errors\n\n    // Missing new operator to an object\n    //  - name: The name of the class\n    MISSING_NEW = \"MISSING_NEW\",\n\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    INVALID_ARGUMENT = \"INVALID_ARGUMENT\",\n\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    MISSING_ARGUMENT = \"MISSING_ARGUMENT\",\n\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    UNEXPECTED_ARGUMENT = \"UNEXPECTED_ARGUMENT\",\n\n\n    ///////////////////\n    // Blockchain Errors\n\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    CALL_EXCEPTION = \"CALL_EXCEPTION\",\n\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    INSUFFICIENT_FUNDS = \"INSUFFICIENT_FUNDS\",\n\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    NONCE_EXPIRED = \"NONCE_EXPIRED\",\n\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    REPLACEMENT_UNDERPRICED = \"REPLACEMENT_UNDERPRICED\",\n\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    UNPREDICTABLE_GAS_LIMIT = \"UNPREDICTABLE_GAS_LIMIT\",\n\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    TRANSACTION_REPLACED = \"TRANSACTION_REPLACED\",\n};\n\nconst HEX = \"0123456789abcdef\";\n\nexport class Logger {\n    readonly version: string;\n\n    static errors = ErrorCode;\n\n    static levels = LogLevel;\n\n    constructor(version: string) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n\n    _log(logLevel: LogLevel, args: Array<any>): void {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) { return; }\n        console.log.apply(console, args);\n    }\n\n    debug(...args: Array<any>): void {\n        this._log(Logger.levels.DEBUG, args);\n    }\n\n    info(...args: Array<any>): void {\n        this._log(Logger.levels.INFO, args);\n    }\n\n    warn(...args: Array<any>): void {\n        this._log(Logger.levels.WARNING, args);\n    }\n\n    makeError(message: string, code?: ErrorCode, params?: any): Error {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, { });\n        }\n\n        if (!code) { code = Logger.errors.UNKNOWN_ERROR; }\n        if (!params) { params = {}; }\n\n        const messageDetails: Array<string> = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                      hex += HEX[value[i] >> 4];\n                      hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                } else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            } catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${ code }`);\n        messageDetails.push(`version=${ this.version }`);\n\n        const reason = message;\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n\n        // @TODO: Any??\n        const error: any = new Error(message);\n        error.reason = reason;\n        error.code = code\n\n        Object.keys(params).forEach(function(key) {\n            error[key] = params[key];\n        });\n\n        return error;\n    }\n\n    throwError(message: string, code?: ErrorCode, params?: any): never {\n        throw this.makeError(message, code, params);\n    }\n\n    throwArgumentError(message: string, name: string, value: any): never {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n\n    assert(condition: any, message: string, code?: ErrorCode, params?: any): void {\n        if (!!condition) { return; }\n        this.throwError(message, code, params);\n    }\n\n    assertArgument(condition: any, message: string, name: string, value: any): void {\n        if (!!condition) { return; }\n        this.throwArgumentError(message, name, value);\n    }\n\n    checkNormalize(message?: string): void {\n        if (message == null) { message = \"platform missing String.prototype.normalize\"; }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n\n    checkSafeUint53(value: number, message?: string): void {\n        if (typeof(value) !== \"number\") { return; }\n\n        if (message == null) { message = \"value not safe\"; }\n\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n\n    checkArgumentCount(count: number, expectedCount: number, message?: string): void {\n        if (message) {\n            message = \": \" + message;\n        } else {\n            message = \"\";\n        }\n\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n\n    checkNew(target: any, kind: any): void {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    checkAbstract(target: any, kind: any): void {\n        if (target === kind) {\n            this.throwError(\n                \"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { name: target.name, operation: \"new\" }\n            );\n        } else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    static globalLogger(): Logger {\n        if (!_globalLogger) { _globalLogger = new Logger(version); }\n        return _globalLogger;\n    }\n\n    static setCensorship(censorship: boolean, permanent?: boolean): void {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        if (_permanentCensorErrors) {\n            if (!censorship) { return; }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n\n    static setLogLevel(logLevel: LogLevel): void {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n\n    static from(version: string): Logger {\n        return new Logger(version);\n    }\n}\n","\"use strict\";\n\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\n\nimport _BN from \"bn.js\";\nimport BN = _BN.BN;\n\nimport { Bytes, Hexable, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst _constructorGuard = { };\n\nconst MAX_SAFE = 0x1fffffffffffff;\n\n\nexport type BigNumberish = BigNumber | Bytes | bigint | string | number;\n\nexport function isBigNumberish(value: any): value is BigNumberish {\n    return (value != null) && (\n        BigNumber.isBigNumber(value) ||\n        (typeof(value) === \"number\" && (value % 1) === 0) ||\n        (typeof(value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof(value) === \"bigint\") ||\n        isBytes(value)\n    );\n}\n\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\n\nexport class BigNumber implements Hexable {\n    readonly _hex: string;\n    readonly _isBigNumber: boolean;\n\n    constructor(constructorGuard: any, hex: string) {\n        logger.checkNew(new.target, BigNumber);\n\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n\n        this._hex = hex;\n        this._isBigNumber = true;\n\n        Object.freeze(this);\n    }\n\n    fromTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n\n    toTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n\n    abs(): BigNumber {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n\n    add(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n\n    sub(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n\n    div(other: BigNumberish): BigNumber {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division by zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n\n    mul(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n\n    mod(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"cannot modulo negative values\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n\n    pow(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"cannot raise to negative values\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n\n    and(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"cannot 'and' negative values\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n\n    or(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"cannot 'or' negative values\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n\n    xor(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"cannot 'xor' negative values\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n\n    mask(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"cannot mask negative values\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n\n    shl(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"cannot shift negative values\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n\n    shr(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"cannot shift negative values\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n\n    eq(other: BigNumberish): boolean {\n        return toBN(this).eq(toBN(other));\n    }\n\n    lt(other: BigNumberish): boolean {\n        return toBN(this).lt(toBN(other));\n    }\n\n    lte(other: BigNumberish): boolean {\n        return toBN(this).lte(toBN(other));\n    }\n\n    gt(other: BigNumberish): boolean {\n        return toBN(this).gt(toBN(other));\n   }\n\n    gte(other: BigNumberish): boolean {\n        return toBN(this).gte(toBN(other));\n    }\n\n    isNegative(): boolean {\n        return (this._hex[0] === \"-\");\n    }\n\n    isZero(): boolean {\n        return toBN(this).isZero();\n    }\n\n    toNumber(): number {\n        try {\n            return toBN(this).toNumber();\n        } catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n\n    toBigInt(): bigint {\n        try {\n            return BigInt(this.toString());\n        } catch (e) { }\n\n        return logger.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n\n    toString(): string {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            } else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            } else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            }\n        }\n        return toBN(this).toString(10);\n    }\n\n    toHexString(): string {\n        return this._hex;\n    }\n\n    toJSON(key?: string): any {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n\n    static from(value: any): BigNumber {\n        if (value instanceof BigNumber) { return value; }\n\n        if (typeof(value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n\n        if (typeof(value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n\n            return BigNumber.from(String(value));\n        }\n\n        const anyValue = <any>value;\n\n        if (typeof(anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n\n        if (isBytes(anyValue)) {\n            return BigNumber.from(hexlify(anyValue));\n        }\n\n        if (anyValue) {\n\n            // Hexable interface (takes priority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof(hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n\n            } else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n\n                if (typeof(hex) === \"string\") {\n                    if (isHexString(hex) || (hex[0] === \"-\" && isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n\n    static isBigNumber(value: any): value is BigNumber {\n        return !!(value && value._isBigNumber);\n    }\n}\n\n// Normalize the hex string\nfunction toHex(value: string | BN): string {\n\n    // For BN, call on the hex string\n    if (typeof(value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n\n        // Cannot have multiple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") { logger.throwArgumentError(\"invalid hex\", \"value\", value); }\n\n        // Call toHex on the positive component\n        value = toHex(value);\n\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") { return value; }\n\n        // Negate the value\n        return \"-\" + value;\n    }\n\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n\n    // Normalize zero\n    if (value === \"0x\") { return \"0x00\"; }\n\n    // Make the string even length\n    if (value.length % 2) { value = \"0x0\" + value.substring(2); }\n\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n\n    return value;\n}\n\nfunction toBigNumber(value: BN): BigNumber {\n    return BigNumber.from(toHex(value));\n}\n\nfunction toBN(value: BigNumberish): BN {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\n\nfunction throwFault(fault: string, operation: string, value?: any): never {\n    const params: any = { fault: fault, operation: operation };\n    if (value != null) { params.value = value; }\n\n    return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n\n// value should have no prefix\nexport function _base36To16(value: string): string {\n    return (new BN(value, 36)).toString(16);\n}\n\n// value should have no prefix\nexport function _base16To36(value: string): string {\n    return (new BN(value, 16)).toString(36);\n}\n","\"use strict\";\n\nimport { arrayify, BytesLike, hexZeroPad, isBytes } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BigNumber, BigNumberish, isBigNumberish } from \"./bignumber\";\n\nconst _constructorGuard = { };\n\nconst Zero = BigNumber.from(0);\nconst NegativeOne = BigNumber.from(-1);\n\nfunction throwFault(message: string, fault: string, operation: string, value?: any): never {\n    const params: any = { fault: fault, operation: operation };\n    if (value !== undefined) { params.value = value; }\n    return logger.throwError(message, Logger.errors.NUMERIC_FAULT, params);\n}\n\n// Constant to pull zeros from for multipliers\nlet zeros = \"0\";\nwhile (zeros.length < 256) { zeros += zeros; }\n\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getMultiplier(decimals: BigNumberish): string {\n\n    if (typeof(decimals) !== \"number\") {\n        try {\n            decimals = BigNumber.from(decimals).toNumber();\n        } catch (e) { }\n    }\n\n    if (typeof(decimals) === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n        return (\"1\" + zeros.substring(0, decimals));\n    }\n\n    return logger.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\n\nexport function formatFixed(value: BigNumberish, decimals?: string | BigNumberish): string {\n    if (decimals == null) { decimals = 0; }\n    const multiplier = getMultiplier(decimals);\n\n    // Make sure wei is a big number (convert as necessary)\n    value = BigNumber.from(value);\n\n    const negative = value.lt(Zero);\n    if (negative) { value = value.mul(NegativeOne); }\n\n    let fraction = value.mod(multiplier).toString();\n    while (fraction.length < multiplier.length - 1) { fraction = \"0\" + fraction; }\n\n    // Strip training 0\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n\n    const whole = value.div(multiplier).toString();\n    if (multiplier.length === 1) {\n        value = whole;\n    } else {\n        value = whole + \".\" + fraction;\n    }\n\n    if (negative) { value = \"-\" + value; }\n\n    return value;\n}\n\nexport function parseFixed(value: string, decimals?: BigNumberish): BigNumber {\n\n    if (decimals == null) { decimals = 0; }\n    const multiplier = getMultiplier(decimals);\n\n    if (typeof(value) !== \"string\" || !value.match(/^-?[0-9.]+$/)) {\n        logger.throwArgumentError(\"invalid decimal value\", \"value\", value);\n    }\n\n    // Is it negative?\n    const negative = (value.substring(0, 1) === \"-\");\n    if (negative) { value = value.substring(1); }\n\n    if (value === \".\") {\n        logger.throwArgumentError(\"missing value\", \"value\", value);\n    }\n\n    // Split it into a whole and fractional part\n    const comps = value.split(\".\");\n    if (comps.length > 2) {\n        logger.throwArgumentError(\"too many decimal points\", \"value\", value);\n    }\n\n    let whole = comps[0], fraction = comps[1];\n    if (!whole) { whole = \"0\"; }\n    if (!fraction) { fraction = \"0\"; }\n\n    // Trim trailing zeros\n    while (fraction[fraction.length - 1] === \"0\") {\n        fraction = fraction.substring(0, fraction.length - 1);\n    }\n\n    // Check the fraction doesn't exceed our decimals size\n    if (fraction.length > multiplier.length - 1) {\n        throwFault(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n    }\n\n    // If decimals is 0, we have an empty string for fraction\n    if (fraction === \"\") { fraction = \"0\"; }\n\n    // Fully pad the string with zeros to get to wei\n    while (fraction.length < multiplier.length - 1) { fraction += \"0\"; }\n\n    const wholeValue = BigNumber.from(whole);\n    const fractionValue = BigNumber.from(fraction);\n\n    let wei = (wholeValue.mul(multiplier)).add(fractionValue);\n\n    if (negative) { wei = wei.mul(NegativeOne); }\n\n    return wei;\n}\n\n\nexport class FixedFormat {\n    readonly signed: boolean;\n    readonly width: number;\n    readonly decimals: number;\n    readonly name: string;\n    readonly _multiplier: string;\n\n    constructor(constructorGuard: any, signed: boolean, width: number, decimals: number) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n\n        this.signed = signed;\n        this.width = width;\n        this.decimals = decimals;\n\n        this.name = (signed ? \"\": \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n\n        this._multiplier = getMultiplier(decimals);\n\n        Object.freeze(this);\n    }\n\n    static from(value: any): FixedFormat {\n        if (value instanceof FixedFormat) { return value; }\n\n        if (typeof(value) === \"number\") {\n            value = `fixed128x${value}`\n        }\n\n        let signed = true;\n        let width = 128;\n        let decimals = 18;\n\n        if (typeof(value) === \"string\") {\n            if (value === \"fixed\") {\n                // defaults...\n            } else if (value === \"ufixed\") {\n                signed = false;\n            } else {\n                const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                if (!match) { logger.throwArgumentError(\"invalid fixed format\", \"format\", value); }\n                signed = (match[1] !== \"u\");\n                width = parseInt(match[2]);\n                decimals = parseInt(match[3]);\n            }\n        } else if (value) {\n            const check = (key: string, type: string, defaultValue: any): any => {\n                if (value[key] == null) { return defaultValue; }\n                if (typeof(value[key]) !== type) {\n                    logger.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type +\")\", \"format.\" + key, value[key]);\n                }\n                return value[key];\n            }\n            signed = check(\"signed\", \"boolean\", signed);\n            width = check(\"width\", \"number\", width);\n            decimals = check(\"decimals\", \"number\", decimals);\n        }\n\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n        }\n\n        if (decimals > 80) {\n            logger.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n        }\n\n        return new FixedFormat(_constructorGuard, signed, width, decimals);\n    }\n}\n\nexport class FixedNumber {\n    readonly format: FixedFormat;\n    readonly _hex: string;\n    readonly _value: string;\n\n    readonly _isFixedNumber: boolean;\n\n    constructor(constructorGuard: any, hex: string, value: string, format?: FixedFormat) {\n        logger.checkNew(new.target, FixedNumber);\n\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n\n        this.format = format;\n        this._hex = hex;\n        this._value = value;\n\n        this._isFixedNumber = true;\n\n        Object.freeze(this);\n    }\n\n    _checkFormat(other: FixedNumber): void {\n        if (this.format.name !== other.format.name) {\n            logger.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n        }\n    }\n\n    addUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);\n    }\n\n    subUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);\n    }\n\n    mulUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);\n    }\n\n    divUnsafe(other: FixedNumber): FixedNumber {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);\n    }\n\n    floor(): FixedNumber {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) { comps.push(\"0\"); }\n\n        let result = FixedNumber.from(comps[0], this.format);\n\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (this.isNegative() && hasFraction) {\n            result = result.subUnsafe(ONE.toFormat(result.format));\n        }\n\n        return result;\n    }\n\n    ceiling(): FixedNumber {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) { comps.push(\"0\"); }\n\n        let result = FixedNumber.from(comps[0], this.format);\n\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (!this.isNegative() && hasFraction) {\n            result = result.addUnsafe(ONE.toFormat(result.format));\n        }\n\n        return result;\n    }\n\n    // @TODO: Support other rounding algorithms\n    round(decimals?: number): FixedNumber {\n        if (decimals == null) { decimals = 0; }\n\n        // If we are already in range, we're done\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) { comps.push(\"0\"); }\n\n        if (decimals < 0 || decimals > 80 || (decimals % 1)) {\n            logger.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n        }\n\n        if (comps[1].length <= decimals) { return this; }\n\n        const factor = FixedNumber.from(\"1\" + zeros.substring(0, decimals), this.format);\n        const bump = BUMP.toFormat(this.format);\n\n        return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);\n    }\n\n    isZero(): boolean {\n        return (this._value === \"0.0\" || this._value === \"0\");\n    }\n\n    isNegative(): boolean {\n        return (this._value[0] === \"-\");\n    }\n\n    toString(): string { return this._value; }\n\n    toHexString(width?: number): string {\n        if (width == null) { return this._hex; }\n        if (width % 8) { logger.throwArgumentError(\"invalid byte width\", \"width\", width); }\n        const hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n        return hexZeroPad(hex, width / 8);\n    }\n\n    toUnsafeFloat(): number { return parseFloat(this.toString()); }\n\n    toFormat(format: FixedFormat | string): FixedNumber {\n        return FixedNumber.fromString(this._value, format);\n    }\n\n\n    static fromValue(value: BigNumber, decimals?: BigNumberish, format?: FixedFormat | string | number): FixedNumber {\n        // If decimals looks more like a format, and there is no format, shift the parameters\n        if (format == null && decimals != null && !isBigNumberish(decimals)) {\n            format = decimals;\n            decimals = null;\n        }\n\n        if (decimals == null) { decimals = 0; }\n        if (format == null) { format = \"fixed\"; }\n\n        return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n    }\n\n\n    static fromString(value: string, format?: FixedFormat | string | number): FixedNumber {\n        if (format == null) { format = \"fixed\"; }\n\n        const fixedFormat = FixedFormat.from(format);\n\n        const numeric = parseFixed(value, fixedFormat.decimals);\n\n        if (!fixedFormat.signed && numeric.lt(Zero)) {\n            throwFault(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n        }\n\n        let hex: string = null;\n        if (fixedFormat.signed) {\n            hex = numeric.toTwos(fixedFormat.width).toHexString();\n        } else {\n            hex = numeric.toHexString();\n            hex = hexZeroPad(hex, fixedFormat.width / 8);\n        }\n\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n\n    static fromBytes(value: BytesLike, format?: FixedFormat | string | number): FixedNumber {\n        if (format == null) { format = \"fixed\"; }\n\n        const fixedFormat = FixedFormat.from(format);\n\n        if (arrayify(value).length > fixedFormat.width / 8) {\n            throw new Error(\"overflow\");\n        }\n\n        let numeric = BigNumber.from(value);\n        if (fixedFormat.signed) { numeric = numeric.fromTwos(fixedFormat.width); }\n\n        const hex = numeric.toTwos((fixedFormat.signed ? 0: 1) + fixedFormat.width).toHexString();\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n\n    static from(value: any, format?: FixedFormat | string | number) {\n        if (typeof(value) === \"string\") {\n            return FixedNumber.fromString(value, format);\n        }\n\n        if (isBytes(value)) {\n            return FixedNumber.fromBytes(value, format);\n        }\n\n        try {\n            return FixedNumber.fromValue(value, 0, format);\n        } catch (error) {\n            // Allow NUMERIC_FAULT to bubble up\n            if (error.code !== Logger.errors.INVALID_ARGUMENT) {\n                throw error;\n            }\n        }\n\n        return logger.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n    }\n\n    static isFixedNumber(value: any): value is FixedNumber {\n        return !!(value && value._isFixedNumber);\n    }\n}\n\nconst ONE = FixedNumber.from(1);\nconst BUMP = FixedNumber.from(\"0.5\");\n","\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport interface JsonFragmentType {\n    readonly name?: string;\n    readonly indexed?: boolean;\n    readonly type?: string;\n    readonly internalType?: any; // @TODO: in v6 reduce type\n    readonly components?: ReadonlyArray<JsonFragmentType>;\n}\n\nexport interface JsonFragment {\n    readonly name?: string;\n    readonly type?: string;\n\n    readonly anonymous?: boolean;\n\n    readonly payable?: boolean;\n    readonly constant?: boolean;\n    readonly stateMutability?: string;\n\n    readonly inputs?: ReadonlyArray<JsonFragmentType>;\n    readonly outputs?: ReadonlyArray<JsonFragmentType>;\n\n    readonly gas?: string;\n};\n\nconst _constructorGuard = { };\n\n// AST Node parser state\ntype ParseState = {\n    allowArray?: boolean,\n    allowName?: boolean,\n    allowParams?: boolean,\n    allowType?: boolean,\n    readArray?: boolean,\n};\n\n// AST Node\ntype ParseNode = {\n    parent?: any,\n    type?: string,\n    name?: string,\n    state?: ParseState,\n    indexed?: boolean,\n    components?: Array<ParseNode>\n};\n\nlet ModifiersBytes: { [ name: string ]: boolean } = { calldata: true, memory: true, storage: true };\nlet ModifiersNest: { [ name: string ]: boolean } = { calldata: true, memory: true };\nfunction checkModifier(type: string, name: string): boolean {\n    if (type === \"bytes\" || type === \"string\") {\n        if (ModifiersBytes[name]) { return true; }\n    } else if (type === \"address\") {\n        if (name === \"payable\") { return true; }\n    } else if (type.indexOf(\"[\") >= 0 || type === \"tuple\") {\n        if (ModifiersNest[name]) { return true; }\n    }\n    if (ModifiersBytes[name] || name === \"payable\") {\n        logger.throwArgumentError(\"invalid modifier\", \"name\", name);\n    }\n    return false;\n}\n\n// @TODO: Make sure that children of an indexed tuple are marked with a null indexed\nfunction parseParamType(param: string, allowIndexed: boolean): ParseNode {\n\n    let originalParam = param;\n    function throwError(i: number) {\n        logger.throwArgumentError(`unexpected character at position ${ i }`, \"param\", param);\n    }\n    param = param.replace(/\\s/g, \" \");\n\n    function newNode(parent: ParseNode): ParseNode {\n        let node: ParseNode = { type: \"\", name: \"\", parent: parent, state: { allowType: true } };\n        if (allowIndexed) { node.indexed = false; }\n        return node\n    }\n\n    let parent: ParseNode = { type: \"\", name: \"\", state: { allowType: true } };\n    let node = parent;\n\n    for (let i = 0; i < param.length; i++) {\n        let c = param[i];\n        switch (c) {\n            case \"(\":\n                if (node.state.allowType && node.type === \"\") {\n                    node.type = \"tuple\";\n                } else if (!node.state.allowParams) {\n                    throwError(i);\n                }\n                node.state.allowType = false;\n                node.type = verifyType(node.type);\n                node.components = [ newNode(node) ];\n                node = node.components[0];\n                break;\n\n            case \")\":\n                delete node.state;\n\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) { throwError(i); }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n\n                if (checkModifier(node.type, node.name)) { node.name = \"\"; }\n\n                node.type = verifyType(node.type);\n\n                let child = node;\n                node = node.parent;\n                if (!node) { throwError(i); }\n                delete child.parent;\n                node.state.allowParams = false;\n                node.state.allowName = true;\n                node.state.allowArray = true;\n                break;\n\n            case \",\":\n                delete node.state;\n\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) { throwError(i); }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n\n                if (checkModifier(node.type, node.name)) { node.name = \"\"; }\n\n                node.type = verifyType(node.type);\n\n                let sibling: ParseNode = newNode(node.parent);\n                 //{ type: \"\", name: \"\", parent: node.parent, state: { allowType: true } };\n                node.parent.components.push(sibling);\n                delete node.parent;\n                node = sibling;\n                break;\n\n            // Hit a space...\n            case \" \":\n\n                // If reading type, the type is done and may read a param or name\n                if (node.state.allowType) {\n                    if (node.type !== \"\") {\n                        node.type = verifyType(node.type);\n                        delete node.state.allowType;\n                        node.state.allowName = true;\n                        node.state.allowParams = true;\n                    }\n                }\n\n                // If reading name, the name is done\n                if (node.state.allowName) {\n                    if (node.name !== \"\") {\n                        if (node.name === \"indexed\") {\n                            if (!allowIndexed) { throwError(i); }\n                            if (node.indexed) { throwError(i); }\n                            node.indexed = true;\n                            node.name = \"\";\n                        } else if (checkModifier(node.type, node.name)) {\n                            node.name = \"\";\n                        } else {\n                            node.state.allowName = false;\n                        }\n                    }\n                }\n\n                break;\n\n            case \"[\":\n                if (!node.state.allowArray) { throwError(i); }\n\n                node.type += c;\n\n                node.state.allowArray = false;\n                node.state.allowName = false;\n                node.state.readArray = true;\n                break;\n\n            case \"]\":\n                if (!node.state.readArray) { throwError(i); }\n\n                node.type += c;\n\n                node.state.readArray = false;\n                node.state.allowArray = true;\n                node.state.allowName = true;\n                break;\n\n            default:\n                if (node.state.allowType) {\n                    node.type += c;\n                    node.state.allowParams = true;\n                    node.state.allowArray = true;\n                } else if (node.state.allowName) {\n                    node.name += c;\n                    delete node.state.allowArray;\n                } else if (node.state.readArray) {\n                    node.type += c;\n                } else {\n                    throwError(i);\n               }\n        }\n    }\n\n    if (node.parent) { logger.throwArgumentError(\"unexpected eof\", \"param\", param); }\n\n    delete parent.state;\n\n    if (node.name === \"indexed\") {\n        if (!allowIndexed) { throwError(originalParam.length - 7); }\n        if (node.indexed) { throwError(originalParam.length - 7); }\n        node.indexed = true;\n        node.name = \"\";\n    } else if (checkModifier(node.type, node.name)) {\n        node.name = \"\";\n    }\n\n    parent.type = verifyType(parent.type);\n\n    return parent;\n}\n\nfunction populate(object: any, params: any) {\n    for (let key in params) { defineReadOnly(object, key, params[key]); }\n}\n\nexport const FormatTypes: { [ name: string ]: string } = Object.freeze({\n    // Bare formatting, as is needed for computing a sighash of an event or function\n    sighash: \"sighash\",\n\n    // Human-Readable with Minimal spacing and without names (compact human-readable)\n    minimal: \"minimal\",\n\n    // Human-Readable with nice spacing, including all names\n    full: \"full\",\n\n    // JSON-format a la Solidity\n    json: \"json\"\n});\n\nconst paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\n\nexport class ParamType {\n\n    // The local name of the parameter (of null if unbound)\n    readonly name: string;\n\n    // The fully qualified type (e.g. \"address\", \"tuple(address)\", \"uint256[3][]\"\n    readonly type: string;\n\n    // The base type (e.g. \"address\", \"tuple\", \"array\")\n    readonly baseType: string;\n\n    // Indexable Paramters ONLY (otherwise null)\n    readonly indexed: boolean;\n\n    // Tuples ONLY: (otherwise null)\n    //  - sub-components\n    readonly components: Array<ParamType>;\n\n    // Arrays ONLY: (otherwise null)\n    //  - length of the array (-1 for dynamic length)\n    //  - child type\n    readonly arrayLength: number;\n    readonly arrayChildren: ParamType;\n\n    readonly _isParamType: boolean;\n\n    constructor(constructorGuard: any, params: any) {\n        if (constructorGuard !== _constructorGuard) { logger.throwError(\"use fromString\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new ParamType()\"\n        }); }\n        populate(this, params);\n\n        let match = this.type.match(paramTypeArray);\n        if (match) {\n            populate(this, {\n                arrayLength: parseInt(match[2] || \"-1\"),\n                arrayChildren: ParamType.fromObject({\n                    type: match[1],\n                    components: this.components\n                }),\n                baseType: \"array\"\n            });\n        } else {\n            populate(this, {\n                arrayLength: null,\n                arrayChildren: null,\n                baseType: ((this.components != null) ? \"tuple\": this.type)\n            });\n        }\n\n        this._isParamType = true;\n\n        Object.freeze(this);\n    }\n\n    // Format the parameter fragment\n    //   - sighash: \"(uint256,address)\"\n    //   - minimal: \"tuple(uint256,address) indexed\"\n    //   - full:    \"tuple(uint256 foo, address bar) indexed baz\"\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            let result: any = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\": this.type),\n                name: (this.name || undefined)\n            };\n            if (typeof(this.indexed) === \"boolean\") { result.indexed = this.indexed; }\n            if (this.components) {\n                result.components = this.components.map((comp) => JSON.parse(comp.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n\n        let result = \"\";\n\n        // Array\n        if (this.baseType === \"array\") {\n            result += this.arrayChildren.format(format);\n            result += \"[\" + (this.arrayLength < 0 ? \"\": String(this.arrayLength)) + \"]\";\n        } else {\n            if (this.baseType === \"tuple\") {\n                if (format !== FormatTypes.sighash) {\n                    result += this.type;\n                }\n                result += \"(\" + this.components.map(\n                    (comp) => comp.format(format)\n                ).join((format === FormatTypes.full) ? \", \": \",\") + \")\";\n            } else {\n                result += this.type;\n            }\n        }\n\n        if (format !== FormatTypes.sighash) {\n            if (this.indexed === true) { result += \" indexed\"; }\n            if (format === FormatTypes.full && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n\n        return result;\n    }\n\n    static from(value: string | JsonFragmentType | ParamType, allowIndexed?: boolean): ParamType {\n        if (typeof(value) === \"string\") {\n            return ParamType.fromString(value, allowIndexed);\n        }\n        return ParamType.fromObject(value);\n    }\n\n    static fromObject(value: JsonFragmentType | ParamType): ParamType {\n        if (ParamType.isParamType(value)) { return value; }\n\n        return new ParamType(_constructorGuard, {\n            name: (value.name || null),\n            type: verifyType(value.type),\n            indexed: ((value.indexed == null) ? null: !!value.indexed),\n            components: (value.components ? value.components.map(ParamType.fromObject): null)\n        });\n    }\n\n    static fromString(value: string, allowIndexed?: boolean): ParamType {\n        function ParamTypify(node: ParseNode): ParamType {\n            return ParamType.fromObject({\n                name: node.name,\n                type: node.type,\n                indexed: node.indexed,\n                components: node.components\n            });\n        }\n\n        return ParamTypify(parseParamType(value, !!allowIndexed));\n    }\n\n    static isParamType(value: any): value is ParamType {\n        return !!(value != null && value._isParamType);\n    }\n};\n\nfunction parseParams(value: string, allowIndex: boolean): Array<ParamType> {\n    return splitNesting(value).map((param) => ParamType.fromString(param, allowIndex));\n}\n\ntype TypeCheck<T> = { -readonly [ K in keyof T ]: T[K] };\n\ninterface _Fragment {\n    readonly type: string;\n    readonly name: string;\n    readonly inputs: ReadonlyArray<ParamType>;\n}\n\nexport abstract class Fragment {\n\n    readonly type: string;\n    readonly name: string;\n    readonly inputs: Array<ParamType>;\n\n    readonly _isFragment: boolean;\n\n    constructor(constructorGuard: any, params: any) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use a static from method\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new Fragment()\"\n            });\n        }\n        populate(this, params);\n\n        this._isFragment = true;\n\n        Object.freeze(this);\n    }\n\n    abstract format(format?: string): string;\n\n    static from(value: Fragment | JsonFragment | string): Fragment {\n        if (Fragment.isFragment(value)) { return value; }\n\n        if (typeof(value) === \"string\") {\n            return Fragment.fromString(value);\n        }\n\n        return Fragment.fromObject(value);\n    }\n\n    static fromObject(value: Fragment | JsonFragment): Fragment {\n        if (Fragment.isFragment(value)) { return value; }\n\n        switch (value.type) {\n            case \"function\":\n                return FunctionFragment.fromObject(value);\n            case \"event\":\n                return EventFragment.fromObject(value);\n            case \"constructor\":\n                return ConstructorFragment.fromObject(value);\n            case \"error\":\n                return ErrorFragment.fromObject(value);\n            case \"fallback\":\n            case \"receive\":\n                // @TODO: Something? Maybe return a FunctionFragment? A custom DefaultFunctionFragment?\n                return null;\n        }\n\n        return logger.throwArgumentError(\"invalid fragment object\", \"value\", value);\n    }\n\n    static fromString(value: string): Fragment {\n        // Make sure the \"returns\" is surrounded by a space and all whitespace is exactly one space\n        value = value.replace(/\\s/g, \" \");\n        value = value.replace(/\\(/g, \" (\").replace(/\\)/g, \") \").replace(/\\s+/g, \" \");\n        value = value.trim();\n\n        if (value.split(\" \")[0] === \"event\") {\n           return EventFragment.fromString(value.substring(5).trim());\n        } else if (value.split(\" \")[0] === \"function\") {\n            return FunctionFragment.fromString(value.substring(8).trim());\n        } else if (value.split(\"(\")[0].trim() === \"constructor\") {\n            return ConstructorFragment.fromString(value.trim());\n        } else if (value.split(\" \")[0] === \"error\") {\n           return ErrorFragment.fromString(value.substring(5).trim());\n        }\n\n        return logger.throwArgumentError(\"unsupported fragment\", \"value\", value);\n    }\n\n    static isFragment(value: any): value is Fragment {\n        return !!(value && value._isFragment);\n    }\n}\n\ninterface _EventFragment extends _Fragment {\n    readonly anonymous: boolean;\n}\n\nexport class EventFragment extends Fragment {\n    readonly anonymous: boolean;\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n\n        let result = \"\";\n\n        if (format !== FormatTypes.sighash) {\n            result += \"event \";\n        }\n\n        result += this.name + \"(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        if (format !== FormatTypes.sighash) {\n            if (this.anonymous) {\n                result += \"anonymous \";\n            }\n        }\n\n        return result.trim();\n    }\n\n    static from(value: EventFragment | JsonFragment | string): EventFragment {\n        if (typeof(value) === \"string\") {\n            return EventFragment.fromString(value);\n        }\n        return EventFragment.fromObject(value);\n    }\n\n    static fromObject(value: JsonFragment | EventFragment): EventFragment {\n        if (EventFragment.isEventFragment(value)) { return value; }\n\n        if (value.type !== \"event\") {\n            logger.throwArgumentError(\"invalid event object\", \"value\", value);\n        }\n\n        const params: TypeCheck<_EventFragment> = {\n            name: verifyIdentifier(value.name),\n            anonymous: value.anonymous,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            type: \"event\"\n        };\n\n        return new EventFragment(_constructorGuard, params);\n    }\n\n    static fromString(value: string): EventFragment {\n\n        let match = value.match(regexParen);\n        if (!match) {\n            logger.throwArgumentError(\"invalid event string\", \"value\", value);\n        }\n\n        let anonymous = false;\n        match[3].split(\" \").forEach((modifier) => {\n            switch(modifier.trim()) {\n                case \"anonymous\":\n                    anonymous = true;\n                    break;\n                case \"\":\n                    break;\n                default:\n                    logger.warn(\"unknown modifier: \" + modifier);\n            }\n        });\n\n        return EventFragment.fromObject({\n            name: match[1].trim(),\n            anonymous: anonymous,\n            inputs: parseParams(match[2], true),\n            type: \"event\"\n        });\n    }\n\n    static isEventFragment(value: any): value is EventFragment {\n        return (value && value._isFragment && value.type === \"event\");\n    }\n}\n\nfunction parseGas(value: string, params: any): string {\n    params.gas = null;\n\n    let comps = value.split(\"@\");\n    if (comps.length !== 1) {\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature\", \"value\", value);\n        }\n        if (!comps[1].match(/^[0-9]+$/)) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature gas\", \"value\", value);\n        }\n        params.gas = BigNumber.from(comps[1]);\n        return comps[0];\n    }\n\n    return value;\n}\n\nfunction parseModifiers(value: string, params: any): void {\n    params.constant = false;\n    params.payable = false;\n    params.stateMutability = \"nonpayable\";\n\n    value.split(\" \").forEach((modifier) => {\n        switch (modifier.trim()) {\n            case \"constant\":\n                params.constant = true;\n                break;\n            case \"payable\":\n                params.payable = true;\n                params.stateMutability = \"payable\";\n                break;\n            case \"nonpayable\":\n                params.payable = false;\n                params.stateMutability = \"nonpayable\";\n                break;\n            case \"pure\":\n                params.constant = true;\n                params.stateMutability = \"pure\";\n                break;\n            case \"view\":\n                params.constant = true;\n                params.stateMutability = \"view\";\n                break;\n            case \"external\":\n            case \"public\":\n            case \"\":\n                break;\n            default:\n                console.log(\"unknown modifier: \" + modifier);\n        }\n    });\n}\n\ntype StateInputValue = {\n    constant?: boolean;\n    payable?: boolean;\n    stateMutability?: string;\n    type?: string;\n};\n\ntype StateOutputValue = {\n    constant: boolean;\n    payable: boolean;\n    stateMutability: string;\n};\n\nfunction verifyState(value: StateInputValue): StateOutputValue {\n    let result: any = {\n        constant: false,\n        payable: true,\n        stateMutability: \"payable\"\n    };\n\n    if (value.stateMutability != null) {\n        result.stateMutability = value.stateMutability;\n\n        // Set (and check things are consistent) the constant property\n        result.constant = (result.stateMutability === \"view\" || result.stateMutability === \"pure\");\n        if (value.constant != null) {\n            if ((!!value.constant) !== result.constant) {\n                logger.throwArgumentError(\"cannot have constant function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n\n        // Set (and check things are consistent) the payable property\n        result.payable = (result.stateMutability === \"payable\");\n        if (value.payable != null) {\n            if ((!!value.payable) !== result.payable) {\n                logger.throwArgumentError(\"cannot have payable function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n\n    } else if (value.payable != null) {\n        result.payable = !!value.payable;\n\n        // If payable we can assume non-constant; otherwise we can't assume\n        if (value.constant == null && !result.payable && value.type !== \"constructor\") {\n            logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n        }\n\n        result.constant = !!value.constant;\n\n        if (result.constant) {\n            result.stateMutability = \"view\";\n        } else {\n            result.stateMutability = (result.payable ? \"payable\": \"nonpayable\");\n        }\n\n        if (result.payable && result.constant) {\n            logger.throwArgumentError(\"cannot have constant payable function\", \"value\", value);\n        }\n\n    } else if (value.constant != null) {\n        result.constant = !!value.constant;\n        result.payable = !result.constant;\n        result.stateMutability = (result.constant ? \"view\": \"payable\");\n\n    } else if (value.type !== \"constructor\") {\n        logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n    }\n\n    return result;\n}\n\ninterface _ConstructorFragment extends _Fragment {\n    stateMutability: string;\n    payable: boolean;\n    gas?: BigNumber;\n}\n\nexport class ConstructorFragment extends Fragment {\n    stateMutability: string;\n    payable: boolean;\n    gas?: BigNumber;\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability: undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber(): undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n\n        if (format === FormatTypes.sighash) {\n            logger.throwError(\"cannot format a constructor for sighash\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"format(sighash)\"\n            });\n        }\n\n        let result = \"constructor(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        if (this.stateMutability && this.stateMutability !== \"nonpayable\") {\n            result += this.stateMutability + \" \";\n        }\n\n        return result.trim();\n    }\n\n    static from(value: ConstructorFragment | JsonFragment | string): ConstructorFragment {\n        if (typeof(value) === \"string\") {\n            return ConstructorFragment.fromString(value);\n        }\n        return ConstructorFragment.fromObject(value);\n    }\n\n    static fromObject(value: ConstructorFragment | JsonFragment): ConstructorFragment {\n        if (ConstructorFragment.isConstructorFragment(value)) { return value; }\n\n        if (value.type !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor object\", \"value\", value);\n        }\n\n        let state = verifyState(value);\n        if (state.constant) {\n            logger.throwArgumentError(\"constructor cannot be constant\", \"value\", value);\n        }\n\n        const params: TypeCheck<_ConstructorFragment> = {\n            name: null,\n            type: value.type,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject): []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas): null)\n        };\n\n        return new ConstructorFragment(_constructorGuard, params);\n    }\n\n    static fromString(value: string): ConstructorFragment {\n        let params: any = { type: \"constructor\" };\n\n        value = parseGas(value, params);\n\n        let parens = value.match(regexParen);\n        if (!parens || parens[1].trim() !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor string\", \"value\", value);\n        }\n\n        params.inputs = parseParams(parens[2].trim(), false);\n\n        parseModifiers(parens[3].trim(), params);\n\n        return ConstructorFragment.fromObject(params);\n    }\n\n    static isConstructorFragment(value: any): value is ConstructorFragment {\n        return (value && value._isFragment && value.type === \"constructor\");\n    }\n}\n\ninterface _FunctionFragment extends _ConstructorFragment {\n    constant: boolean;\n    outputs?: Array<ParamType>;\n}\n\nexport class FunctionFragment extends ConstructorFragment {\n    constant: boolean;\n    outputs?: Array<ParamType>;\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability: undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber(): undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n                outputs: this.outputs.map((output) => JSON.parse(output.format(format))),\n            });\n        }\n\n        let result = \"\";\n\n        if (format !== FormatTypes.sighash) {\n            result += \"function \";\n        }\n\n        result += this.name + \"(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        if (format !== FormatTypes.sighash) {\n            if (this.stateMutability) {\n                if (this.stateMutability !== \"nonpayable\") {\n                    result += (this.stateMutability + \" \");\n                }\n            } else if (this.constant) {\n                result += \"view \";\n            }\n\n            if (this.outputs && this.outputs.length) {\n                result += \"returns (\" + this.outputs.map(\n                    (output) => output.format(format)\n                ).join(\", \") + \") \";\n            }\n\n            if (this.gas != null) {\n                result += \"@\" + this.gas.toString() + \" \";\n            }\n        }\n\n        return result.trim();\n    }\n\n    static from(value: FunctionFragment | JsonFragment | string): FunctionFragment {\n        if (typeof(value) === \"string\") {\n            return FunctionFragment.fromString(value);\n        }\n        return FunctionFragment.fromObject(value);\n    }\n\n    static fromObject(value: FunctionFragment | JsonFragment): FunctionFragment {\n        if (FunctionFragment.isFunctionFragment(value)) { return value; }\n\n        if (value.type !== \"function\") {\n            logger.throwArgumentError(\"invalid function object\", \"value\", value);\n        }\n\n        let state = verifyState(value);\n\n        const params: TypeCheck<_FunctionFragment> = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            constant: state.constant,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject): []),\n            outputs: (value.outputs ? value.outputs.map(ParamType.fromObject): [ ]),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas): null)\n        };\n\n        return new FunctionFragment(_constructorGuard, params);\n    }\n\n    static fromString(value: string): FunctionFragment {\n        let params: any = { type: \"function\" };\n        value = parseGas(value, params);\n\n        let comps = value.split(\" returns \");\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid function string\", \"value\", value);\n        }\n\n        let parens = comps[0].match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid function signature\", \"value\", value);\n        }\n\n        params.name = parens[1].trim();\n        if (params.name) { verifyIdentifier(params.name); }\n\n        params.inputs = parseParams(parens[2], false);\n\n        parseModifiers(parens[3].trim(), params);\n\n        // We have outputs\n        if (comps.length > 1) {\n           let returns = comps[1].match(regexParen);\n            if (returns[1].trim() != \"\" || returns[3].trim() != \"\") {\n                logger.throwArgumentError(\"unexpected tokens\", \"value\", value);\n            }\n            params.outputs = parseParams(returns[2], false);\n        } else {\n            params.outputs = [ ];\n        }\n\n        return FunctionFragment.fromObject(params);\n    }\n\n    static isFunctionFragment(value: any): value is FunctionFragment {\n        return (value && value._isFragment && value.type === \"function\");\n    }\n}\n\n//export class StructFragment extends Fragment {\n//}\n\nfunction checkForbidden(fragment: ErrorFragment): ErrorFragment {\n    const sig = fragment.format();\n    if (sig === \"Error(string)\" || sig === \"Panic(uint256)\") {\n        logger.throwArgumentError(`cannot specify user defined ${ sig } error`, \"fragment\", fragment);\n    }\n    return fragment;\n}\n\nexport class ErrorFragment extends Fragment {\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"error\",\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n\n        let result = \"\";\n\n        if (format !== FormatTypes.sighash) {\n            result += \"error \";\n        }\n\n        result += this.name + \"(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        return result.trim();\n    }\n\n    static from(value: ErrorFragment | JsonFragment | string): ErrorFragment {\n        if (typeof(value) === \"string\") {\n            return ErrorFragment.fromString(value);\n        }\n        return ErrorFragment.fromObject(value);\n    }\n\n    static fromObject(value: ErrorFragment | JsonFragment): ErrorFragment {\n        if (ErrorFragment.isErrorFragment(value)) { return value; }\n\n        if (value.type !== \"error\") {\n            logger.throwArgumentError(\"invalid error object\", \"value\", value);\n        }\n\n        const params: TypeCheck<_Fragment> = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject): [])\n        };\n\n        return checkForbidden(new ErrorFragment(_constructorGuard, params));\n    }\n\n    static fromString(value: string): ErrorFragment {\n        let params: any = { type: \"error\" };\n\n        let parens = value.match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid error signature\", \"value\", value);\n        }\n\n        params.name = parens[1].trim();\n        if (params.name) { verifyIdentifier(params.name); }\n\n        params.inputs = parseParams(parens[2], false);\n\n        return checkForbidden(ErrorFragment.fromObject(params));\n    }\n\n    static isErrorFragment(value: any): value is ErrorFragment {\n        return (value && value._isFragment && value.type === \"error\");\n    }\n}\n\nfunction verifyType(type: string): string {\n\n    // These need to be transformed to their full description\n    if (type.match(/^uint($|[^1-9])/)) {\n        type = \"uint256\" + type.substring(4);\n    } else if (type.match(/^int($|[^1-9])/)) {\n        type = \"int256\" + type.substring(3);\n    }\n\n    // @TODO: more verification\n\n    return type;\n}\n\n// See: https://github.com/ethereum/solidity/blob/1f8f1a3db93a548d0555e3e14cfc55a10e25b60e/docs/grammar/SolidityLexer.g4#L234\nconst regexIdentifier = new RegExp(\"^[a-zA-Z$_][a-zA-Z0-9$_]*$\");\nfunction verifyIdentifier(value: string): string {\n    if (!value || !value.match(regexIdentifier)) {\n        logger.throwArgumentError(`invalid identifier \"${ value }\"`, \"value\", value);\n    }\n    return value;\n}\n\nconst regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\n\nfunction splitNesting(value: string): Array<any> {\n    value = value.trim();\n\n    let result = [];\n    let accum = \"\";\n    let depth = 0;\n    for (let offset = 0; offset < value.length; offset++) {\n        let c = value[offset];\n        if (c === \",\" && depth === 0) {\n            result.push(accum);\n            accum = \"\";\n        } else {\n            accum += c;\n            if (c === \"(\") {\n                depth++;\n            } else if (c === \")\") {\n                depth--;\n                if (depth === -1) {\n                    logger.throwArgumentError(\"unbalanced parenthesis\", \"value\", value);\n                }\n            }\n        }\n    }\n    if (accum) { result.push(accum); }\n\n    return result;\n}\n\n","\"use strict\";\n\nimport { arrayify, BytesLike, concat, hexConcat, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\n\nexport interface Result extends ReadonlyArray<any> {\n    readonly [key: string]: any;\n}\n\nexport function checkResultErrors(result: Result): Array<{ path: Array<string | number>, error: Error }> {\n    // Find the first error (if any)\n    const errors: Array<{ path: Array<string | number>, error: Error }> = [ ];\n\n    const checkErrors = function(path: Array<string | number>, object: any): void {\n        if (!Array.isArray(object)) { return; }\n        for (let key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n\n            try {\n                 checkErrors(childPath, object[key]);\n            } catch (error) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    }\n    checkErrors([ ], result);\n\n    return errors;\n\n}\n\nexport type CoerceFunc = (type: string, value: any) => any;\n\nexport abstract class Coder {\n\n    // The coder name:\n    //   - address, uint256, tuple, array, etc.\n    readonly name: string;\n\n    // The fully expanded type, including composite types:\n    //   - address, uint256, tuple(address,bytes), uint256[3][4][],  etc.\n    readonly type: string;\n\n    // The localName bound in the signature, in this example it is \"baz\":\n    //   - tuple(address foo, uint bar) baz\n    readonly localName: string;\n\n    // Whether this type is dynamic:\n    //  - Dynamic: bytes, string, address[], tuple(boolean[]), etc.\n    //  - Not Dynamic: address, uint256, boolean[3], tuple(address, uint8)\n    readonly dynamic: boolean;\n\n    constructor(name: string, type: string, localName: string, dynamic: boolean) {\n        // @TODO: defineReadOnly these\n        this.name = name;\n        this.type = type;\n        this.localName = localName;\n        this.dynamic = dynamic;\n    }\n\n    _throwError(message: string, value: any): void {\n        logger.throwArgumentError(message, this.localName, value);\n    }\n\n    abstract encode(writer: Writer, value: any): number;\n    abstract decode(reader: Reader): any;\n\n    abstract defaultValue(): any;\n}\n\nexport class Writer {\n    readonly wordSize: number;\n\n    _data: Array<Uint8Array>;\n    _dataLength: number;\n    _padding: Uint8Array;\n\n    constructor(wordSize?: number) {\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        this._data = [ ];\n        this._dataLength = 0;\n        this._padding = new Uint8Array(wordSize);\n    }\n\n    get data(): string {\n        return hexConcat(this._data);\n    }\n    get length(): number { return this._dataLength; }\n\n    _writeData(data: Uint8Array): number {\n        this._data.push(data);\n        this._dataLength += data.length;\n        return data.length;\n    }\n\n    appendWriter(writer: Writer): number {\n        return this._writeData(concat(writer._data));\n    }\n\n    // Arrayish items; padded on the right to wordSize\n    writeBytes(value: BytesLike): number {\n        let bytes = arrayify(value);\n        const paddingOffset = bytes.length % this.wordSize;\n        if (paddingOffset) {\n            bytes = concat([ bytes, this._padding.slice(paddingOffset) ])\n        }\n        return this._writeData(bytes);\n    }\n\n    _getValue(value: BigNumberish): Uint8Array {\n        let bytes = arrayify(BigNumber.from(value));\n        if (bytes.length > this.wordSize) {\n            logger.throwError(\"value out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                length: this.wordSize,\n                offset: bytes.length\n            });\n        }\n        if (bytes.length % this.wordSize) {\n            bytes = concat([ this._padding.slice(bytes.length % this.wordSize), bytes ]);\n        }\n        return bytes;\n    }\n\n    // BigNumberish items; padded on the left to wordSize\n    writeValue(value: BigNumberish): number {\n        return this._writeData(this._getValue(value));\n    }\n\n    writeUpdatableValue(): (value: BigNumberish) => void {\n        const offset = this._data.length;\n        this._data.push(this._padding);\n        this._dataLength += this.wordSize;\n        return (value: BigNumberish) => {\n            this._data[offset] = this._getValue(value);\n        };\n    }\n}\n\nexport class Reader {\n    readonly wordSize: number;\n    readonly allowLoose: boolean;\n\n    readonly _data: Uint8Array;\n    readonly _coerceFunc: CoerceFunc;\n\n    _offset: number;\n\n    constructor(data: BytesLike, wordSize?: number, coerceFunc?: CoerceFunc, allowLoose?: boolean) {\n        defineReadOnly(this, \"_data\", arrayify(data));\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        defineReadOnly(this, \"_coerceFunc\", coerceFunc);\n        defineReadOnly(this, \"allowLoose\", allowLoose);\n\n        this._offset = 0;\n    }\n\n    get data(): string { return hexlify(this._data); }\n    get consumed(): number { return this._offset; }\n\n    // The default Coerce function\n    static coerce(name: string, value: any): any {\n        let match = name.match(\"^u?int([0-9]+)$\");\n        if (match && parseInt(match[1]) <= 48) { value =  value.toNumber(); }\n        return value;\n    }\n\n    coerce(name: string, value: any): any {\n        if (this._coerceFunc) { return this._coerceFunc(name, value); }\n        return Reader.coerce(name, value);\n    }\n\n    _peekBytes(offset: number, length: number, loose?: boolean): Uint8Array {\n        let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;\n        if (this._offset + alignedLength > this._data.length) {\n            if (this.allowLoose && loose && this._offset + length <= this._data.length) {\n                alignedLength = length;\n            } else {\n                logger.throwError(\"data out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                    length: this._data.length,\n                    offset: this._offset + alignedLength\n                });\n            }\n        }\n        return this._data.slice(this._offset, this._offset + alignedLength)\n    }\n\n    subReader(offset: number): Reader {\n        return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);\n    }\n\n    readBytes(length: number, loose?: boolean): Uint8Array {\n        let bytes = this._peekBytes(0, length, !!loose);\n        this._offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n\n    readValue(): BigNumber {\n        return BigNumber.from(this.readBytes(this.wordSize));\n    }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n  var CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n  };\n\n  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n  };\n\n  var createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n  };\n\n  var createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n  };\n\n  var createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n      if (!n && !s) {\n        return methods['shake' + bits].create(outputBits);\n      } else {\n        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n      }\n    };\n    method.update = function (message, outputBits, n, s) {\n      return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n  };\n\n  var createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n      return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n  };\n\n  var algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n  ];\n\n  var methods = {}, methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      if (algorithm.name !== 'sha3') {\n        var newMethodName = algorithm.name + bits[j];\n        methodNames.push(newMethodName);\n        methods[newMethodName] = methods[methodName];\n      }\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n      if (notString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n    return this;\n  };\n\n  Keccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n      bytes.unshift(o);\n      x = x >> 8;\n      o = x & 255;\n      ++n;\n    }\n    if (right) {\n      bytes.push(n);\n    } else {\n      bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n  };\n\n  Keccak.prototype.encodeString = function (str) {\n    var notString, type = typeof str;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (str === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n          str = new Uint8Array(str);\n        } else if (!Array.isArray(str)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var bytes = 0, length = str.length;\n    if (notString) {\n      bytes = length;\n    } else {\n      for (var i = 0; i < str.length; ++i) {\n        var code = str.charCodeAt(i);\n        if (code < 0x80) {\n          bytes += 1;\n        } else if (code < 0x800) {\n          bytes += 2;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes += 3;\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n          bytes += 4;\n        }\n      }\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n  };\n\n  Keccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n      bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = w - bytes % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n        i = 0;\n      }\n    }\n    if (extraBytes) {\n      block = s[i];\n      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n      }\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n      }\n    }\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      array[i] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = (block >> 8) & 0xFF;\n        array[offset + 2] = (block >> 16) & 0xFF;\n        array[offset + 3] = (block >> 24) & 0xFF;\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n      array[offset] = block & 0xFF;\n      if (extraBytes > 1) {\n        array[offset + 1] = (block >> 8) & 0xFF;\n      }\n      if (extraBytes > 2) {\n        array[offset + 2] = (block >> 16) & 0xFF;\n      }\n    }\n    return array;\n  };\n\n  function Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n  }\n\n  Kmac.prototype = new Keccak();\n\n  Kmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n\n      b0 = s[0];\n      b1 = s[1];\n      b32 = (s[11] << 4) | (s[10] >>> 28);\n      b33 = (s[10] << 4) | (s[11] >>> 28);\n      b14 = (s[20] << 3) | (s[21] >>> 29);\n      b15 = (s[21] << 3) | (s[20] >>> 29);\n      b46 = (s[31] << 9) | (s[30] >>> 23);\n      b47 = (s[30] << 9) | (s[31] >>> 23);\n      b28 = (s[40] << 18) | (s[41] >>> 14);\n      b29 = (s[41] << 18) | (s[40] >>> 14);\n      b20 = (s[2] << 1) | (s[3] >>> 31);\n      b21 = (s[3] << 1) | (s[2] >>> 31);\n      b2 = (s[13] << 12) | (s[12] >>> 20);\n      b3 = (s[12] << 12) | (s[13] >>> 20);\n      b34 = (s[22] << 10) | (s[23] >>> 22);\n      b35 = (s[23] << 10) | (s[22] >>> 22);\n      b16 = (s[33] << 13) | (s[32] >>> 19);\n      b17 = (s[32] << 13) | (s[33] >>> 19);\n      b48 = (s[42] << 2) | (s[43] >>> 30);\n      b49 = (s[43] << 2) | (s[42] >>> 30);\n      b40 = (s[5] << 30) | (s[4] >>> 2);\n      b41 = (s[4] << 30) | (s[5] >>> 2);\n      b22 = (s[14] << 6) | (s[15] >>> 26);\n      b23 = (s[15] << 6) | (s[14] >>> 26);\n      b4 = (s[25] << 11) | (s[24] >>> 21);\n      b5 = (s[24] << 11) | (s[25] >>> 21);\n      b36 = (s[34] << 15) | (s[35] >>> 17);\n      b37 = (s[35] << 15) | (s[34] >>> 17);\n      b18 = (s[45] << 29) | (s[44] >>> 3);\n      b19 = (s[44] << 29) | (s[45] >>> 3);\n      b10 = (s[6] << 28) | (s[7] >>> 4);\n      b11 = (s[7] << 28) | (s[6] >>> 4);\n      b42 = (s[17] << 23) | (s[16] >>> 9);\n      b43 = (s[16] << 23) | (s[17] >>> 9);\n      b24 = (s[26] << 25) | (s[27] >>> 7);\n      b25 = (s[27] << 25) | (s[26] >>> 7);\n      b6 = (s[36] << 21) | (s[37] >>> 11);\n      b7 = (s[37] << 21) | (s[36] >>> 11);\n      b38 = (s[47] << 24) | (s[46] >>> 8);\n      b39 = (s[46] << 24) | (s[47] >>> 8);\n      b30 = (s[8] << 27) | (s[9] >>> 5);\n      b31 = (s[9] << 27) | (s[8] >>> 5);\n      b12 = (s[18] << 20) | (s[19] >>> 12);\n      b13 = (s[19] << 20) | (s[18] >>> 12);\n      b44 = (s[29] << 7) | (s[28] >>> 25);\n      b45 = (s[28] << 7) | (s[29] >>> 25);\n      b26 = (s[38] << 8) | (s[39] >>> 24);\n      b27 = (s[39] << 8) | (s[38] >>> 24);\n      b8 = (s[48] << 14) | (s[49] >>> 18);\n      b9 = (s[49] << 14) | (s[48] >>> 18);\n\n      s[0] = b0 ^ (~b2 & b4);\n      s[1] = b1 ^ (~b3 & b5);\n      s[10] = b10 ^ (~b12 & b14);\n      s[11] = b11 ^ (~b13 & b15);\n      s[20] = b20 ^ (~b22 & b24);\n      s[21] = b21 ^ (~b23 & b25);\n      s[30] = b30 ^ (~b32 & b34);\n      s[31] = b31 ^ (~b33 & b35);\n      s[40] = b40 ^ (~b42 & b44);\n      s[41] = b41 ^ (~b43 & b45);\n      s[2] = b2 ^ (~b4 & b6);\n      s[3] = b3 ^ (~b5 & b7);\n      s[12] = b12 ^ (~b14 & b16);\n      s[13] = b13 ^ (~b15 & b17);\n      s[22] = b22 ^ (~b24 & b26);\n      s[23] = b23 ^ (~b25 & b27);\n      s[32] = b32 ^ (~b34 & b36);\n      s[33] = b33 ^ (~b35 & b37);\n      s[42] = b42 ^ (~b44 & b46);\n      s[43] = b43 ^ (~b45 & b47);\n      s[4] = b4 ^ (~b6 & b8);\n      s[5] = b5 ^ (~b7 & b9);\n      s[14] = b14 ^ (~b16 & b18);\n      s[15] = b15 ^ (~b17 & b19);\n      s[24] = b24 ^ (~b26 & b28);\n      s[25] = b25 ^ (~b27 & b29);\n      s[34] = b34 ^ (~b36 & b38);\n      s[35] = b35 ^ (~b37 & b39);\n      s[44] = b44 ^ (~b46 & b48);\n      s[45] = b45 ^ (~b47 & b49);\n      s[6] = b6 ^ (~b8 & b0);\n      s[7] = b7 ^ (~b9 & b1);\n      s[16] = b16 ^ (~b18 & b10);\n      s[17] = b17 ^ (~b19 & b11);\n      s[26] = b26 ^ (~b28 & b20);\n      s[27] = b27 ^ (~b29 & b21);\n      s[36] = b36 ^ (~b38 & b30);\n      s[37] = b37 ^ (~b39 & b31);\n      s[46] = b46 ^ (~b48 & b40);\n      s[47] = b47 ^ (~b49 & b41);\n      s[8] = b8 ^ (~b0 & b2);\n      s[9] = b9 ^ (~b1 & b3);\n      s[18] = b18 ^ (~b10 & b12);\n      s[19] = b19 ^ (~b11 & b13);\n      s[28] = b28 ^ (~b20 & b22);\n      s[29] = b29 ^ (~b21 & b23);\n      s[38] = b38 ^ (~b30 & b32);\n      s[39] = b39 ^ (~b31 & b33);\n      s[48] = b48 ^ (~b40 & b42);\n      s[49] = b49 ^ (~b41 & b43);\n\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n    if (AMD) {\n      define(function () {\n        return methods;\n      });\n    }\n  }\n})();\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { hexZeroPad } from \"@ethersproject/bytes\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class AddressCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"address\", \"address\", localName, false);\n    }\n\n    defaultValue(): string {\n        return \"0x0000000000000000000000000000000000000000\";\n    }\n\n    encode(writer: Writer, value: string): number {\n        try {\n            value = getAddress(value)\n        } catch (error) {\n            this._throwError(error.message, value);\n        }\n        return writer.writeValue(value);\n    }\n\n    decode(reader: Reader): any {\n        return getAddress(hexZeroPad(reader.readValue().toHexString(), 20));\n    }\n}\n\n","\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\n// Clones the functionality of an existing Coder, but without a localName\nexport class AnonymousCoder extends Coder {\n    private coder: Coder;\n\n    constructor(coder: Coder) {\n        super(coder.name, coder.type, undefined, coder.dynamic);\n        this.coder = coder;\n    }\n\n    defaultValue(): any {\n        return this.coder.defaultValue();\n    }\n\n    encode(writer: Writer, value: any): number {\n        return this.coder.encode(writer, value);\n    }\n\n    decode(reader: Reader): any {\n        return this.coder.decode(reader);\n    }\n}\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\n\nimport { Coder, Reader, Result, Writer } from \"./abstract-coder\";\nimport { AnonymousCoder } from \"./anonymous\";\n\nexport function pack(writer: Writer, coders: ReadonlyArray<Coder>, values: Array<any> | { [ name: string ]: any }): number {\n    let arrayValues: Array<any> = null;\n\n    if (Array.isArray(values)) {\n       arrayValues = values;\n\n    } else if (values && typeof(values) === \"object\") {\n        let unique: { [ name: string ]: boolean } = { };\n\n        arrayValues = coders.map((coder) => {\n            const name = coder.localName;\n            if (!name) {\n                logger.throwError(\"cannot encode object for signature with missing names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n\n            if (unique[name]) {\n                logger.throwError(\"cannot encode object for signature with duplicate names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n\n            unique[name] = true;\n\n            return values[name];\n        });\n\n    } else {\n        logger.throwArgumentError(\"invalid tuple value\", \"tuple\", values);\n    }\n\n    if (coders.length !== arrayValues.length) {\n        logger.throwArgumentError(\"types/value length mismatch\", \"tuple\", values);\n    }\n\n    let staticWriter = new Writer(writer.wordSize);\n    let dynamicWriter = new Writer(writer.wordSize);\n\n    let updateFuncs: Array<(baseOffset: number) => void> = [];\n    coders.forEach((coder, index) => {\n        let value = arrayValues[index];\n\n        if (coder.dynamic) {\n            // Get current dynamic offset (for the future pointer)\n            let dynamicOffset = dynamicWriter.length;\n\n            // Encode the dynamic value into the dynamicWriter\n            coder.encode(dynamicWriter, value);\n\n            // Prepare to populate the correct offset once we are done\n            let updateFunc = staticWriter.writeUpdatableValue();\n            updateFuncs.push((baseOffset: number) => {\n                updateFunc(baseOffset + dynamicOffset);\n            });\n\n        } else {\n            coder.encode(staticWriter, value);\n        }\n    });\n\n    // Backfill all the dynamic offsets, now that we know the static length\n    updateFuncs.forEach((func) => { func(staticWriter.length); });\n\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n}\n\nexport function unpack(reader: Reader, coders: Array<Coder>): Result {\n    let values: any = [];\n\n    // A reader anchored to this base\n    let baseReader = reader.subReader(0);\n\n    coders.forEach((coder) => {\n        let value: any = null;\n\n        if (coder.dynamic) {\n            let offset = reader.readValue();\n            let offsetReader = baseReader.subReader(offset.toNumber());\n            try {\n                value = coder.decode(offsetReader);\n            } catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) { throw error; }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n\n        } else {\n            try {\n                value = coder.decode(reader);\n            } catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) { throw error; }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n\n        if (value != undefined) {\n            values.push(value);\n        }\n    });\n\n    // We only output named properties for uniquely named coders\n    const uniqueNames = coders.reduce((accum, coder) => {\n        const name = coder.localName;\n        if (name) {\n            if (!accum[name]) { accum[name] = 0; }\n            accum[name]++;\n        }\n        return accum;\n    }, <{ [ name: string ]: number }>{ });\n\n    // Add any named parameters (i.e. tuples)\n    coders.forEach((coder: Coder, index: number) => {\n        let name = coder.localName;\n        if (!name || uniqueNames[name] !== 1) { return; }\n\n        if (name === \"length\") { name = \"_length\"; }\n\n        if (values[name] != null) { return; }\n\n        const value = values[index];\n\n        if (value instanceof Error) {\n            Object.defineProperty(values, name, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        } else {\n            values[name] = value;\n        }\n    });\n\n    for (let i = 0; i < values.length; i++) {\n        const value = values[i];\n        if (value instanceof Error) {\n            Object.defineProperty(values, i, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        }\n    }\n\n    return Object.freeze(values);\n}\n\n\nexport class ArrayCoder extends Coder {\n    readonly coder: Coder;\n    readonly length: number;\n\n    constructor(coder: Coder, length: number, localName: string) {\n        const type = (coder.type + \"[\" + (length >= 0 ? length: \"\") + \"]\");\n        const dynamic = (length === -1 || coder.dynamic);\n        super(\"array\", type, localName, dynamic);\n\n        this.coder = coder;\n        this.length = length;\n    }\n\n    defaultValue(): Array<any> {\n        // Verifies the child coder is valid (even if the array is dynamic or 0-length)\n        const defaultChild = this.coder.defaultValue();\n\n        const result: Array<any> = [];\n        for (let i = 0; i < this.length; i++) {\n            result.push(defaultChild);\n        }\n        return result;\n    }\n\n    encode(writer: Writer, value: Array<any>): number {\n        if (!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n        }\n\n        let count = this.length;\n\n        if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n        }\n\n        logger.checkArgumentCount(value.length, count, \"coder array\" + (this.localName? (\" \"+ this.localName): \"\"));\n\n        let coders = [];\n        for (let i = 0; i < value.length; i++) { coders.push(this.coder); }\n\n        return pack(writer, coders, value);\n    }\n\n    decode(reader: Reader): any {\n        let count = this.length;\n        if (count === -1) {\n            count = reader.readValue().toNumber();\n\n            // Check that there is *roughly* enough data to ensure\n            // stray random data is not being read as a length. Each\n            // slot requires at least 32 bytes for their value (or 32\n            // bytes as a link to the data). This could use a much\n            // tighter bound, but we are erroring on the side of safety.\n            if (count * 32 > reader._data.length) {\n                logger.throwError(\"insufficient data length\", Logger.errors.BUFFER_OVERRUN, {\n                    length: reader._data.length,\n                    count: count\n                });\n            }\n        }\n        let coders = [];\n        for (let i = 0; i < count; i++) { coders.push(new AnonymousCoder(this.coder)); }\n\n        return reader.coerce(this.name, unpack(reader, coders));\n    }\n}\n\n","\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class BooleanCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n\n    defaultValue(): boolean {\n        return false;\n    }\n\n    encode(writer: Writer, value: boolean): number {\n        return writer.writeValue(value ? 1: 0);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.type, !reader.readValue().isZero());\n    }\n}\n\n","\"use strict\";\n\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class DynamicBytesCoder extends Coder {\n    constructor(type: string, localName: string) {\n       super(type, type, localName, true);\n    }\n\n    defaultValue(): string {\n        return \"0x\";\n    }\n\n    encode(writer: Writer, value: any): number {\n        value = arrayify(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n\n    decode(reader: Reader): any {\n        return reader.readBytes(reader.readValue().toNumber(), true);\n    }\n}\n\nexport class BytesCoder extends DynamicBytesCoder {\n    constructor(localName: string) {\n        super(\"bytes\", localName);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.name, hexlify(super.decode(reader)));\n    }\n}\n\n\n","\"use strict\";\n\nimport { arrayify, BytesLike, hexlify } from \"@ethersproject/bytes\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\n// @TODO: Merge this with bytes\nexport class FixedBytesCoder extends Coder {\n    readonly size: number;\n\n    constructor(size: number, localName: string) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        this.size = size;\n    }\n\n    defaultValue(): string {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n\n    encode(writer: Writer, value: BytesLike): number {\n        let data = arrayify(value);\n        if (data.length !== this.size) { this._throwError(\"incorrect data length\", value); }\n        return writer.writeBytes(data);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));\n    }\n}\n","\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class NullCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"null\", \"\", localName, false);\n    }\n\n    defaultValue(): null {\n        return null;\n    }\n\n    encode(writer: Writer, value: any): number {\n        if (value != null) { this._throwError(\"not null\", value); }\n        return writer.writeBytes([ ]);\n    }\n\n    decode(reader: Reader): any {\n        reader.readBytes(0);\n        return reader.coerce(this.name, null);\n    }\n}\n","export const AddressZero = \"0x0000000000000000000000000000000000000000\";\n\n","import { BigNumber } from \"@ethersproject/bignumber\";\n\nconst NegativeOne: BigNumber = (/*#__PURE__*/BigNumber.from(-1));\nconst Zero: BigNumber = (/*#__PURE__*/BigNumber.from(0));\nconst One: BigNumber = (/*#__PURE__*/BigNumber.from(1));\nconst Two: BigNumber = (/*#__PURE__*/BigNumber.from(2));\nconst WeiPerEther: BigNumber = (/*#__PURE__*/BigNumber.from(\"1000000000000000000\"));\nconst MaxUint256: BigNumber = (/*#__PURE__*/BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\n\nconst MinInt256: BigNumber = (/*#__PURE__*/BigNumber.from(\"-0x8000000000000000000000000000000000000000000000000000000000000000\"));\nconst MaxInt256: BigNumber = (/*#__PURE__*/BigNumber.from(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\n\nexport {\n    NegativeOne,\n    Zero,\n    One,\n    Two,\n    WeiPerEther,\n    MaxUint256,\n    MinInt256,\n    MaxInt256,\n};\n","export const HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n\n","// NFKC (composed)             // (decomposed)\nexport const EtherSymbol = \"\\u039e\";  // \"\\uD835\\uDF63\";\n","\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { MaxUint256, NegativeOne, One, Zero } from \"@ethersproject/constants\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class NumberCoder extends Coder {\n    readonly size: number;\n    readonly signed: boolean;\n\n    constructor(size: number, signed: boolean, localName: string) {\n        const name = ((signed ? \"int\": \"uint\") + (size * 8));\n        super(name, name, localName, false);\n\n        this.size = size;\n        this.signed = signed;\n    }\n\n    defaultValue(): number {\n        return 0;\n    }\n\n    encode(writer: Writer, value: BigNumberish): number {\n        let v = BigNumber.from(value);\n\n        // Check bounds are safe for encoding\n        let maxUintValue = MaxUint256.mask(writer.wordSize * 8);\n        if (this.signed) {\n            let bounds = maxUintValue.mask(this.size * 8 - 1);\n            if (v.gt(bounds) || v.lt(bounds.add(One).mul(NegativeOne))) {\n                this._throwError(\"value out-of-bounds\", value);\n            }\n        } else if (v.lt(Zero) || v.gt(maxUintValue.mask(this.size * 8))) {\n            this._throwError(\"value out-of-bounds\", value);\n        }\n\n        v = v.toTwos(this.size * 8).mask(this.size * 8);\n\n        if (this.signed) {\n            v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\n        }\n\n        return writer.writeValue(v);\n    }\n\n    decode(reader: Reader): any {\n        let value = reader.readValue().mask(this.size * 8);\n\n        if (this.signed) {\n            value = value.fromTwos(this.size * 8);\n        }\n\n        return reader.coerce(this.name, value);\n    }\n}\n\n","\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n\nexport enum UnicodeNormalizationForm {\n    current  = \"\",\n    NFC      = \"NFC\",\n    NFD      = \"NFD\",\n    NFKC     = \"NFKC\",\n    NFKD     = \"NFKD\"\n};\n\nexport enum Utf8ErrorReason {\n    // A continuation byte was present where there was nothing to continue\n    // - offset = the index the codepoint began in\n    UNEXPECTED_CONTINUE   = \"unexpected continuation byte\",\n\n    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n    // - offset = the index the codepoint began in\n    BAD_PREFIX            = \"bad codepoint prefix\",\n\n    // The string is too short to process the expected codepoint\n    // - offset = the index the codepoint began in\n    OVERRUN               = \"string overrun\",\n\n    // A missing continuation byte was expected but not found\n    // - offset = the index the continuation byte was expected at\n    MISSING_CONTINUE      = \"missing continuation byte\",\n\n    // The computed code point is outside the range for UTF-8\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; outside the UTF-8 range\n    OUT_OF_RANGE          = \"out of UTF-8 range\",\n\n    // UTF-8 strings may not contain UTF-16 surrogate pairs\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n    UTF16_SURROGATE       = \"UTF-16 surrogate\",\n\n    // The string is an overlong representation\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; already bounds checked\n    OVERLONG              = \"overlong representation\",\n};\n\n\nexport type Utf8ErrorFunc = (reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number) => number;\n\nfunction errorFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n    return logger.throwArgumentError(`invalid codepoint at offset ${ offset }; ${ reason }`, \"bytes\", bytes);\n}\n\nfunction ignoreFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) { break; }\n            i++;\n        }\n        return i;\n    }\n\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === Utf8ErrorReason.OVERRUN) {\n        return bytes.length - offset - 1;\n    }\n\n    // Nothing to skip\n    return 0;\n}\n\nfunction replaceFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === Utf8ErrorReason.OVERLONG) {\n        output.push(badCodepoint);\n        return 0;\n    }\n\n    // Put the replacement character into the output\n    output.push(0xfffd);\n\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n\n// Common error handing strategies\nexport const Utf8ErrorFuncs: { [ name: string ]: Utf8ErrorFunc } = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(bytes: BytesLike, onError?: Utf8ErrorFunc): Array<number> {\n    if (onError == null) { onError = Utf8ErrorFuncs.error; }\n\n    bytes = arrayify(bytes);\n\n    const result: Array<number> = [];\n    let i = 0;\n\n    // Invalid bytes are ignored\n    while(i < bytes.length) {\n\n        const c = bytes[i++];\n\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n\n        // 1110 xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n\n        // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n\n        } else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n            } else {\n                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n            }\n            continue;\n        }\n\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n            continue;\n        }\n\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n                res = null;\n                break;\n            };\n\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n\n        // See above loop for invalid continuation byte\n        if (res === null) { continue; }\n\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        result.push(res);\n    }\n\n    return result;\n}\n\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nexport function toUtf8Bytes(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Uint8Array {\n\n    if (form != UnicodeNormalizationForm.current) {\n        logger.checkNormalize();\n        str = str.normalize(form);\n    }\n\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n\n        if (c < 0x80) {\n            result.push(c);\n\n        } else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n\n        } else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error(\"invalid utf-8 string\");\n            }\n\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n\n        } else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n\n    return arrayify(result);\n};\n\nfunction escapeChar(value: number) {\n    const hex = (\"0000\" + value.toString(16));\n    return \"\\\\u\" + hex.substring(hex.length - 4);\n}\n\nexport function _toEscapedUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return '\"' + getUtf8CodePoints(bytes, onError).map((codePoint) => {\n        if (codePoint < 256) {\n            switch (codePoint) {\n                case 8:  return \"\\\\b\";\n                case 9:  return \"\\\\t\";\n                case 10: return \"\\\\n\"\n                case 13: return \"\\\\r\";\n                case 34: return \"\\\\\\\"\";\n                case 92: return \"\\\\\\\\\";\n            }\n\n            if (codePoint >= 32 && codePoint < 127) {\n                return String.fromCharCode(codePoint);\n            }\n        }\n\n        if (codePoint <= 0xffff) {\n            return escapeChar(codePoint);\n        }\n\n        codePoint -= 0x10000;\n        return escapeChar(((codePoint >> 10) & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n    }).join(\"\") + '\"';\n}\n\nexport function _toUtf8String(codePoints: Array<number>): string {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode(\n            (((codePoint >> 10) & 0x3ff) + 0xd800),\n            ((codePoint & 0x3ff) + 0xdc00)\n        );\n    }).join(\"\");\n}\n\nexport function toUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n\nexport function toUtf8CodePoints(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Array<number> {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n","\"use strict\";\n\nimport { HashZero } from \"@ethersproject/constants\";\nimport { arrayify, BytesLike, concat, hexlify } from \"@ethersproject/bytes\";\n\nimport { toUtf8Bytes, toUtf8String } from \"./utf8\";\n\n\nexport function formatBytes32String(text: string): string {\n\n    // Get the bytes\n    const bytes = toUtf8Bytes(text);\n\n    // Check we have room for null-termination\n    if (bytes.length > 31) { throw new Error(\"bytes32 string must be less than 32 bytes\"); }\n\n    // Zero-pad (implicitly null-terminates)\n    return hexlify(concat([ bytes, HashZero ]).slice(0, 32));\n}\n\nexport function parseBytes32String(bytes: BytesLike): string {\n    const data = arrayify(bytes);\n\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) { throw new Error(\"invalid bytes32 - not 32 bytes long\"); }\n    if (data[31] !== 0) { throw new Error(\"invalid bytes32 string - no null terminator\"); }\n\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) { length--; }\n\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\n\n","\"use strict\";\n\nimport { toUtf8CodePoints, _toUtf8String, UnicodeNormalizationForm } from \"./utf8\";\n\ntype Ranged = {\n    l: number,          // Lo value\n    h: number,          // High value (less the lo)\n    d?: number,         // Delta/stride (default: 1)\n    s?: number,         // Shift (default: 1)\n    e?: Array<number>   // Exceptions to skip\n};\n\ntype Table = { [ src: number ]: Array<number> };\n\nfunction bytes2(data: string): Array<number> {\n    if ((data.length % 4) !== 0) { throw new Error(\"bad data\"); }\n    let result = [];\n    for (let i = 0; i < data.length; i += 4) {\n        result.push(parseInt(data.substring(i, i + 4), 16));\n    }\n    return result;\n}\n\nfunction createTable(data: string, func?: (value: string) => Array<number>): Table {\n    if (!func) {\n        func = function(value: string) { return [ parseInt(value, 16) ]; }\n    }\n\n    let lo = 0;\n\n    let result: Table = { };\n    data.split(\",\").forEach((pair) => {\n        let comps = pair.split(\":\");\n        lo += parseInt(comps[0], 16);\n        result[lo] = func(comps[1]);\n    });\n\n    return result;\n}\n\nfunction createRangeTable(data: string): Array<Ranged> {\n    let hi = 0;\n    return data.split(\",\").map((v) => {\n        let comps = v.split(\"-\");\n        if (comps.length === 1) {\n            comps[1] = \"0\";\n        } else if (comps[1] === \"\") {\n            comps[1] = \"1\";\n        }\n\n        let lo = hi + parseInt(comps[0], 16);\n        hi = parseInt(comps[1], 16);\n        return { l: lo, h: hi };\n    });\n}\n\nfunction matchMap(value: number, ranges: Array<Ranged>): Ranged {\n    let lo = 0;\n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        lo += range.l;\n        if (value >= lo && value <= lo + range.h && ((value - lo) % (range.d || 1)) === 0) {\n            if (range.e && range.e.indexOf(value - lo) !== -1) { continue; }\n            return range;\n        }\n    }\n    return null;\n}\n\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n\n// @TODO: Make this relative...\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((v) => parseInt(v, 16));\n\nconst Table_B_2_ranges: Array<Ranged> = [\n    { h: 25, s: 32, l: 65 },\n    { h: 30, s: 32, e: [ 23 ], l: 127 },\n    { h: 54, s: 1, e: [ 48 ], l: 64, d: 2 },\n    { h: 14, s: 1, l: 57, d: 2 },\n    { h: 44, s: 1, l: 17, d: 2 },\n    { h: 10, s: 1, e: [ 2, 6, 8 ], l: 61, d: 2 },\n    { h: 16, s: 1, l: 68, d: 2 },\n    { h: 84, s: 1, e: [ 18, 24, 66 ], l: 19, d: 2 },\n    { h: 26, s: 32, e: [ 17 ], l: 435 },\n    { h: 22, s: 1, l: 71, d: 2 },\n    { h: 15, s: 80, l: 40 },\n    { h: 31, s: 32, l: 16 },\n    { h: 32, s: 1, l: 80, d: 2 },\n    { h: 52, s: 1, l: 42, d: 2 },\n    { h: 12, s: 1, l: 55, d: 2 },\n    { h: 40, s: 1, e: [ 38 ], l: 15, d: 2 },\n    { h: 14, s: 1, l: 48, d: 2 },\n    { h: 37, s: 48, l: 49 },\n    { h: 148, s: 1, l: 6351, d: 2 },\n    { h: 88, s: 1, l: 160, d: 2 },\n    { h: 15, s: 16, l: 704 },\n    { h: 25, s: 26, l: 854 },\n    { h: 25, s: 32, l: 55915 },\n    { h: 37, s: 40, l: 1247 },\n    { h: 25, s: -119711, l: 53248 },\n    { h: 25, s: -119763, l: 52 },\n    { h: 25, s: -119815, l: 52 },\n    { h: 25, s: -119867, e: [ 1, 4, 5, 7, 8, 11, 12, 17 ], l: 52 },\n    { h: 25, s: -119919, l: 52 },\n    { h: 24, s: -119971, e: [ 2, 7, 8, 17 ], l: 52 },\n    { h: 24, s: -120023, e: [ 2, 7, 13, 15, 16, 17 ], l: 52 },\n    { h: 25, s: -120075, l: 52 },\n    { h: 25, s: -120127, l: 52 },\n    { h: 25, s: -120179, l: 52 },\n    { h: 25, s: -120231, l: 52 },\n    { h: 25, s: -120283, l: 52 },\n    { h: 25, s: -120335, l: 52 },\n    { h: 24, s: -119543, e: [ 17 ], l: 56 },\n    { h: 24, s: -119601, e: [ 17 ], l: 58 },\n    { h: 24, s: -119659, e: [ 17 ], l: 58 },\n    { h: 24, s: -119717, e: [ 17 ], l: 58 },\n    { h: 24, s: -119775, e: [ 17 ], l: 58 }\n];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\n\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\n\n\nfunction flatten(values: Array<Array<number>>): Array<number> {\n    return values.reduce((accum, value) => {\n        value.forEach((value) => { accum.push(value); });\n        return accum;\n    }, [ ]);\n}\n\nexport function _nameprepTableA1(codepoint: number): boolean {\n    return !!matchMap(codepoint, Table_A_1_ranges);\n}\n\nexport function _nameprepTableB2(codepoint: number): Array<number> {\n    let range = matchMap(codepoint, Table_B_2_ranges);\n    if (range) { return [ codepoint + range.s ]; }\n\n    let codes = Table_B_2_lut_abs[codepoint];\n    if (codes) { return codes; }\n\n    let shift = Table_B_2_lut_rel[codepoint];\n    if (shift) { return [ codepoint + shift[0] ]; }\n\n    let complex = Table_B_2_complex[codepoint];\n    if (complex) { return complex; }\n\n    return null;\n}\n\nexport function _nameprepTableC(codepoint: number): boolean {\n    return !!matchMap(codepoint, Table_C_ranges);\n}\n\nexport function nameprep(value: string): string {\n\n    // This allows platforms with incomplete normalize to bypass\n    // it for very basic names which the built-in toLowerCase\n    // will certainly handle correctly\n    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) { return value.toLowerCase(); }\n\n    // Get the code points (keeping the current normalization)\n    let codes = toUtf8CodePoints(value);\n\n    codes = flatten(codes.map((code) => {\n        // Substitute Table B.1 (Maps to Nothing)\n        if (Table_B_1_flags.indexOf(code) >= 0) { return [ ]; }\n        if (code >= 0xfe00 && code <= 0xfe0f) { return [ ]; }\n\n        // Substitute Table B.2 (Case Folding)\n        let codesTableB2 = _nameprepTableB2(code);\n        if (codesTableB2) { return codesTableB2; }\n\n        // No Substitution\n        return [ code ];\n    }));\n\n    // Normalize using form KC\n    codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC);\n\n    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n    codes.forEach((code) => {\n        if (_nameprepTableC(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n        }\n    });\n\n    // Prohibit Unassigned Code Points (Table A.1)\n    codes.forEach((code) => {\n        if (_nameprepTableA1(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n        }\n    });\n\n    // IDNA extras\n    let name = _toUtf8String(codes);\n\n    // IDNA: 4.2.3.1\n    if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n        throw new Error(\"invalid hyphen\");\n    }\n\n    // IDNA: 4.2.4\n    if (name.length > 63) { throw new Error(\"too long\"); }\n\n\n\n    return name;\n}\n\n","\"use strict\";\n\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\n\nimport { Reader, Writer } from \"./abstract-coder\";\nimport { DynamicBytesCoder } from \"./bytes\";\n\nexport class StringCoder extends DynamicBytesCoder {\n\n    constructor(localName: string) {\n        super(\"string\", localName);\n    }\n\n    defaultValue(): string {\n        return \"\";\n    }\n\n    encode(writer: Writer, value: any): number {\n        return super.encode(writer, toUtf8Bytes(value));\n    }\n\n    decode(reader: Reader): any {\n        return toUtf8String(super.decode(reader));\n    }\n}\n","\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\nimport { pack, unpack } from \"./array\";\n\nexport class TupleCoder extends Coder {\n    readonly coders: Array<Coder>;\n\n    constructor(coders: Array<Coder>, localName: string) {\n        let dynamic = false;\n        const types: Array<string> = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) { dynamic = true; }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n\n        super(\"tuple\", type, localName, dynamic);\n        this.coders = coders;\n    }\n\n    defaultValue(): any {\n        const values: any = [ ];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) { accum[name] = 0; }\n                accum[name]++;\n            }\n            return accum;\n        }, <{ [ name: string ]: number }>{ });\n\n        // Add named values\n        this.coders.forEach((coder: Coder, index: number) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) { return; }\n\n            if (name === \"length\") { name = \"_length\"; }\n\n            if (values[name] != null) { return; }\n\n            values[name] = values[index];\n        });\n\n        return Object.freeze(values);\n    }\n\n    encode(writer: Writer, value: Array<any> | { [ name: string ]: any }): number {\n        return pack(writer, this.coders, value);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.name, unpack(reader, this.coders));\n    }\n}\n\n","\"use strict\";\n\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Coder, Reader, Result, Writer } from \"./coders/abstract-coder\";\nimport { AddressCoder } from \"./coders/address\";\nimport { ArrayCoder } from \"./coders/array\";\nimport { BooleanCoder } from \"./coders/boolean\";\nimport { BytesCoder } from \"./coders/bytes\";\nimport { FixedBytesCoder } from \"./coders/fixed-bytes\";\nimport { NullCoder } from \"./coders/null\";\nimport { NumberCoder } from \"./coders/number\";\nimport { StringCoder } from \"./coders/string\";\nimport { TupleCoder } from \"./coders/tuple\";\n\nimport { ParamType } from \"./fragments\";\n\n\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\n\n\nexport type CoerceFunc = (type: string, value: any) => any;\n\nexport class AbiCoder {\n    readonly coerceFunc: CoerceFunc;\n\n    constructor(coerceFunc?: CoerceFunc) {\n        logger.checkNew(new.target, AbiCoder);\n        defineReadOnly(this, \"coerceFunc\", coerceFunc || null);\n    }\n\n    _getCoder(param: ParamType): Coder {\n\n        switch (param.baseType) {\n            case \"address\":\n                return new AddressCoder(param.name);\n            case \"bool\":\n                return new BooleanCoder(param.name);\n            case \"string\":\n                return new StringCoder(param.name);\n            case \"bytes\":\n                return new BytesCoder(param.name);\n            case \"array\":\n                return new ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);\n            case \"tuple\":\n                return new TupleCoder((param.components || []).map((component) => {\n                    return this._getCoder(component);\n                }), param.name);\n            case \"\":\n                return new NullCoder(param.name);\n        }\n\n        // u?int[0-9]*\n        let match = param.type.match(paramTypeNumber);\n        if (match) {\n            let size = parseInt(match[2] || \"256\");\n            if (size === 0 || size > 256 || (size % 8) !== 0) {\n                logger.throwArgumentError(\"invalid \" + match[1] + \" bit length\", \"param\", param);\n            }\n            return new NumberCoder(size / 8, (match[1] === \"int\"), param.name);\n        }\n\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            let size = parseInt(match[1]);\n            if (size === 0 || size > 32) {\n                logger.throwArgumentError(\"invalid bytes length\", \"param\", param);\n            }\n            return new FixedBytesCoder(size, param.name);\n        }\n\n        return logger.throwArgumentError(\"invalid type\", \"type\", param.type);\n    }\n\n    _getWordSize(): number { return 32; }\n\n    _getReader(data: Uint8Array, allowLoose?: boolean): Reader {\n        return new Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);\n    }\n\n    _getWriter(): Writer {\n        return new Writer(this._getWordSize());\n    }\n\n    getDefaultValue(types: ReadonlyArray<string | ParamType>): Result {\n        const coders: Array<Coder> = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.defaultValue();\n    }\n\n    encode(types: ReadonlyArray<string | ParamType>, values: ReadonlyArray<any>): string {\n        if (types.length !== values.length) {\n            logger.throwError(\"types/values length mismatch\", Logger.errors.INVALID_ARGUMENT, {\n                count: { types: types.length, values: values.length },\n                value: { types: types, values: values }\n            });\n        }\n\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = (new TupleCoder(coders, \"_\"));\n\n        const writer = this._getWriter();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n\n    decode(types: ReadonlyArray<string | ParamType>, data: BytesLike, loose?: boolean): Result {\n        const coders: Array<Coder> = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.decode(this._getReader(arrayify(data), loose));\n    }\n}\n\nexport const defaultAbiCoder: AbiCoder = new AbiCoder();\n\n","import { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nexport function id(text: string): string {\n    return keccak256(toUtf8Bytes(text));\n}\n","import { concat, hexlify } from \"@ethersproject/bytes\";\nimport { nameprep, toUtf8Bytes } from \"@ethersproject/strings\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\n\nconst Partition = new RegExp(\"^((.*)\\\\.)?([^.]+)$\");\n\nexport function isValidName(name: string): boolean {\n    try {\n        const comps = name.split(\".\");\n        for (let i = 0; i < comps.length; i++) {\n            if (nameprep(comps[i]).length === 0) {\n                throw new Error(\"empty\")\n            }\n        }\n        return true;\n    } catch (error) { }\n    return false;\n}\n\nexport function namehash(name: string): string {\n    /* istanbul ignore if */\n    if (typeof(name) !== \"string\") {\n        logger.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n    }\n\n    let current = name;\n    let result: string | Uint8Array = Zeros;\n    while (current.length) {\n        const partition = current.match(Partition);\n        if (partition == null || partition[2] === \"\") {\n            logger.throwArgumentError(\"invalid ENS address; missing component\", \"name\", name);\n        }\n        const label = toUtf8Bytes(nameprep(partition[3]));\n        result = keccak256(concat([result, keccak256(label)]));\n\n        current = partition[2] || \"\";\n    }\n\n    return hexlify(result);\n}\n\n","import { Bytes, concat } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nexport const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\n\nexport function hashMessage(message: Bytes | string): string {\n    if (typeof(message) === \"string\") { message = toUtf8Bytes(message); }\n    return keccak256(concat([\n        toUtf8Bytes(messagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n\n","import { TypedDataDomain, TypedDataField } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, hexConcat, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { id } from \"./id\";\n\nconst padding = new Uint8Array(32);\npadding.fill(0);\n\nconst NegativeOne: BigNumber = BigNumber.from(-1);\nconst Zero: BigNumber = BigNumber.from(0);\nconst One: BigNumber = BigNumber.from(1);\nconst MaxUint256: BigNumber = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\nfunction hexPadRight(value: BytesLike) {\n    const bytes = arrayify(value);\n    const padOffset = bytes.length % 32\n    if (padOffset) {\n        return hexConcat([ bytes, padding.slice(padOffset) ]);\n    }\n    return hexlify(bytes);\n}\n\nconst hexTrue = hexZeroPad(One.toHexString(), 32);\nconst hexFalse = hexZeroPad(Zero.toHexString(), 32);\n\nconst domainFieldTypes: Record<string, string> = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\n\nconst domainFieldNames: Array<string> = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\n\nfunction checkString(key: string): (value: any) => string {\n    return function (value: any){\n        if (typeof(value) !== \"string\") {\n            logger.throwArgumentError(`invalid domain value for ${ JSON.stringify(key) }`, `domain.${ key }`, value);\n        }\n        return value;\n    }\n}\n\nconst domainChecks: Record<string, (value: any) => any> = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function(value: any) {\n        try {\n            return BigNumber.from(value).toString()\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n    },\n    verifyingContract: function(value: any) {\n        try {\n            return getAddress(value).toLowerCase();\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function(value: any) {\n        try {\n            const bytes = arrayify(value);\n            if (bytes.length !== 32) { throw new Error(\"bad length\"); }\n            return hexlify(bytes);\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n    }\n}\n\nfunction getBaseEncoder(type: string): (value: any) => string {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n\n            const width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\n                logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n\n            const boundsUpper = MaxUint256.mask(signed ? (width - 1): width);\n            const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne): Zero;\n\n            return function(value: BigNumberish) {\n                const v = BigNumber.from(value);\n\n                if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n                    logger.throwArgumentError(`value out-of-bounds for ${ type }`, \"value\", value);\n                }\n\n                return hexZeroPad(v.toTwos(256).toHexString(), 32);\n            };\n        }\n    }\n\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            if (width === 0 || width > 32 || match[1] !== String(width)) {\n                logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n\n            return function(value: BytesLike) {\n                const bytes = arrayify(value);\n                if (bytes.length !== width) {\n                    logger.throwArgumentError(`invalid length for ${ type }`, \"value\", value);\n                }\n                return hexPadRight(value);\n            };\n        }\n    }\n\n    switch (type) {\n        case \"address\": return function(value: string) {\n            return hexZeroPad(getAddress(value), 32);\n        };\n        case \"bool\": return function(value: boolean) {\n            return ((!value) ? hexFalse: hexTrue);\n        };\n        case \"bytes\": return function(value: BytesLike) {\n            return keccak256(value);\n        };\n        case \"string\": return function(value: string) {\n            return id(value);\n        };\n    }\n\n    return null;\n}\n\nfunction encodeType(name: string, fields: Array<TypedDataField>): string {\n    return `${ name }(${ fields.map(({ name, type }) => (type + \" \" + name)).join(\",\") })`;\n}\n\nexport class TypedDataEncoder {\n    readonly primaryType: string;\n    readonly types: Record<string, Array<TypedDataField>>;\n\n    readonly _encoderCache: Record<string, (value: any) => string>;\n    readonly _types: Record<string, string>;\n\n    constructor(types: Record<string, Array<TypedDataField>>) {\n        defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n\n        defineReadOnly(this, \"_encoderCache\", { });\n        defineReadOnly(this, \"_types\", { });\n\n        // Link struct types to their direct child structs\n        const links: Record<string, Record<string, boolean>> = { };\n\n        // Link structs to structs which contain them as a child\n        const parents: Record<string, Array<string>> = { };\n\n        // Link all subtypes within a given struct\n        const subtypes: Record<string, Record<string, boolean>> = { };\n\n        Object.keys(types).forEach((type) => {\n            links[type] = { };\n            parents[type] = [ ];\n            subtypes[type] = { }\n        });\n\n        for (const name in types) {\n\n            const uniqueNames: Record<string, boolean> = { };\n\n            types[name].forEach((field) => {\n\n                // Check each field has a unique name\n                if (uniqueNames[field.name]) {\n                    logger.throwArgumentError(`duplicate variable name ${ JSON.stringify(field.name) } in ${ JSON.stringify(name) }`, \"types\", types);\n                }\n                uniqueNames[field.name] = true;\n\n                // Get the base type (drop any array specifiers)\n                const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n                if (baseType === name) {\n                    logger.throwArgumentError(`circular type reference to ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) { return ;}\n\n                if (!parents[baseType]) {\n                    logger.throwArgumentError(`unknown type ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Add linkage\n                parents[baseType].push(name);\n                links[name][baseType] = true;\n            });\n        }\n\n        // Deduce the primary type\n        const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));\n\n        if (primaryTypes.length === 0) {\n            logger.throwArgumentError(\"missing primary type\", \"types\", types);\n        } else if (primaryTypes.length > 1) {\n            logger.throwArgumentError(`ambiguous primary types or unused types: ${ primaryTypes.map((t) => (JSON.stringify(t))).join(\", \") }`, \"types\", types);\n        }\n\n        defineReadOnly(this, \"primaryType\", primaryTypes[0]);\n\n        // Check for circular type references\n        function checkCircular(type: string, found: Record<string, boolean>) {\n            if (found[type]) {\n                logger.throwArgumentError(`circular type reference to ${ JSON.stringify(type) }`, \"types\", types);\n            }\n\n            found[type] = true;\n\n            Object.keys(links[type]).forEach((child) => {\n                if (!parents[child]) { return; }\n\n                // Recursively check children\n                checkCircular(child, found);\n\n                // Mark all ancestors as having this decendant\n                Object.keys(found).forEach((subtype) => {\n                    subtypes[subtype][child] = true;\n                });\n            });\n\n            delete found[type];\n        }\n        checkCircular(this.primaryType, { });\n\n        // Compute each fully describe type\n        for (const name in subtypes) {\n            const st = Object.keys(subtypes[name]);\n            st.sort();\n            this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\");\n        }\n    }\n\n    getEncoder(type: string): (value: any) => string {\n        let encoder = this._encoderCache[type];\n        if (!encoder) {\n            encoder = this._encoderCache[type] = this._getEncoder(type);\n        }\n        return encoder;\n    }\n\n    _getEncoder(type: string): (value: any) => string {\n\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return encoder; }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            const length = parseInt(match[3]);\n            return (value: Array<any>) => {\n                if (length >= 0 && value.length !== length) {\n                    logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n                }\n\n                let result = value.map(subEncoder);\n                if (this._types[subtype]) {\n                    result = result.map(keccak256);\n                }\n\n                return keccak256(hexConcat(result));\n            };\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this._types[type]);\n            return (value: Record<string, any>) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this._types[type]) { return keccak256(result); }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return hexConcat(values);\n            }\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    encodeType(name: string): string {\n        const result = this._types[name];\n        if (!result) {\n            logger.throwArgumentError(`unknown type: ${ JSON.stringify(name) }`, \"name\", name);\n        }\n        return result;\n    }\n\n    encodeData(type: string, value: any): string {\n        return this.getEncoder(type)(value);\n    }\n\n    hashStruct(name: string, value: Record<string, any>): string {\n        return keccak256(this.encodeData(name, value));\n    }\n\n    encode(value: Record<string, any>): string {\n        return this.encodeData(this.primaryType, value);\n    }\n\n    hash(value: Record<string, any>): string {\n        return this.hashStruct(this.primaryType, value);\n    }\n\n    _visit(type: string, value: any, callback: (type: string, data: any) => any): any {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return callback(type, value); }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const length = parseInt(match[3]);\n            if (length >= 0 && value.length !== length) {\n                logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            return value.map((v: any) => this._visit(subtype, v, callback));\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, <Record<string, any>>{});\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    visit(value: Record<string, any>, callback: (type: string, data: any) => any): any {\n        return this._visit(this.primaryType, value, callback);\n    }\n\n    static from(types: Record<string, Array<TypedDataField>>): TypedDataEncoder {\n        return new TypedDataEncoder(types);\n    }\n\n    static getPrimaryType(types: Record<string, Array<TypedDataField>>): string {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n\n    static hashStruct(name: string, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n\n    static hashDomain(domain: TypedDataDomain): string {\n        const domainFields: Array<TypedDataField> = [ ];\n        for (const name in domain) {\n            const type = domainFieldTypes[name];\n            if (!type) {\n                logger.throwArgumentError(`invalid typed-data domain key: ${ JSON.stringify(name) }`, \"domain\", domain);\n            }\n            domainFields.push({ name, type });\n        }\n\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n\n    static encode(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return hexConcat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n\n    static hash(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n\n    // Replaces all address types with ENS names with their looked up address\n    static async resolveNames(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, resolveName: (name: string) => Promise<string>): Promise<{ domain: TypedDataDomain, value: any }> {\n        // Make a copy to isolate it from the object passed in\n        domain = shallowCopy(domain);\n\n        // Look up all ENS names\n        const ensCache: Record<string, string> = { };\n\n        // Do we need to look up the domain's verifyingContract?\n        if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n            ensCache[domain.verifyingContract] = \"0x\";\n        }\n\n        // We are going to use the encoder to visit all the base values\n        const encoder = TypedDataEncoder.from(types);\n\n        // Get a list of all the addresses\n        encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && !isHexString(value, 20)) {\n                ensCache[value] = \"0x\";\n            }\n            return value;\n        });\n\n        // Lookup each name\n        for (const name in ensCache) {\n            ensCache[name] = await resolveName(name);\n        }\n\n        // Replace the domain verifyingContract if needed\n        if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n            domain.verifyingContract = ensCache[domain.verifyingContract];\n        }\n\n        // Replace all ENS names with their address\n        value = encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && ensCache[value]) { return ensCache[value]; }\n            return value;\n        });\n\n        return { domain, value };\n    }\n\n    static getPayload(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): any {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n\n        // Derive the EIP712Domain Struct reference type\n        const domainValues: Record<string, any> = { };\n        const domainTypes: Array<{ name: string, type:string }> = [ ];\n\n        domainFieldNames.forEach((name) => {\n            const value = (<any>domain)[name];\n            if (value == null) { return; }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n\n        const encoder = TypedDataEncoder.from(types);\n\n        const typesWithDomain = shallowCopy(types);\n        if (typesWithDomain.EIP712Domain) {\n            logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        } else {\n            typesWithDomain.EIP712Domain = domainTypes;\n        }\n\n        // Validate the data structures and types\n        encoder.encode(value);\n\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type: string, value: any) => {\n\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(arrayify(value));\n                }\n\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return BigNumber.from(value).toString();\n                }\n\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        if (typeof(value) !== \"string\") {\n                            logger.throwArgumentError(`invalid string`, \"value\", value);\n                        }\n                        return value;\n                }\n\n                return logger.throwArgumentError(\"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexDataSlice, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { id } from \"@ethersproject/hash\";\nimport { keccak256 } from \"@ethersproject/keccak256\"\nimport { defineReadOnly, Description, getStatic } from \"@ethersproject/properties\";\n\nimport { AbiCoder, defaultAbiCoder } from \"./abi-coder\";\nimport { checkResultErrors, Result } from \"./coders/abstract-coder\";\nimport { ConstructorFragment, ErrorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, JsonFragment, ParamType } from \"./fragments\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport { checkResultErrors, Result };\n\nexport class LogDescription extends Description<LogDescription> {\n    readonly eventFragment: EventFragment;\n    readonly name: string;\n    readonly signature: string;\n    readonly topic: string;\n    readonly args: Result\n}\n\nexport class TransactionDescription extends Description<TransactionDescription> {\n    readonly functionFragment: FunctionFragment;\n    readonly name: string;\n    readonly args: Result;\n    readonly signature: string;\n    readonly sighash: string;\n    readonly value: BigNumber;\n}\n\nexport class ErrorDescription extends Description<ErrorDescription> {\n    readonly errorFragment: ErrorFragment;\n    readonly name: string;\n    readonly args: Result;\n    readonly signature: string;\n    readonly sighash: string;\n}\n\nexport class Indexed extends Description<Indexed> {\n    readonly hash: string;\n    readonly _isIndexed: boolean;\n\n    static isIndexed(value: any): value is Indexed {\n        return !!(value && value._isIndexed);\n    }\n}\n\nconst BuiltinErrors: Record<string, { signature: string, inputs: Array<string>, name: string, reason?: boolean }> = {\n    \"0x08c379a0\": { signature: \"Error(string)\", name: \"Error\", inputs: [ \"string\" ], reason: true },\n    \"0x4e487b71\": { signature: \"Panic(uint256)\", name: \"Panic\", inputs: [ \"uint256\" ] }\n}\n\nfunction wrapAccessError(property: string, error: Error): Error {\n    const wrap = new Error(`deferred error during ABI decoding triggered accessing ${ property }`);\n    (<any>wrap).error = error;\n    return wrap;\n}\n\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\nexport class Interface {\n    readonly fragments: ReadonlyArray<Fragment>;\n\n    readonly errors: { [ name: string ]: ErrorFragment };\n    readonly events: { [ name: string ]: EventFragment };\n    readonly functions: { [ name: string ]: FunctionFragment };\n    readonly structs: { [ name: string ]: any };\n\n    readonly deploy: ConstructorFragment;\n\n    readonly _abiCoder: AbiCoder;\n\n    readonly _isInterface: boolean;\n\n    constructor(fragments: string | ReadonlyArray<Fragment | JsonFragment | string>) {\n        logger.checkNew(new.target, Interface);\n\n        let abi: ReadonlyArray<Fragment | JsonFragment | string> = [ ];\n        if (typeof(fragments) === \"string\") {\n            abi = JSON.parse(fragments);\n        } else {\n            abi = fragments;\n        }\n\n        defineReadOnly(this, \"fragments\", abi.map((fragment) => {\n            return Fragment.from(fragment);\n        }).filter((fragment) => (fragment != null)));\n\n        defineReadOnly(this, \"_abiCoder\", getStatic<() => AbiCoder>(new.target, \"getAbiCoder\")());\n\n        defineReadOnly(this, \"functions\", { });\n        defineReadOnly(this, \"errors\", { });\n        defineReadOnly(this, \"events\", { });\n        defineReadOnly(this, \"structs\", { });\n\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment) => {\n            let bucket: { [ name: string ]: Fragment } = null;\n            switch (fragment.type) {\n                case \"constructor\":\n                    if (this.deploy) {\n                        logger.warn(\"duplicate definition - constructor\");\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    defineReadOnly(this, \"deploy\", <ConstructorFragment>fragment);\n                    return;\n                case \"function\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = this.functions;\n                    break;\n                case \"event\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = this.events;\n                    break;\n                case \"error\":\n                    bucket = this.errors;\n                    break;\n                default:\n                    return;\n            }\n\n            let signature = fragment.format();\n            if (bucket[signature]) {\n                logger.warn(\"duplicate definition - \" + signature);\n                return;\n            }\n\n            bucket[signature] = fragment;\n        });\n\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineReadOnly(this, \"deploy\", ConstructorFragment.from({\n                payable: false,\n                type: \"constructor\"\n            }));\n        }\n\n        defineReadOnly(this, \"_isInterface\", true);\n    }\n\n    format(format?: string): string | Array<string> {\n        if (!format) { format = FormatTypes.full; }\n        if (format === FormatTypes.sighash) {\n            logger.throwArgumentError(\"interface does not support formatting sighash\", \"format\", format);\n        }\n\n        const abi = this.fragments.map((fragment) => fragment.format(format));\n\n        // We need to re-bundle the JSON fragments a bit\n        if (format === FormatTypes.json) {\n             return JSON.stringify(abi.map((j) => JSON.parse(j)));\n        }\n\n        return abi;\n    }\n\n    // Sub-classes can override these to handle other blockchains\n    static getAbiCoder(): AbiCoder {\n        return defaultAbiCoder;\n    }\n\n    static getAddress(address: string): string {\n        return getAddress(address);\n    }\n\n    static getSighash(fragment: ErrorFragment | FunctionFragment): string {\n        return hexDataSlice(id(fragment.format()), 0, 4);\n    }\n\n    static getEventTopic(eventFragment: EventFragment): string {\n        return id(eventFragment.format());\n    }\n\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getFunction(nameOrSignatureOrSighash: string): FunctionFragment {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            for (const name in this.functions) {\n                if (nameOrSignatureOrSighash === this.getSighash(name)) {\n                    return this.functions[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching function\", \"sighash\", nameOrSignatureOrSighash);\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.functions).filter((f) => (f.split(\"(\"/* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching function\", \"name\", name);\n            } else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching functions\", \"name\", name);\n            }\n\n            return this.functions[matching[0]];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching function\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    getEvent(nameOrSignatureOrTopic: string): EventFragment {\n        if (isHexString(nameOrSignatureOrTopic)) {\n            const topichash = nameOrSignatureOrTopic.toLowerCase();\n            for (const name in this.events) {\n                if (topichash === this.getEventTopic(name)) {\n                    return this.events[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching event\", \"topichash\", topichash);\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrTopic.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrTopic.trim();\n            const matching = Object.keys(this.events).filter((f) => (f.split(\"(\"/* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching event\", \"name\", name);\n            } else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching events\", \"name\", name);\n            }\n\n            return this.events[matching[0]];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching event\", \"signature\", nameOrSignatureOrTopic);\n        }\n        return result;\n    }\n\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getError(nameOrSignatureOrSighash: string): ErrorFragment {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            const getSighash = getStatic<(f: ErrorFragment | FunctionFragment) => string>(this.constructor, \"getSighash\");\n            for (const name in this.errors) {\n                const error = this.errors[name];\n                if (nameOrSignatureOrSighash === getSighash(error)) {\n                    return this.errors[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching error\", \"sighash\", nameOrSignatureOrSighash);\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.errors).filter((f) => (f.split(\"(\"/* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching error\", \"name\", name);\n            } else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching errors\", \"name\", name);\n            }\n\n            return this.errors[matching[0]];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.errors[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching error\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n\n    // Get the sighash (the bytes4 selector) used by Solidity to identify a function\n    getSighash(fragment: ErrorFragment | FunctionFragment | string): string {\n        if (typeof(fragment) === \"string\") {\n            try {\n                fragment = this.getFunction(fragment);\n            } catch (error) {\n                try {\n                    fragment = this.getError(<string>fragment);\n                } catch (_) {\n                    throw error;\n                }\n            }\n        }\n\n        return getStatic<(f: ErrorFragment | FunctionFragment) => string>(this.constructor, \"getSighash\")(fragment);\n    }\n\n    // Get the topic (the bytes32 hash) used by Solidity to identify an event\n    getEventTopic(eventFragment: EventFragment | string): string {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        return getStatic<(e: EventFragment) => string>(this.constructor, \"getEventTopic\")(eventFragment);\n    }\n\n\n    _decodeParams(params: ReadonlyArray<ParamType>, data: BytesLike): Result {\n        return this._abiCoder.decode(params, data)\n    }\n\n    _encodeParams(params: ReadonlyArray<ParamType>, values: ReadonlyArray<any>): string {\n        return this._abiCoder.encode(params, values)\n    }\n\n    encodeDeploy(values?: ReadonlyArray<any>): string {\n        return this._encodeParams(this.deploy.inputs, values || [ ]);\n    }\n\n    decodeErrorResult(fragment: ErrorFragment | string, data: BytesLike): Result {\n        if (typeof(fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n\n        const bytes = arrayify(data);\n\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(fragment)) {\n            logger.throwArgumentError(`data signature does not match error ${ fragment.name }.`, \"data\", hexlify(bytes));\n        }\n\n        return this._decodeParams(fragment.inputs, bytes.slice(4));\n    }\n\n    encodeErrorResult(fragment: ErrorFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n\n        return hexlify(concat([\n            this.getSighash(fragment),\n            this._encodeParams(fragment.inputs, values || [ ])\n        ]));\n    }\n\n    // Decode the data for a function call (e.g. tx.data)\n    decodeFunctionData(functionFragment: FunctionFragment | string, data: BytesLike): Result {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        const bytes = arrayify(data);\n\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) {\n            logger.throwArgumentError(`data signature does not match function ${ functionFragment.name }.`, \"data\", hexlify(bytes));\n        }\n\n        return this._decodeParams(functionFragment.inputs, bytes.slice(4));\n    }\n\n    // Encode the data for a function call (e.g. tx.data)\n    encodeFunctionData(functionFragment: FunctionFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        return hexlify(concat([\n            this.getSighash(functionFragment),\n            this._encodeParams(functionFragment.inputs, values || [ ])\n        ]));\n    }\n\n    // Decode the result from a function call (e.g. from eth_call)\n    decodeFunctionResult(functionFragment: FunctionFragment | string, data: BytesLike): Result {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        let bytes = arrayify(data);\n\n        let reason: string = null;\n        let errorArgs: Result = null;\n        let errorName: string = null;\n        let errorSignature: string = null;\n        switch (bytes.length % this._abiCoder._getWordSize()) {\n            case 0:\n                try {\n                    return this._abiCoder.decode(functionFragment.outputs, bytes);\n                } catch (error) { }\n                break;\n\n            case 4: {\n                const selector = hexlify(bytes.slice(0, 4));\n                const builtin = BuiltinErrors[selector];\n                if (builtin) {\n                    errorArgs = this._abiCoder.decode(builtin.inputs, bytes.slice(4));\n                    errorName = builtin.name;\n                    errorSignature = builtin.signature;\n                    if (builtin.reason) { reason = errorArgs[0]; }\n                } else {\n                    try {\n                        const error = this.getError(selector);\n                        errorArgs = this._abiCoder.decode(error.inputs, bytes.slice(4));\n                        errorName = error.name;\n                        errorSignature = error.format();\n                    } catch (error) {\n                        console.log(error);\n                    }\n                }\n                break;\n            }\n        }\n\n        return logger.throwError(\"call revert exception\", Logger.errors.CALL_EXCEPTION, {\n            method: functionFragment.format(),\n            errorArgs, errorName, errorSignature, reason\n        });\n    }\n\n    // Encode the result for a function call (e.g. for eth_call)\n    encodeFunctionResult(functionFragment: FunctionFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        return hexlify(this._abiCoder.encode(functionFragment.outputs, values || [ ]));\n    }\n\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(eventFragment: EventFragment, values: ReadonlyArray<any>): Array<string | Array<string>> {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        if (values.length > eventFragment.inputs.length) {\n            logger.throwError(\"too many arguments for \" + eventFragment.format(), Logger.errors.UNEXPECTED_ARGUMENT, {\n                argument: \"values\",\n                value: values\n            })\n        }\n\n        let topics: Array<string | Array<string>> = [];\n        if (!eventFragment.anonymous) { topics.push(this.getEventTopic(eventFragment)); }\n\n        const encodeTopic = (param: ParamType, value: any): string => {\n            if (param.type === \"string\") {\n                 return id(value);\n            } else if (param.type === \"bytes\") {\n                 return keccak256(hexlify(value));\n            }\n\n            // Check addresses are valid\n            if (param.type === \"address\") { this._abiCoder.encode( [ \"address\" ], [ value ]); }\n            return hexZeroPad(hexlify(value), 32);\n        };\n\n        values.forEach((value, index) => {\n\n            let param = eventFragment.inputs[index];\n\n            if (!param.indexed) {\n                if (value != null) {\n                    logger.throwArgumentError(\"cannot filter non-indexed parameters; must be null\", (\"contract.\" + param.name), value);\n                }\n                return;\n            }\n\n            if (value == null) {\n                topics.push(null);\n            } else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            } else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            } else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n\n        return topics;\n    }\n\n    encodeEventLog(eventFragment: EventFragment, values: ReadonlyArray<any>): { data: string, topics: Array<string> } {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        const topics: Array<string> = [ ];\n\n        const dataTypes: Array<ParamType> = [ ];\n        const dataValues: Array<string> = [ ];\n\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n\n        if (values.length !== eventFragment.inputs.length) {\n            logger.throwArgumentError(\"event arguments/values mismatch\", \"values\", values);\n        }\n\n        eventFragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === \"string\") {\n                    topics.push(id(value))\n                } else if (param.type === \"bytes\") {\n                    topics.push(keccak256(value))\n                } else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    // @TODO\n                    throw new Error(\"not implemented\");\n                } else {\n                    topics.push(this._abiCoder.encode([ param.type] , [ value ]));\n                }\n            } else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n\n        return {\n            data: this._abiCoder.encode(dataTypes , dataValues),\n            topics: topics\n        };\n    }\n\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(eventFragment: EventFragment | string, data: BytesLike, topics?: ReadonlyArray<string>): Result {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        if (topics != null && !eventFragment.anonymous) {\n            let topicHash = this.getEventTopic(eventFragment);\n            if (!isHexString(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {\n                logger.throwError(\"fragment/topic mismatch\", Logger.errors.INVALID_ARGUMENT, { argument: \"topics[0]\", expected: topicHash, value: topics[0] });\n            }\n            topics = topics.slice(1);\n        }\n\n        let indexed: Array<ParamType> = [];\n        let nonIndexed: Array<ParamType> = [];\n        let dynamic: Array<boolean> = [];\n\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    indexed.push(ParamType.fromObject({ type: \"bytes32\", name: param.name }));\n                    dynamic.push(true);\n                } else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            } else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n\n        let resultIndexed = (topics != null) ? this._abiCoder.decode(indexed, concat(topics)): null;\n        let resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);\n\n        let result: (Array<any> & { [ key: string ]: any }) = [ ];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: null });\n\n                } else if (dynamic[index]) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: resultIndexed[indexedIndex++] });\n\n                } else {\n                    try {\n                        result[index] = resultIndexed[indexedIndex++];\n                    } catch (error) {\n                        result[index] = error;\n                    }\n                }\n            } else {\n                try {\n                    result[index] = resultNonIndexed[nonIndexedIndex++];\n                } catch (error) {\n                    result[index] = error;\n                }\n            }\n\n            // Add the keyword argument if named and safe\n            if (param.name && result[param.name] == null) {\n                const value = result[index];\n\n                // Make error named values throw on access\n                if (value instanceof Error) {\n                    Object.defineProperty(result, param.name, {\n                        enumerable: true,\n                        get: () => { throw wrapAccessError(`property ${ JSON.stringify(param.name) }`, value); }\n                    });\n                } else {\n                    result[param.name] = value;\n                }\n            }\n        });\n\n        // Make all error indexed values throw on access\n        for (let i = 0; i < result.length; i++) {\n            const value = result[i];\n            if (value instanceof Error) {\n                Object.defineProperty(result, i, {\n                    enumerable: true,\n                    get: () => { throw wrapAccessError(`index ${ i }`, value); }\n                });\n            }\n        }\n\n        return Object.freeze(result);\n    }\n\n    // Given a transaction, find the matching function fragment (if any) and\n    // determine all its properties and call parameters\n    parseTransaction(tx: { data: string, value?: BigNumberish }): TransactionDescription {\n        let fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase())\n\n        if (!fragment) { return null; }\n\n        return new TransactionDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + tx.data.substring(10)),\n            functionFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n            value: BigNumber.from(tx.value || \"0\"),\n        });\n    }\n\n    // @TODO\n    //parseCallResult(data: BytesLike): ??\n\n    // Given an event log, find the matching event fragment (if any) and\n    // determine all its properties and values\n    parseLog(log: { topics: Array<string>, data: string}): LogDescription {\n        let fragment = this.getEvent(log.topics[0]);\n\n        if (!fragment || fragment.anonymous) { return null; }\n\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe just a fragment?\n\n\n       return new LogDescription({\n            eventFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            topic: this.getEventTopic(fragment),\n            args: this.decodeEventLog(fragment, log.data, log.topics)\n        });\n    }\n\n    parseError(data: BytesLike): ErrorDescription {\n        const hexData = hexlify(data);\n        let fragment = this.getError(hexData.substring(0, 10).toLowerCase())\n\n        if (!fragment) { return null; }\n\n        return new ErrorDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + hexData.substring(10)),\n            errorFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n        });\n    }\n\n\n    /*\n    static from(value: Array<Fragment | string | JsonAbi> | string | Interface) {\n        if (Interface.isInterface(value)) {\n            return value;\n        }\n        if (typeof(value) === \"string\") {\n            return new Interface(JSON.parse(value));\n        }\n        return new Interface(value);\n    }\n    */\n\n    static isInterface(value: any): value is Interface {\n        return !!(value && value._isInterface);\n    }\n}\n\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","import _ec from \"elliptic\";\nvar EC = _ec.ec;\nexport { EC };\n//# sourceMappingURL=elliptic.js.map","export enum SupportedAlgorithm { sha256 = \"sha256\", sha512 = \"sha512\" };\n\n","\"use strict\";\n\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { SupportedAlgorithm } from \"./types\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport function ripemd160(data: BytesLike): string {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha256(data: BytesLike): string {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha512(data: BytesLike): string {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function computeHmac(algorithm: SupportedAlgorithm, key: BytesLike, data: BytesLike): string {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n\n    return \"0x\" + hash.hmac((<any>hash)[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n\n","\"use strict\";\n\nimport { arrayify, BytesLike, hexlify } from \"@ethersproject/bytes\";\nimport { computeHmac, SupportedAlgorithm } from \"@ethersproject/sha2\";\n\nexport function pbkdf2(password: BytesLike, salt: BytesLike, iterations: number, keylen: number, hashAlgorithm: string): string {\n    password = arrayify(password);\n    salt = arrayify(salt);\n    let hLen;\n    let l = 1;\n    const DK = new Uint8Array(keylen)\n    const block1 = new Uint8Array(salt.length + 4)\n    block1.set(salt);\n    //salt.copy(block1, 0, 0, salt.length)\n\n    let r: number;\n    let T: Uint8Array;\n\n    for (let i = 1; i <= l; i++) {\n        //block1.writeUInt32BE(i, salt.length)\n        block1[salt.length] = (i >> 24) & 0xff;\n        block1[salt.length + 1] = (i >> 16) & 0xff;\n        block1[salt.length + 2] = (i >> 8) & 0xff;\n        block1[salt.length + 3] = i & 0xff;\n\n        //let U = createHmac(password).update(block1).digest();\n        let U = arrayify(computeHmac(<SupportedAlgorithm>hashAlgorithm, password, block1));\n\n        if (!hLen) {\n            hLen = U.length\n            T = new Uint8Array(hLen)\n            l = Math.ceil(keylen / hLen)\n            r = keylen - (l - 1) * hLen\n        }\n\n        //U.copy(T, 0, 0, hLen)\n        T.set(U);\n\n\n        for (let j = 1; j < iterations; j++) {\n            //U = createHmac(password).update(U).digest();\n            U = arrayify(computeHmac(<SupportedAlgorithm>hashAlgorithm, password, U));\n            for (let k = 0; k < hLen; k++) T[k] ^= U[k]\n        }\n\n\n        const destPos = (i - 1) * hLen\n        const len = (i === l ? r : hLen)\n        //T.copy(DK, destPos, 0, len)\n        DK.set(arrayify(T).slice(0, len), destPos);\n    }\n\n    return hexlify(DK)\n}\n\n","\"use strict\";\n\n// This gets overridden by rollup\nconst exportWordlist = false;\n\nimport { id } from \"@ethersproject/hash\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nexport const logger = new Logger(version);\n\nexport abstract class Wordlist {\n    readonly locale: string;\n\n    constructor(locale: string) {\n        logger.checkAbstract(new.target, Wordlist);\n        defineReadOnly(this, \"locale\", locale);\n    }\n\n    abstract getWord(index: number): string;\n    abstract getWordIndex(word: string): number;\n\n    // Subclasses may override this\n    split(mnemonic: string): Array<string> {\n        return mnemonic.toLowerCase().split(/ +/g)\n    }\n\n    // Subclasses may override this\n    join(words: Array<string>): string {\n        return words.join(\" \");\n    }\n\n    static check(wordlist: Wordlist): string {\n        const words = [];\n        for (let i = 0; i < 2048; i++) {\n            const word = wordlist.getWord(i);\n            /* istanbul ignore if */\n            if (i !== wordlist.getWordIndex(word)) { return \"0x\"; }\n            words.push(word);\n        }\n        return id(words.join(\"\\n\") + \"\\n\");\n    }\n\n    static register(lang: Wordlist, name?: string): void {\n        if (!name) { name = lang.locale; }\n\n        /* istanbul ignore if */\n        if (exportWordlist) {\n            try {\n                const anyGlobal = (window as any)\n                if (anyGlobal._ethers && anyGlobal._ethers.wordlists) {\n                    if (!anyGlobal._ethers.wordlists[name]) {\n                         defineReadOnly(anyGlobal._ethers.wordlists, name, lang);\n                    }\n                }\n            } catch (error) { }\n        }\n    }\n\n}\n\n","\"use strict\";\n\nimport { Wordlist } from \"./wordlist\";\n\n\nconst words = \"AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo\";\n\nlet wordlist: Array<string> = null;\n\n\nfunction loadWords(lang: Wordlist): void {\n    if (wordlist != null) { return; }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n    }\n}\n\nclass LangEn extends Wordlist {\n    constructor() {\n        super(\"en\");\n    }\n\n    getWord(index: number): string {\n        loadWords(this);\n        return wordlist[index];\n    }\n\n    getWordIndex(word: string): number {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\n\nconst langEn = new LangEn();\nWordlist.register(langEn);\n\nexport { langEn };\n","\"use strict\";\n\n// Wordlists\n// See: https://github.com/bitcoin/bips/blob/master/bip-0039/bip-0039-wordlists.md\n\n// Browser; only include English by default\n\nimport { Wordlist } from \"./wordlist\";\n\nimport { langEn as en } from \"./lang-en\";\n\nexport const wordlists: { [ locale: string ]: Wordlist } = {\n  en: en\n}\n","\"use strict\";\n\nimport { arrayify } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Debugging line for testing browser lib in node\n//const window = { crypto: { getRandomValues: () => { } } };\n\nlet anyGlobal: any = null;\ntry {\n    anyGlobal = (window as any);\n    if (anyGlobal == null) { throw new Error(\"try next\"); }\n} catch (error) {\n    try {\n        anyGlobal = (global as any);\n        if (anyGlobal == null) { throw new Error(\"try next\"); }\n    } catch (error) {\n        anyGlobal = { };\n    }\n}\n\nlet crypto: any = anyGlobal.crypto || anyGlobal.msCrypto;\nif (!crypto || !crypto.getRandomValues) {\n\n    logger.warn(\"WARNING: Missing strong random number source\");\n\n    crypto = {\n        getRandomValues: function(buffer: Uint8Array): Uint8Array {\n            return logger.throwError(\"no secure random source avaialble\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"crypto.getRandomValues\"\n            });\n        }\n    };\n}\n\nexport function randomBytes(length: number): Uint8Array {\n    if (length <= 0 || length > 1024 || (length % 1) || length != length) {\n        logger.throwArgumentError(\"invalid length\", \"length\", length);\n    }\n\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return arrayify(result);\n};\n","\"use strict\";\n\nexport function shuffled(array: Array<any>): Array<any> {\n    array = array.slice();\n\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const tmp = array[i];\n        array[i] = array[j];\n        array[j] = tmp;\n    }\n\n    return array;\n}\n","\"use strict\";\n\n(function(root) {\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16))\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c)\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = value >> 8;\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    if (typeof exports !== 'undefined') {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(aesjs);\n\n    // Web Browsers\n    } else {\n\n        // If there was an existing library at \"aesjs\" make sure it's still available\n        if (root.aesjs) {\n            aesjs._aesjs = root.aesjs;\n        }\n\n        root.aesjs = aesjs;\n    }\n\n\n})(this);\n","\"use strict\";\n\nimport { arrayify, Bytes, BytesLike, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from '@ethersproject/strings';\n\nexport function looseArrayify(hexString: string): Uint8Array {\n    if (typeof(hexString) === 'string' && hexString.substring(0, 2) !== '0x') {\n        hexString = '0x' + hexString;\n    }\n    return arrayify(hexString);\n}\n\nexport function zpad(value: String | number, length: number): String {\n    value = String(value);\n    while (value.length < length) { value = '0' + value; }\n    return value;\n}\n\nexport function getPassword(password: Bytes | string): Uint8Array {\n    if (typeof(password) === 'string') {\n        return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);\n    }\n    return arrayify(password);\n}\n\nexport function searchPath(object: any, path: string): string {\n    let currentChild = object;\n\n    const comps = path.toLowerCase().split('/');\n    for (let i = 0; i < comps.length; i++) {\n\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n             if (key.toLowerCase() === comps[i]) {\n                 matchingChild = currentChild[key];\n                 break;\n             }\n        }\n\n        // Didn't find one. :'(\n        if (matchingChild === null) {\n            return null;\n        }\n\n        // Now check this child...\n        currentChild = matchingChild;\n    }\n\n    return currentChild;\n}\n\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\nexport function uuidV4(randomBytes: BytesLike): string {\n    const bytes = arrayify(randomBytes);\n\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n\n    const value = hexlify(bytes);\n\n    return [\n       value.substring(2, 10),\n       value.substring(10, 14),\n       value.substring(14, 18),\n       value.substring(18, 22),\n       value.substring(22, 34),\n    ].join(\"-\");\n}\n\n","\"use strict\";\n\nimport aes from \"aes-js\";\n\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, Bytes } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { Description } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { getPassword, looseArrayify, searchPath } from \"./utils\";\n\nexport interface _CrowdsaleAccount {\n    address: string;\n    privateKey: string;\n\n    _isCrowdsaleAccount: boolean;\n}\n\nexport class CrowdsaleAccount extends Description<_CrowdsaleAccount> implements ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n    readonly mnemonic?: string;\n    readonly path?: string;\n\n    readonly _isCrowdsaleAccount: boolean;\n\n    isCrowdsaleAccount(value: any): value is CrowdsaleAccount {\n        return !!(value && value._isCrowdsaleAccount);\n    }\n}\n\n// See: https://github.com/ethereum/pyethsaletool\nexport function decrypt(json: string, password: Bytes | string): ExternallyOwnedAccount {\n    const data = JSON.parse(json);\n\n    password = getPassword(password);\n\n    // Ethereum Address\n    const ethaddr = getAddress(searchPath(data, \"ethaddr\"));\n\n    // Encrypted Seed\n    const encseed = looseArrayify(searchPath(data, \"encseed\"));\n    if (!encseed || (encseed.length % 16) !== 0) {\n        logger.throwArgumentError(\"invalid encseed\", \"json\", json);\n    }\n\n    const key = arrayify(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n\n    // Decrypt the seed\n    const aesCbc = new aes.ModeOfOperation.cbc(key, iv);\n    const seed = aes.padding.pkcs7.strip(arrayify(aesCbc.decrypt(encryptedSeed)));\n\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n\n    const seedHexBytes = toUtf8Bytes(seedHex);\n\n    const privateKey = keccak256(seedHexBytes);\n\n    return new CrowdsaleAccount ({\n        _isCrowdsaleAccount: true,\n        address: ethaddr,\n        privateKey: privateKey\n    });\n}\n\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\n\n\nexport function isCrowdsaleWallet(json: string): boolean {\n    let data: any = null;\n    try {\n        data = JSON.parse(json);\n    } catch (error) { return false; }\n\n    return (data.encseed && data.ethaddr);\n}\n\nexport function isKeystoreWallet(json: string): boolean {\n    let data: any = null;\n    try {\n        data = JSON.parse(json);\n    } catch (error) { return false; }\n\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n        return false;\n    }\n\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n    return true;\n}\n\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\n\nexport function getJsonWalletAddress(json: string): string {\n    if (isCrowdsaleWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).ethaddr);\n        } catch (error) { return null; }\n    }\n\n    if (isKeystoreWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).address);\n        } catch (error) { return null; }\n    }\n\n    return null;\n}\n\n","\"use strict\";\n\n(function(root) {\n    const MAX_VALUE = 0x7fffffff;\n\n    // The SHA256 and PBKDF2 implementation are from scrypt-async-js:\n    // See: https://github.com/dchest/scrypt-async-js\n    function SHA256(m) {\n        const K = new Uint32Array([\n           0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n           0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n           0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n           0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n           0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n           0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n           0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n           0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n           0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n           0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n           0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n           0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n           0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n       ]);\n\n        let h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a;\n        let h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;\n        const w = new Uint32Array(64);\n\n        function blocks(p) {\n            let off = 0, len = p.length;\n            while (len >= 64) {\n                let a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, u, i, j, t1, t2;\n\n                for (i = 0; i < 16; i++) {\n                    j = off + i*4;\n                    w[i] = ((p[j] & 0xff)<<24) | ((p[j+1] & 0xff)<<16) |\n                    ((p[j+2] & 0xff)<<8) | (p[j+3] & 0xff);\n                }\n\n                for (i = 16; i < 64; i++) {\n                    u = w[i-2];\n                    t1 = ((u>>>17) | (u<<(32-17))) ^ ((u>>>19) | (u<<(32-19))) ^ (u>>>10);\n\n                    u = w[i-15];\n                    t2 = ((u>>>7) | (u<<(32-7))) ^ ((u>>>18) | (u<<(32-18))) ^ (u>>>3);\n\n                    w[i] = (((t1 + w[i-7]) | 0) + ((t2 + w[i-16]) | 0)) | 0;\n                }\n\n                for (i = 0; i < 64; i++) {\n                    t1 = ((((((e>>>6) | (e<<(32-6))) ^ ((e>>>11) | (e<<(32-11))) ^\n                             ((e>>>25) | (e<<(32-25)))) + ((e & f) ^ (~e & g))) | 0) +\n                          ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n\n                    t2 = ((((a>>>2) | (a<<(32-2))) ^ ((a>>>13) | (a<<(32-13))) ^\n                           ((a>>>22) | (a<<(32-22)))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n\n                    h = g;\n                    g = f;\n                    f = e;\n                    e = (d + t1) | 0;\n                    d = c;\n                    c = b;\n                    b = a;\n                    a = (t1 + t2) | 0;\n                }\n\n                h0 = (h0 + a) | 0;\n                h1 = (h1 + b) | 0;\n                h2 = (h2 + c) | 0;\n                h3 = (h3 + d) | 0;\n                h4 = (h4 + e) | 0;\n                h5 = (h5 + f) | 0;\n                h6 = (h6 + g) | 0;\n                h7 = (h7 + h) | 0;\n\n                off += 64;\n                len -= 64;\n            }\n        }\n\n        blocks(m);\n\n        let i, bytesLeft = m.length % 64,\n        bitLenHi = (m.length / 0x20000000) | 0,\n        bitLenLo = m.length << 3,\n        numZeros = (bytesLeft < 56) ? 56 : 120,\n        p = m.slice(m.length - bytesLeft, m.length);\n\n        p.push(0x80);\n        for (i = bytesLeft + 1; i < numZeros; i++) { p.push(0); }\n        p.push((bitLenHi >>> 24) & 0xff);\n        p.push((bitLenHi >>> 16) & 0xff);\n        p.push((bitLenHi >>> 8)  & 0xff);\n        p.push((bitLenHi >>> 0)  & 0xff);\n        p.push((bitLenLo >>> 24) & 0xff);\n        p.push((bitLenLo >>> 16) & 0xff);\n        p.push((bitLenLo >>> 8)  & 0xff);\n        p.push((bitLenLo >>> 0)  & 0xff);\n\n        blocks(p);\n\n        return [\n            (h0 >>> 24) & 0xff, (h0 >>> 16) & 0xff, (h0 >>> 8) & 0xff, (h0 >>> 0) & 0xff,\n            (h1 >>> 24) & 0xff, (h1 >>> 16) & 0xff, (h1 >>> 8) & 0xff, (h1 >>> 0) & 0xff,\n            (h2 >>> 24) & 0xff, (h2 >>> 16) & 0xff, (h2 >>> 8) & 0xff, (h2 >>> 0) & 0xff,\n            (h3 >>> 24) & 0xff, (h3 >>> 16) & 0xff, (h3 >>> 8) & 0xff, (h3 >>> 0) & 0xff,\n            (h4 >>> 24) & 0xff, (h4 >>> 16) & 0xff, (h4 >>> 8) & 0xff, (h4 >>> 0) & 0xff,\n            (h5 >>> 24) & 0xff, (h5 >>> 16) & 0xff, (h5 >>> 8) & 0xff, (h5 >>> 0) & 0xff,\n            (h6 >>> 24) & 0xff, (h6 >>> 16) & 0xff, (h6 >>> 8) & 0xff, (h6 >>> 0) & 0xff,\n            (h7 >>> 24) & 0xff, (h7 >>> 16) & 0xff, (h7 >>> 8) & 0xff, (h7 >>> 0) & 0xff\n        ];\n    }\n\n    function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {\n        // compress password if it's longer than hash block length\n        password = (password.length <= 64) ? password : SHA256(password);\n\n        const innerLen = 64 + salt.length + 4;\n        const inner = new Array(innerLen);\n        const outerKey = new Array(64);\n\n        let i;\n        let dk = [];\n\n        // inner = (password ^ ipad) || salt || counter\n        for (i = 0; i < 64; i++) { inner[i] = 0x36; }\n        for (i = 0; i < password.length; i++) { inner[i] ^= password[i]; }\n        for (i = 0; i < salt.length; i++) { inner[64 + i] = salt[i]; }\n        for (i = innerLen - 4; i < innerLen; i++) { inner[i] = 0; }\n\n        // outerKey = password ^ opad\n        for (i = 0; i < 64; i++) outerKey[i] = 0x5c;\n        for (i = 0; i < password.length; i++) outerKey[i] ^= password[i];\n\n        // increments counter inside inner\n        function incrementCounter() {\n            for (let i = innerLen - 1; i >= innerLen - 4; i--) {\n                inner[i]++;\n                if (inner[i] <= 0xff) return;\n                inner[i] = 0;\n            }\n        }\n\n        // output blocks = SHA256(outerKey || SHA256(inner)) ...\n        while (dkLen >= 32) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));\n            dkLen -= 32;\n        }\n        if (dkLen > 0) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));\n        }\n\n        return dk;\n    }\n\n    // The following is an adaptation of scryptsy\n    // See: https://www.npmjs.com/package/scryptsy\n    function blockmix_salsa8(BY, Yi, r, x, _X) {\n        let i;\n\n        arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);\n        for (i = 0; i < 2 * r; i++) {\n            blockxor(BY, i * 16, _X, 16);\n            salsa20_8(_X, x);\n            arraycopy(_X, 0, BY, Yi + (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2) * 16, BY, (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);\n        }\n    }\n\n    function R(a, b) {\n        return (a << b) | (a >>> (32 - b));\n    }\n\n    function salsa20_8(B, x) {\n        arraycopy(B, 0, x, 0, 16);\n\n        for (let i = 8; i > 0; i -= 2) {\n            x[ 4] ^= R(x[ 0] + x[12], 7);\n            x[ 8] ^= R(x[ 4] + x[ 0], 9);\n            x[12] ^= R(x[ 8] + x[ 4], 13);\n            x[ 0] ^= R(x[12] + x[ 8], 18);\n            x[ 9] ^= R(x[ 5] + x[ 1], 7);\n            x[13] ^= R(x[ 9] + x[ 5], 9);\n            x[ 1] ^= R(x[13] + x[ 9], 13);\n            x[ 5] ^= R(x[ 1] + x[13], 18);\n            x[14] ^= R(x[10] + x[ 6], 7);\n            x[ 2] ^= R(x[14] + x[10], 9);\n            x[ 6] ^= R(x[ 2] + x[14], 13);\n            x[10] ^= R(x[ 6] + x[ 2], 18);\n            x[ 3] ^= R(x[15] + x[11], 7);\n            x[ 7] ^= R(x[ 3] + x[15], 9);\n            x[11] ^= R(x[ 7] + x[ 3], 13);\n            x[15] ^= R(x[11] + x[ 7], 18);\n            x[ 1] ^= R(x[ 0] + x[ 3], 7);\n            x[ 2] ^= R(x[ 1] + x[ 0], 9);\n            x[ 3] ^= R(x[ 2] + x[ 1], 13);\n            x[ 0] ^= R(x[ 3] + x[ 2], 18);\n            x[ 6] ^= R(x[ 5] + x[ 4], 7);\n            x[ 7] ^= R(x[ 6] + x[ 5], 9);\n            x[ 4] ^= R(x[ 7] + x[ 6], 13);\n            x[ 5] ^= R(x[ 4] + x[ 7], 18);\n            x[11] ^= R(x[10] + x[ 9], 7);\n            x[ 8] ^= R(x[11] + x[10], 9);\n            x[ 9] ^= R(x[ 8] + x[11], 13);\n            x[10] ^= R(x[ 9] + x[ 8], 18);\n            x[12] ^= R(x[15] + x[14], 7);\n            x[13] ^= R(x[12] + x[15], 9);\n            x[14] ^= R(x[13] + x[12], 13);\n            x[15] ^= R(x[14] + x[13], 18);\n        }\n\n        for (let i = 0; i < 16; ++i) {\n            B[i] += x[i];\n        }\n    }\n\n    // naive approach... going back to loop unrolling may yield additional performance\n    function blockxor(S, Si, D, len) {\n        for (let i = 0; i < len; i++) {\n            D[i] ^= S[Si + i]\n        }\n    }\n\n    function arraycopy(src, srcPos, dest, destPos, length) {\n        while (length--) {\n            dest[destPos++] = src[srcPos++];\n        }\n    }\n\n    function checkBufferish(o) {\n        if (!o || typeof(o.length) !== 'number') { return false; }\n\n        for (let i = 0; i < o.length; i++) {\n            const v = o[i];\n            if (typeof(v) !== 'number' || v % 1 || v < 0 || v >= 256) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function ensureInteger(value, name) {\n        if (typeof(value) !== \"number\" || (value % 1)) { throw new Error('invalid ' + name); }\n        return value;\n    }\n\n    // N = Cpu cost, r = Memory cost, p = parallelization cost\n    // callback(error, progress, key)\n    function _scrypt(password, salt, N, r, p, dkLen, callback) {\n\n        N = ensureInteger(N, 'N');\n        r = ensureInteger(r, 'r');\n        p = ensureInteger(p, 'p');\n\n        dkLen = ensureInteger(dkLen, 'dkLen');\n\n        if (N === 0 || (N & (N - 1)) !== 0) { throw new Error('N must be power of 2'); }\n\n        if (N > MAX_VALUE / 128 / r) { throw new Error('N too large'); }\n        if (r > MAX_VALUE / 128 / p) { throw new Error('r too large'); }\n\n        if (!checkBufferish(password)) {\n            throw new Error('password must be an array or buffer');\n        }\n        password = Array.prototype.slice.call(password);\n\n        if (!checkBufferish(salt)) {\n            throw new Error('salt must be an array or buffer');\n        }\n        salt = Array.prototype.slice.call(salt);\n\n        let b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);\n        const B = new Uint32Array(p * 32 * r)\n        for (let i = 0; i < B.length; i++) {\n            const j = i * 4;\n            B[i] = ((b[j + 3] & 0xff) << 24) |\n                   ((b[j + 2] & 0xff) << 16) |\n                   ((b[j + 1] & 0xff) << 8) |\n                   ((b[j + 0] & 0xff) << 0);\n        }\n\n        const XY = new Uint32Array(64 * r);\n        const V = new Uint32Array(32 * r * N);\n\n        const Yi = 32 * r;\n\n        // scratch space\n        const x = new Uint32Array(16);       // salsa20_8\n        const _X = new Uint32Array(16);      // blockmix_salsa8\n\n        const totalOps = p * N * 2;\n        let currentOp = 0;\n        let lastPercent10 = null;\n\n        // Set this to true to abandon the scrypt on the next step\n        let stop = false;\n\n        // State information\n        let state = 0;\n        let i0 = 0, i1;\n        let Bi;\n\n        // How many blockmix_salsa8 can we do per step?\n        const limit = callback ? parseInt(1000 / r): 0xffffffff;\n\n        // Trick from scrypt-async; if there is a setImmediate shim in place, use it\n        const nextTick = (typeof(setImmediate) !== 'undefined') ? setImmediate : setTimeout;\n\n        // This is really all I changed; making scryptsy a state machine so we occasionally\n        // stop and give other evnts on the evnt loop a chance to run. ~RicMoo\n        const incrementalSMix = function() {\n            if (stop) {\n                return callback(new Error('cancelled'), currentOp / totalOps);\n            }\n\n            let steps;\n\n            switch (state) {\n                case 0:\n                    // for (var i = 0; i < p; i++)...\n                    Bi = i0 * 32 * r;\n\n                    arraycopy(B, Bi, XY, 0, Yi);                       // ROMix - 1\n\n                    state = 1;                                         // Move to ROMix 2\n                    i1 = 0;\n\n                    // Fall through\n\n                case 1:\n\n                    // Run up to 1000 steps of the first inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                  // ROMix - 2\n                        arraycopy(XY, 0, V, (i1 + i) * Yi, Yi)         // ROMix - 3\n                        blockmix_salsa8(XY, Yi, r, x, _X);             // ROMix - 4\n                    }\n\n                    // for (var i = 0; i < N; i++)\n                    i1 += steps;\n                    currentOp += steps;\n\n                    if (callback) {\n                        // Call the callback with the progress (optionally stopping us)\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    i1 = 0;                                          // Move to ROMix 6\n                    state = 2;\n\n                    // Fall through\n\n                case 2:\n\n                    // Run up to 1000 steps of the second inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                // ROMix - 6\n                        const offset = (2 * r - 1) * 16;             // ROMix - 7\n                        const j = XY[offset] & (N - 1);\n                        blockxor(V, j * Yi, XY, Yi);                 // ROMix - 8 (inner)\n                        blockmix_salsa8(XY, Yi, r, x, _X);           // ROMix - 9 (outer)\n                    }\n\n                    // for (var i = 0; i < N; i++)...\n                    i1 += steps;\n                    currentOp += steps;\n\n                    // Call the callback with the progress (optionally stopping us)\n                    if (callback) {\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    arraycopy(XY, 0, B, Bi, Yi);                     // ROMix - 10\n\n                    // for (var i = 0; i < p; i++)...\n                    i0++;\n                    if (i0 < p) {\n                        state = 0;\n                        break;\n                    }\n\n                    b = [];\n                    for (let i = 0; i < B.length; i++) {\n                        b.push((B[i] >>  0) & 0xff);\n                        b.push((B[i] >>  8) & 0xff);\n                        b.push((B[i] >> 16) & 0xff);\n                        b.push((B[i] >> 24) & 0xff);\n                    }\n\n                    const derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen);\n\n                    // Send the result to the callback\n                    if (callback) { callback(null, 1.0, derivedKey); }\n\n                    // Done; don't break (which would reschedule)\n                    return derivedKey;\n            }\n\n            // Schedule the next steps\n            if (callback) { nextTick(incrementalSMix); }\n        }\n\n        // Run the smix state machine until completion\n        if (!callback) {\n            while (true) {\n                const derivedKey = incrementalSMix();\n                if (derivedKey != undefined) { return derivedKey; }\n            }\n        }\n\n        // Bootstrap the async incremental smix\n        incrementalSMix();\n    }\n\n    const lib = {\n        scrypt: function(password, salt, N, r, p, dkLen, progressCallback) {\n            return new Promise(function(resolve, reject) {\n                let lastProgress = 0;\n                if (progressCallback) { progressCallback(0); }\n                _scrypt(password, salt, N, r, p, dkLen, function(error, progress, key) {\n                    if (error) {\n                        reject(error);\n                    } else if (key) {\n                        if (progressCallback && lastProgress !== 1) {\n                            progressCallback(1);\n                        }\n                        resolve(new Uint8Array(key));\n                    } else if (progressCallback && progress !== lastProgress) {\n                        lastProgress = progress;\n                        return progressCallback(progress);\n                    }\n                });\n            });\n        },\n        syncScrypt: function(password, salt, N, r, p, dkLen) {\n            return new Uint8Array(_scrypt(password, salt, N, r, p, dkLen));\n        }\n    };\n\n    // node.js\n    if (typeof(exports) !== 'undefined') {\n       module.exports = lib;\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(lib);\n\n    // Web Browsers\n    } else if (root) {\n\n        // If there was an existing library \"scrypt\", make sure it is still available\n        if (root.scrypt) {\n            root._scrypt = root.scrypt;\n        }\n\n        root.scrypt = lib;\n    }\n\n})(this);\n","\"use strict\";\n\nimport aes from \"aes-js\";\nimport scrypt from \"scrypt-js\";\n\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, Bytes, BytesLike, concat, hexlify } from \"@ethersproject/bytes\";\nimport { defaultPath, entropyToMnemonic, HDNode, Mnemonic, mnemonicToEntropy } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 as _pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { Description } from \"@ethersproject/properties\";\nimport { computeAddress } from \"@ethersproject/transactions\";\n\nimport { getPassword, looseArrayify, searchPath, uuidV4, zpad } from \"./utils\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Exported Types\n\nfunction hasMnemonic(value: any): value is { mnemonic: Mnemonic } {\n    return (value != null && value.mnemonic && value.mnemonic.phrase);\n}\n\nexport interface _KeystoreAccount {\n    address: string;\n    privateKey: string;\n    mnemonic?: Mnemonic;\n\n    _isKeystoreAccount: boolean;\n}\n\nexport class KeystoreAccount extends Description<_KeystoreAccount> implements ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n    readonly mnemonic?: Mnemonic;\n\n    readonly _isKeystoreAccount: boolean;\n\n    isKeystoreAccount(value: any): value is KeystoreAccount {\n        return !!(value && value._isKeystoreAccount);\n    }\n}\n\nexport type ProgressCallback = (percent: number) => void;\n\nexport type EncryptOptions = {\n   iv?: BytesLike;\n   entropy?: BytesLike;\n   client?: string;\n   salt?: BytesLike;\n   uuid?: string;\n   scrypt?: {\n       N?: number;\n       r?: number;\n       p?: number;\n   }\n}\n\nfunction _decrypt(data: any, key: Uint8Array, ciphertext: Uint8Array): Uint8Array {\n    const cipher = searchPath(data, \"crypto/cipher\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = looseArrayify(searchPath(data, \"crypto/cipherparams/iv\"))\n        const counter = new aes.Counter(iv);\n\n        const aesCtr = new aes.ModeOfOperation.ctr(key, counter);\n\n        return arrayify(aesCtr.decrypt(ciphertext));\n    }\n\n    return null;\n}\n\nfunction _getAccount(data: any, key: Uint8Array): KeystoreAccount {\n    const ciphertext = looseArrayify(searchPath(data, \"crypto/ciphertext\"));\n\n    const computedMAC = hexlify(keccak256(concat([ key.slice(16, 32), ciphertext ]))).substring(2);\n    if (computedMAC !== searchPath(data, \"crypto/mac\").toLowerCase()) {\n        throw new Error(\"invalid password\");\n    }\n\n    const privateKey = _decrypt(data, key.slice(0, 16), ciphertext);\n\n    if (!privateKey) {\n        logger.throwError(\"unsupported cipher\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"decrypt\"\n        });\n    }\n\n    const mnemonicKey = key.slice(32, 64);\n\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (check.substring(0, 2) !== \"0x\") { check = \"0x\" + check; }\n\n        if (getAddress(check) !== address) {\n            throw new Error(\"address mismatch\");\n        }\n    }\n\n    const account: _KeystoreAccount = {\n        _isKeystoreAccount: true,\n        address: address,\n        privateKey: hexlify(privateKey)\n    };\n\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    if (searchPath(data, \"x-ethers/version\") === \"0.1\") {\n        const mnemonicCiphertext = looseArrayify(searchPath(data, \"x-ethers/mnemonicCiphertext\"));\n        const mnemonicIv = looseArrayify(searchPath(data, \"x-ethers/mnemonicCounter\"));\n\n        const mnemonicCounter = new aes.Counter(mnemonicIv);\n        const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n\n        const path = searchPath(data, \"x-ethers/path\") || defaultPath;\n        const locale = searchPath(data, \"x-ethers/locale\") || \"en\";\n\n        const entropy = arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));\n\n        try {\n            const mnemonic = entropyToMnemonic(entropy, locale);\n            const node = HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);\n\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n\n            account.mnemonic = node.mnemonic;\n\n        } catch (error) {\n            // If we don't have the locale wordlist installed to\n            // read this mnemonic, just bail and don't set the\n            // mnemonic\n            if (error.code !== Logger.errors.INVALID_ARGUMENT || error.argument !== \"wordlist\") {\n                throw error;\n            }\n        }\n    }\n\n    return new KeystoreAccount(account);\n}\n\ntype ScryptFunc<T> = (pw: Uint8Array, salt: Uint8Array, n: number, r: number, p: number, dkLen: number, callback?: ProgressCallback) => T;\ntype Pbkdf2Func<T> = (pw: Uint8Array, salt: Uint8Array, c: number, dkLen: number, prfFunc: string) => T;\n\nfunction pbkdf2Sync(passwordBytes: Uint8Array, salt: Uint8Array, count: number, dkLen: number, prfFunc: string): Uint8Array {\n    return arrayify(_pbkdf2(passwordBytes, salt, count, dkLen, prfFunc));\n}\n\nfunction pbkdf2(passwordBytes: Uint8Array, salt: Uint8Array, count: number, dkLen: number, prfFunc: string): Promise<Uint8Array> {\n    return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));\n}\n\nfunction _computeKdfKey<T>(data: any, password: Bytes | string, pbkdf2Func: Pbkdf2Func<T>, scryptFunc: ScryptFunc<T>, progressCallback?: ProgressCallback): T {\n    const passwordBytes = getPassword(password);\n\n    const kdf = searchPath(data, \"crypto/kdf\");\n\n    if (kdf && typeof(kdf) === \"string\") {\n        const throwError = function(name: string, value: any): never {\n            return logger.throwArgumentError(\"invalid key-derivation function parameters\", name, value);\n        }\n\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            const N = parseInt(searchPath(data, \"crypto/kdfparams/n\"));\n            const r = parseInt(searchPath(data, \"crypto/kdfparams/r\"));\n            const p = parseInt(searchPath(data, \"crypto/kdfparams/p\"));\n\n            // Check for all required parameters\n            if (!N || !r || !p) { throwError(\"kdf\", kdf); }\n\n            // Make sure N is a power of 2\n            if ((N & (N - 1)) !== 0) { throwError(\"N\", N); }\n\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) { throwError(\"dklen\", dkLen); }\n\n            return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);\n\n        } else if (kdf.toLowerCase() === \"pbkdf2\") {\n\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n\n            let prfFunc: string = null;\n            const prf = searchPath(data, \"crypto/kdfparams/prf\");\n            if (prf === \"hmac-sha256\") {\n                prfFunc = \"sha256\";\n            } else if (prf === \"hmac-sha512\") {\n                prfFunc = \"sha512\";\n            } else {\n                throwError(\"prf\", prf);\n            }\n\n            const count = parseInt(searchPath(data, \"crypto/kdfparams/c\"));\n\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) { throwError(\"dklen\", dkLen); }\n\n            return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);\n        }\n    }\n\n    return logger.throwArgumentError(\"unsupported key-derivation function\", \"kdf\", kdf);\n}\n\n\nexport function decryptSync(json: string, password: Bytes | string): KeystoreAccount {\n    const data = JSON.parse(json);\n\n    const key = _computeKdfKey(data, password, pbkdf2Sync, scrypt.syncScrypt);\n    return _getAccount(data, key);\n}\n\nexport async function decrypt(json: string, password: Bytes | string, progressCallback?: ProgressCallback): Promise<KeystoreAccount> {\n    const data = JSON.parse(json);\n\n    const key = await _computeKdfKey(data, password, pbkdf2, scrypt.scrypt, progressCallback);\n    return _getAccount(data, key);\n}\n\n\nexport function encrypt(account: ExternallyOwnedAccount, password: Bytes | string, options?: EncryptOptions, progressCallback?: ProgressCallback): Promise<string> {\n\n    try {\n        // Check the address matches the private key\n        if (getAddress(account.address) !== computeAddress(account.privateKey)) {\n            throw new Error(\"address/privateKey mismatch\");\n        }\n\n        // Check the mnemonic (if any) matches the private key\n        if (hasMnemonic(account)) {\n            const mnemonic = account.mnemonic;\n            const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);\n\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n        }\n\n    } catch (e) {\n        return Promise.reject(e);\n    }\n\n    // The options are optional, so adjust the call as needed\n    if (typeof(options) === \"function\" && !progressCallback) {\n        progressCallback = options;\n        options = {};\n    }\n    if (!options) { options = {}; }\n\n    const privateKey: Uint8Array = arrayify(account.privateKey);\n    const passwordBytes = getPassword(password);\n\n    let entropy: Uint8Array = null\n    let path: string = null;\n    let locale: string = null;\n    if (hasMnemonic(account)) {\n        const srcMnemonic = account.mnemonic;\n        entropy = arrayify(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || \"en\"));\n        path = srcMnemonic.path || defaultPath;\n        locale = srcMnemonic.locale || \"en\";\n    }\n\n    let client = options.client;\n    if (!client) { client = \"ethers.js\"; }\n\n    // Check/generate the salt\n    let salt: Uint8Array = null;\n    if (options.salt) {\n        salt = arrayify(options.salt);\n    } else {\n        salt = randomBytes(32);;\n    }\n\n    // Override initialization vector\n    let iv: Uint8Array = null;\n    if (options.iv) {\n        iv = arrayify(options.iv);\n        if (iv.length !== 16) { throw new Error(\"invalid iv\"); }\n    } else {\n       iv = randomBytes(16);\n    }\n\n    // Override the uuid\n    let uuidRandom: Uint8Array = null;\n    if (options.uuid) {\n        uuidRandom = arrayify(options.uuid);\n        if (uuidRandom.length !== 16) { throw new Error(\"invalid uuid\"); }\n    } else {\n        uuidRandom = randomBytes(16);\n    }\n\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) { N = options.scrypt.N; }\n        if (options.scrypt.r) { r = options.scrypt.r; }\n        if (options.scrypt.p) { p = options.scrypt.p; }\n    }\n\n    // We take 64 bytes:\n    //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    return scrypt.scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then((key) => {\n        key = arrayify(key);\n\n        // This will be used to encrypt the wallet (as per Web3 secret storage)\n        const derivedKey = key.slice(0, 16);\n        const macPrefix = key.slice(16, 32);\n\n        // This will be used to encrypt the mnemonic phrase (if any)\n        const mnemonicKey = key.slice(32, 64);\n\n        // Encrypt the private key\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(derivedKey, counter);\n        const ciphertext = arrayify(aesCtr.encrypt(privateKey));\n\n        // Compute the message authentication code, used to check the password\n        const mac = keccak256(concat([macPrefix, ciphertext]))\n\n        // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n        const data: { [key: string]: any } = {\n            address: account.address.substring(2).toLowerCase(),\n            id: uuidV4(uuidRandom),\n            version: 3,\n            Crypto: {\n                cipher: \"aes-128-ctr\",\n                cipherparams: {\n                    iv: hexlify(iv).substring(2),\n                },\n                ciphertext: hexlify(ciphertext).substring(2),\n                kdf: \"scrypt\",\n                kdfparams: {\n                    salt: hexlify(salt).substring(2),\n                    n: N,\n                    dklen: 32,\n                    p: p,\n                    r: r\n                },\n                mac: mac.substring(2)\n            }\n        };\n\n        // If we have a mnemonic, encrypt it into the JSON wallet\n        if (entropy) {\n            const mnemonicIv = randomBytes(16);\n            const mnemonicCounter = new aes.Counter(mnemonicIv);\n            const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n            const mnemonicCiphertext = arrayify(mnemonicAesCtr.encrypt(entropy));\n            const now = new Date();\n            const timestamp = (now.getUTCFullYear() + \"-\" +\n                               zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n                               zpad(now.getUTCDate(), 2) + \"T\" +\n                               zpad(now.getUTCHours(), 2) + \"-\" +\n                               zpad(now.getUTCMinutes(), 2) + \"-\" +\n                               zpad(now.getUTCSeconds(), 2) + \".0Z\"\n                              );\n            data[\"x-ethers\"] = {\n                client: client,\n                gethFilename: (\"UTC--\" + timestamp + \"--\" + data.address),\n                mnemonicCounter: hexlify(mnemonicIv).substring(2),\n                mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n                path: path,\n                locale: locale,\n                version: \"0.1\"\n            };\n        }\n\n        return JSON.stringify(data);\n    });\n}\n","\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function decode(textData: string): Uint8Array {\n    textData = atob(textData);\n    const data = [];\n    for (let i = 0; i < textData.length; i++) {\n        data.push(textData.charCodeAt(i));\n    }\n    return arrayify(data);\n}\n\nexport function encode(data: BytesLike): string {\n    data = arrayify(data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n\n\n","\"use strict\";\n\nimport { arrayify } from \"@ethersproject/bytes\";\n\nimport type { GetUrlResponse, Options } from \"./types\";\n\nexport { GetUrlResponse, Options };\n\nexport async function getUrl(href: string, options?: Options): Promise<GetUrlResponse> {\n    if (options == null) { options = { }; }\n\n    const request: RequestInit = {\n        method: (options.method || \"GET\"),\n        headers: (options.headers || { }),\n        body: (options.body || undefined),\n    };\n\n    if (options.skipFetchSetup !== true) {\n        request.mode = <RequestMode>\"cors\";              // no-cors, cors, *same-origin\n        request.cache = <RequestCache>\"no-cache\";        // *default, no-cache, reload, force-cache, only-if-cached\n        request.credentials = <RequestCredentials>\"same-origin\";  // include, *same-origin, omit\n        request.redirect = <RequestRedirect>\"follow\";    // manual, *follow, error\n        request.referrer = \"client\";                     // no-referrer, *client\n    };\n\n    const response = await fetch(href, request);\n    const body = await response.arrayBuffer();\n\n    const headers: { [ name: string ]: string } = { };\n    if (response.headers.forEach) {\n        response.headers.forEach((value, key) => {\n            headers[key.toLowerCase()] = value;\n        });\n    } else {\n        (<() => Array<string>>((<any>(response.headers)).keys))().forEach((key) => {\n            headers[key.toLowerCase()] = response.headers.get(key);\n        });\n    }\n\n    return {\n        headers: headers,\n        statusCode: response.status,\n        statusMessage: response.statusText,\n        body: arrayify(new Uint8Array(body)),\n    }\n}\n","'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') throw new Error(chk)\n\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction __decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) return str + ' too short'\n  if (str.length > LIMIT) return 'Exceeds length limit'\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) return 'No separator character for ' + str\n  if (split === 0) return 'Missing prefix for ' + str\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) return 'Data too short'\n\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') return chk\n\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) return 'Unknown character ' + c\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str\n  return { prefix: prefix, words: words }\n}\n\nfunction decodeUnsafe () {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n}\n\nfunction decode (str) {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n\n  throw new Error(res)\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding'\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\n  }\n\n  return result\n}\n\nfunction toWordsUnsafe (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n}\n\nfunction toWords (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nfunction fromWordsUnsafe (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n}\n\nfunction fromWords (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nmodule.exports = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode,\n  encode: encode,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n}\n","\"use strict\";\n\nimport { Block, TransactionReceipt, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexDataLength, hexDataSlice, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { AccessList, accessListify, parse as parseTransaction } from \"@ethersproject/transactions\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport type FormatFunc = (value: any) => any;\n\nexport type FormatFuncs = { [ key: string ]: FormatFunc };\n\nexport type Formats = {\n    transaction: FormatFuncs,\n    transactionRequest: FormatFuncs,\n    receipt: FormatFuncs,\n    receiptLog: FormatFuncs,\n    block: FormatFuncs,\n    blockWithTransactions: FormatFuncs,\n    filter: FormatFuncs,\n    filterLog: FormatFuncs,\n};\n\nexport class Formatter {\n    readonly formats: Formats;\n\n    constructor() {\n        logger.checkNew(new.target, Formatter);\n        this.formats = this.getDefaultFormats();\n    }\n\n    getDefaultFormats(): Formats {\n        const formats: Formats = <Formats>({ });\n\n        const address = this.address.bind(this);\n        const bigNumber = this.bigNumber.bind(this);\n        const blockTag = this.blockTag.bind(this);\n        const data = this.data.bind(this);\n        const hash = this.hash.bind(this);\n        const hex = this.hex.bind(this);\n        const number = this.number.bind(this);\n        const type = this.type.bind(this);\n\n        const strictData = (v: any) => { return this.data(v, true); };\n\n        formats.transaction = {\n            hash: hash,\n\n            type: type,\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n\n            blockHash: Formatter.allowNull(hash, null),\n            blockNumber: Formatter.allowNull(number, null),\n            transactionIndex: Formatter.allowNull(number, null),\n\n            confirmations: Formatter.allowNull(number, null),\n\n            from: address,\n\n            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n            // must be set\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n\n            gasLimit: bigNumber,\n            to: Formatter.allowNull(address, null),\n            value: bigNumber,\n            nonce: number,\n            data: data,\n\n            r: Formatter.allowNull(this.uint256),\n            s: Formatter.allowNull(this.uint256),\n            v: Formatter.allowNull(number),\n\n            creates: Formatter.allowNull(address, null),\n\n            raw: Formatter.allowNull(data),\n        };\n\n        formats.transactionRequest = {\n            from: Formatter.allowNull(address),\n            nonce: Formatter.allowNull(number),\n            gasLimit: Formatter.allowNull(bigNumber),\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            to: Formatter.allowNull(address),\n            value: Formatter.allowNull(bigNumber),\n            data: Formatter.allowNull(strictData),\n            type: Formatter.allowNull(number),\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n        };\n\n        formats.receiptLog = {\n            transactionIndex: number,\n            blockNumber: number,\n            transactionHash: hash,\n            address: address,\n            topics: Formatter.arrayOf(hash),\n            data: data,\n            logIndex: number,\n            blockHash: hash,\n        };\n\n        formats.receipt = {\n            to: Formatter.allowNull(this.address, null),\n            from: Formatter.allowNull(this.address, null),\n            contractAddress: Formatter.allowNull(address, null),\n            transactionIndex: number,\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n            root: Formatter.allowNull(hex),\n            gasUsed: bigNumber,\n            logsBloom: Formatter.allowNull(data),// @TODO: should this be data?\n            blockHash: hash,\n            transactionHash: hash,\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n            blockNumber: number,\n            confirmations: Formatter.allowNull(number, null),\n            cumulativeGasUsed: bigNumber,\n            effectiveGasPrice: Formatter.allowNull(bigNumber),\n            status: Formatter.allowNull(number),\n            type: type\n        };\n\n        formats.block = {\n            hash: hash,\n            parentHash: hash,\n            number: number,\n\n            timestamp: number,\n            nonce: Formatter.allowNull(hex),\n            difficulty: this.difficulty.bind(this),\n\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n\n            miner: address,\n            extraData: data,\n\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n\n            baseFeePerGas: Formatter.allowNull(bigNumber)\n        };\n\n        formats.blockWithTransactions = shallowCopy(formats.block);\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n\n        formats.filter = {\n            fromBlock: Formatter.allowNull(blockTag, undefined),\n            toBlock: Formatter.allowNull(blockTag, undefined),\n            blockHash: Formatter.allowNull(hash, undefined),\n            address: Formatter.allowNull(address, undefined),\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\n        };\n\n        formats.filterLog = {\n            blockNumber: Formatter.allowNull(number),\n            blockHash: Formatter.allowNull(hash),\n            transactionIndex: number,\n\n            removed: Formatter.allowNull(this.boolean.bind(this)),\n\n            address: address,\n            data: Formatter.allowFalsish(data, \"0x\"),\n\n            topics: Formatter.arrayOf(hash),\n\n            transactionHash: hash,\n            logIndex: number,\n        };\n\n        return formats;\n    }\n\n    accessList(accessList: Array<any>): AccessList {\n        return accessListify(accessList || []);\n    }\n\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n    // Strict! Used on input.\n    number(number: any): number {\n        if (number === \"0x\") { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    type(number: any): number {\n        if (number === \"0x\" || number == null) { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    // Strict! Used on input.\n    bigNumber(value: any): BigNumber {\n        return BigNumber.from(value);\n    }\n\n    // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n    boolean(value: any): boolean {\n        if (typeof(value) === \"boolean\") { return value; }\n        if (typeof(value) === \"string\") {\n            value = value.toLowerCase();\n            if (value === \"true\") { return true; }\n            if (value === \"false\") { return false; }\n        }\n        throw new Error(\"invalid boolean - \" + value);\n    }\n\n    hex(value: any, strict?: boolean): string {\n        if (typeof(value) === \"string\") {\n            if (!strict && value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n            if (isHexString(value)) {\n               return value.toLowerCase();\n            }\n        }\n        return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n    }\n\n    data(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if ((result.length % 2) !== 0) {\n            throw new Error(\"invalid data; odd-length - \" + value);\n        }\n        return result;\n    }\n\n    // Requires an address\n    // Strict! Used on input.\n    address(value: any): string {\n        return getAddress(value);\n    }\n\n    callAddress(value: any): string {\n        if (!isHexString(value, 32)) { return null; }\n        const address = getAddress(hexDataSlice(value, 12));\n        return (address === AddressZero) ? null: address;\n    }\n\n    contractAddress(value: any): string {\n        return getContractAddress(value);\n    }\n\n    // Strict! Used on input.\n    blockTag(blockTag: any): string {\n        if (blockTag == null) { return \"latest\"; }\n\n        if (blockTag === \"earliest\") { return \"0x0\"; }\n\n        if (blockTag === \"latest\" || blockTag === \"pending\") {\n            return blockTag;\n        }\n\n        if (typeof(blockTag) === \"number\" || isHexString(blockTag)) {\n            return hexValue(<number | string>blockTag);\n        }\n\n        throw new Error(\"invalid blockTag\");\n    }\n\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n    hash(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if (hexDataLength(result) !== 32) {\n            return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n        }\n        return result;\n    }\n\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n    difficulty(value: any): number {\n        if (value == null) { return null; }\n\n        const v = BigNumber.from(value);\n\n        try {\n            return v.toNumber();\n        } catch (error) { }\n\n       return null;\n    }\n\n    uint256(value: any): string {\n        if (!isHexString(value)) {\n            throw new Error(\"invalid uint256\");\n        }\n        return hexZeroPad(value, 32);\n    }\n\n    _block(value: any, format: any): Block {\n        if (value.author != null && value.miner == null) {\n            value.miner = value.author;\n        }\n        // The difficulty may need to come from _difficulty in recursed blocks\n        const difficulty = (value._difficulty != null) ? value._difficulty: value.difficulty;\n        const result = Formatter.check(format, value);\n        result._difficulty = ((difficulty == null) ? null: BigNumber.from(difficulty));\n        return result;\n    }\n\n    block(value: any): Block {\n        return this._block(value, this.formats.block);\n    }\n\n    blockWithTransactions(value: any): Block {\n        return this._block(value, this.formats.blockWithTransactions);\n    }\n\n    // Strict! Used on input.\n    transactionRequest(value: any): any {\n        return Formatter.check(this.formats.transactionRequest, value);\n    }\n\n    transactionResponse(transaction: any): TransactionResponse {\n\n        // Rename gas to gasLimit\n        if (transaction.gas != null && transaction.gasLimit == null) {\n            transaction.gasLimit = transaction.gas;\n        }\n\n        // Some clients (TestRPC) do strange things like return 0x0 for the\n        // 0 address; correct this to be a real address\n        if (transaction.to && BigNumber.from(transaction.to).isZero()) {\n            transaction.to = \"0x0000000000000000000000000000000000000000\";\n        }\n\n        // Rename input to data\n        if (transaction.input != null && transaction.data == null) {\n            transaction.data = transaction.input;\n        }\n\n        // If to and creates are empty, populate the creates from the transaction\n        if (transaction.to == null && transaction.creates == null) {\n            transaction.creates = this.contractAddress(transaction);\n        }\n\n        if ((transaction.type === 1 || transaction.type === 2)&& transaction.accessList == null) {\n            transaction.accessList = [ ];\n        }\n\n        const result: TransactionResponse = Formatter.check(this.formats.transaction, transaction);\n\n        if (transaction.chainId != null) {\n            let chainId = transaction.chainId;\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            result.chainId = chainId;\n\n        } else {\n            let chainId = transaction.networkId;\n\n            // geth-etc returns chainId\n            if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n            }\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            if (typeof(chainId) !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) { chainId = 0; }\n                chainId = parseInt(chainId);\n            }\n\n            if (typeof(chainId) !== \"number\") { chainId = 0; }\n\n            result.chainId = chainId;\n        }\n\n        // 0x0000... should actually be null\n        if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n            result.blockHash = null;\n        }\n\n        return result;\n    }\n\n    transaction(value: any): any {\n        return parseTransaction(value);\n    }\n\n    receiptLog(value: any): any {\n        return Formatter.check(this.formats.receiptLog, value);\n    }\n\n    receipt(value: any): TransactionReceipt {\n        const result: TransactionReceipt = Formatter.check(this.formats.receipt, value);\n\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (result.root != null) {\n            if (result.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                const value = BigNumber.from(result.root).toNumber();\n                if (value === 0 || value === 1) {\n                    // Make sure if both are specified, they match\n                    if (result.status != null && (result.status !== value)) {\n                        logger.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                    }\n                    result.status = value;\n                    delete result.root;\n                } else {\n                    logger.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n            } else if (result.root.length !== 66) {\n                // Must be a valid bytes32\n                logger.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n            }\n        }\n\n        if (result.status != null) {\n            result.byzantium = true;\n        }\n\n        return result;\n    }\n\n    topics(value: any): any {\n        if (Array.isArray(value)) {\n            return value.map((v) => this.topics(v));\n\n        } else if (value != null) {\n            return this.hash(value, true);\n        }\n\n        return null;\n    }\n\n    filter(value: any): any {\n        return Formatter.check(this.formats.filter, value);\n    }\n\n    filterLog(value: any): any {\n        return Formatter.check(this.formats.filterLog, value);\n    }\n\n    static check(format: { [ name: string ]: FormatFunc }, object: any): any {\n        const result: any = {};\n        for (const key in format) {\n            try {\n                const value = format[key](object[key]);\n                if (value !== undefined) { result[key] = value; }\n            } catch (error) {\n                error.checkKey = key;\n                error.checkValue = object[key];\n                throw error;\n            }\n        }\n        return result;\n    }\n\n    // if value is null-ish, nullValue is returned\n    static allowNull(format: FormatFunc, nullValue?: any): FormatFunc {\n        return (function(value: any) {\n            if (value == null) { return nullValue; }\n            return format(value);\n        });\n    }\n\n    // If value is false-ish, replaceValue is returned\n    static allowFalsish(format: FormatFunc, replaceValue: any): FormatFunc {\n        return (function(value: any) {\n            if (!value) { return replaceValue; }\n            return format(value);\n        });\n    }\n\n    // Requires an Array satisfying check\n    static arrayOf(format: FormatFunc): FormatFunc {\n        return (function(array: any): Array<any> {\n            if (!Array.isArray(array)) { throw new Error(\"not an array\"); }\n\n            const result: any = [];\n\n            array.forEach(function(value) {\n                result.push(format(value));\n            });\n\n            return result;\n        });\n    }\n}\n\nexport interface CommunityResourcable {\n    isCommunityResource(): boolean;\n}\n\nexport function isCommunityResourcable(value: any): value is CommunityResourcable {\n    return (value && typeof(value.isCommunityResource) === \"function\");\n}\n\nexport function isCommunityResource(value: any): boolean {\n    return (isCommunityResourcable(value) && value.isCommunityResource());\n}\n\n// Show the throttle message only once\nlet throttleMessage = false;\nexport function showThrottleMessage() {\n    if (throttleMessage) { return; }\n    throttleMessage = true;\n\n    console.log(\"========= NOTICE =========\")\n    console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n    console.log(\"==========================\");\n}\n\n","\"use strict\";\n\nimport {\n    Block, BlockTag, BlockWithTransactions, EventType, Filter, FilterByBlockHash, ForkEvent,\n    Listener, Log, Provider, TransactionReceipt, TransactionRequest, TransactionResponse\n} from \"@ethersproject/abstract-provider\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexConcat, hexDataLength, hexDataSlice, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { namehash } from \"@ethersproject/hash\";\nimport { getNetwork, Network, Networkish } from \"@ethersproject/networks\";\nimport { Deferrable, defineReadOnly, getStatic, resolveProperties } from \"@ethersproject/properties\";\nimport { Transaction } from \"@ethersproject/transactions\";\nimport { sha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\n\nimport bech32 from \"bech32\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Formatter } from \"./formatter\";\n\n//////////////////////////////\n// Event Serializeing\n\nfunction checkTopic(topic: string): string {\n     if (topic == null) { return \"null\"; }\n     if (hexDataLength(topic) !== 32) {\n         logger.throwArgumentError(\"invalid topic\", \"topic\", topic);\n     }\n     return topic.toLowerCase();\n}\n\nfunction serializeTopics(topics: Array<string | Array<string>>): string {\n    // Remove trailing null AND-topics; they are redundant\n    topics = topics.slice();\n    while (topics.length > 0 && topics[topics.length - 1] == null) { topics.pop(); }\n\n    return topics.map((topic) => {\n        if (Array.isArray(topic)) {\n\n            // Only track unique OR-topics\n            const unique: { [ topic: string ]: boolean } = { }\n            topic.forEach((topic) => {\n                unique[checkTopic(topic)] = true;\n            });\n\n            // The order of OR-topics does not matter\n            const sorted = Object.keys(unique);\n            sorted.sort();\n\n            return sorted.join(\"|\");\n\n        } else {\n            return checkTopic(topic);\n        }\n    }).join(\"&\");\n}\n\nfunction deserializeTopics(data: string): Array<string | Array<string>> {\n    if (data === \"\") { return [ ]; }\n\n    return data.split(/&/g).map((topic) => {\n        if (topic === \"\") { return [ ]; }\n\n        const comps = topic.split(\"|\").map((topic) => {\n            return ((topic === \"null\") ? null: topic);\n        });\n\n        return ((comps.length === 1) ? comps[0]: comps);\n    });\n}\n\nfunction getEventTag(eventName: EventType): string {\n    if (typeof(eventName) === \"string\") {\n        eventName = eventName.toLowerCase();\n\n        if (hexDataLength(eventName) === 32) {\n            return \"tx:\" + eventName;\n        }\n\n        if (eventName.indexOf(\":\") === -1) {\n            return eventName;\n        }\n\n    } else if (Array.isArray(eventName)) {\n        return \"filter:*:\" + serializeTopics(eventName);\n\n    } else if (ForkEvent.isForkEvent(eventName)) {\n        logger.warn(\"not implemented\");\n        throw new Error(\"not implemented\");\n\n    } else if (eventName && typeof(eventName) === \"object\") {\n        return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n    }\n\n    throw new Error(\"invalid event - \" + eventName);\n}\n\n//////////////////////////////\n// Helper Object\n\nfunction getTime() {\n    return (new Date()).getTime();\n}\n\nfunction stall(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\n//////////////////////////////\n// Provider Object\n\n\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\n\nconst PollableEvents = [ \"block\", \"network\", \"pending\", \"poll\" ];\n\nexport class Event {\n    readonly listener: Listener;\n    readonly once: boolean;\n    readonly tag: string;\n\n    constructor(tag: string, listener: Listener, once: boolean) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"listener\", listener);\n        defineReadOnly(this, \"once\", once);\n    }\n\n    get event(): EventType {\n        switch (this.type) {\n            case \"tx\":\n               return this.hash;\n            case \"filter\":\n               return this.filter;\n        }\n        return this.tag;\n    }\n\n    get type(): string {\n        return this.tag.split(\":\")[0]\n    }\n\n    get hash(): string {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"tx\") { return null; }\n        return comps[1];\n    }\n\n    get filter(): Filter {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"filter\") { return null; }\n        const address = comps[1];\n\n        const topics = deserializeTopics(comps[2]);\n        const filter: Filter = { };\n\n        if (topics.length > 0) { filter.topics = topics; }\n        if (address && address !== \"*\") { filter.address = address; }\n\n        return filter;\n    }\n\n    pollable(): boolean {\n        return (this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0);\n    }\n}\n\nexport interface EnsResolver {\n\n    // Name this Resolver is associated with\n    readonly name: string;\n\n    // The address of the resolver\n    readonly address: string;\n\n    // Multichain address resolution (also normal address resolution)\n    // See: https://eips.ethereum.org/EIPS/eip-2304\n    getAddress(coinType?: 60): Promise<null | string>\n\n    // Contenthash field\n    // See: https://eips.ethereum.org/EIPS/eip-1577\n    getContentHash(): Promise<null | string>;\n\n    // Storage of text records\n    // See: https://eips.ethereum.org/EIPS/eip-634\n    getText(key: string): Promise<null | string>;\n};\n\nexport interface EnsProvider {\n    resolveName(name: string): Promise<null | string>;\n    lookupAddress(address: string): Promise<null | string>;\n    getResolver(name: string): Promise<null | EnsResolver>;\n}\n\ntype CoinInfo = {\n    symbol: string,\n    ilk?: string,     // General family\n    prefix?: string,  // Bech32 prefix\n    p2pkh?: number,   // Pay-to-Public-Key-Hash Version\n    p2sh?: number,    // Pay-to-Script-Hash Version\n};\n\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\nconst coinInfos: { [ coinType: string ]: CoinInfo } = {\n    \"0\":   { symbol: \"btc\",  p2pkh: 0x00, p2sh: 0x05, prefix: \"bc\" },\n    \"2\":   { symbol: \"ltc\",  p2pkh: 0x30, p2sh: 0x32, prefix: \"ltc\" },\n    \"3\":   { symbol: \"doge\", p2pkh: 0x1e, p2sh: 0x16 },\n    \"60\":  { symbol: \"eth\",  ilk: \"eth\" },\n    \"61\":  { symbol: \"etc\",  ilk: \"eth\" },\n    \"700\": { symbol: \"xdai\", ilk: \"eth\" },\n};\n\nfunction bytes32ify(value: number): string {\n    return hexZeroPad(BigNumber.from(value).toHexString(), 32);\n}\n\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\nfunction base58Encode(data: Uint8Array): string {\n    return Base58.encode(concat([ data, hexDataSlice(sha256(sha256(data)), 0, 4) ]));\n}\n\nexport interface Avatar {\n    url: string;\n    linkage: Array<{ type: string, content: string }>;\n}\n\nconst matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\n\nfunction _parseString(result: string): null | string {\n    try {\n        return toUtf8String(_parseBytes(result));\n    } catch(error) { }\n    return null;\n}\n\nfunction _parseBytes(result: string): null | string {\n    if (result === \"0x\") { return null; }\n\n    const offset = BigNumber.from(hexDataSlice(result, 0, 32)).toNumber();\n    const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();\n    return hexDataSlice(result, offset + 32, offset + 32 + length);\n}\n\n\nexport class Resolver implements EnsResolver {\n    readonly provider: BaseProvider;\n\n    readonly name: string;\n    readonly address: string;\n\n    readonly _resolvedAddress: null | string;\n\n    // The resolvedAddress is only for creating a ReverseLookup resolver\n    constructor(provider: BaseProvider, address: string, name: string, resolvedAddress?: string) {\n        defineReadOnly(this, \"provider\", provider);\n        defineReadOnly(this, \"name\", name);\n        defineReadOnly(this, \"address\", provider.formatter.address(address));\n        defineReadOnly(this, \"_resolvedAddress\", resolvedAddress);\n    }\n\n    async _fetchBytes(selector: string, parameters?: string): Promise<null | string> {\n        // e.g. keccak256(\"addr(bytes32,uint256)\")\n        const tx = {\n            to: this.address,\n            data: hexConcat([ selector, namehash(this.name), (parameters || \"0x\") ])\n        };\n\n        try {\n            return _parseBytes(await this.provider.call(tx));\n        } catch (error) {\n            if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n            return null;\n        }\n    }\n\n    _getAddress(coinType: number, hexBytes: string): string {\n        const coinInfo = coinInfos[String(coinType)];\n\n        if (coinInfo == null) {\n            logger.throwError(`unsupported coin type: ${ coinType }`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`\n            });\n        }\n\n        if (coinInfo.ilk === \"eth\") {\n            return this.provider.formatter.address(hexBytes);\n        }\n\n        const bytes = arrayify(hexBytes);\n\n        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (coinInfo.p2pkh != null) {\n            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n            if (p2pkh) {\n                const length = parseInt(p2pkh[1], 16);\n                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2pkh ], (\"0x\" + p2pkh[2]) ]));\n                }\n            }\n        }\n\n        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (coinInfo.p2sh != null) {\n            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n            if (p2sh) {\n                const length = parseInt(p2sh[1], 16);\n                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2sh ], (\"0x\" + p2sh[2]) ]));\n                }\n            }\n        }\n\n        // Bech32\n        if (coinInfo.prefix != null) {\n            const length = bytes[1];\n\n            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n            let version = bytes[0];\n            if (version === 0x00) {\n                if (length !== 20 && length !== 32) {\n                    version = -1;\n                }\n            } else {\n                version = -1;\n            }\n\n            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {\n                const words = bech32.toWords(bytes.slice(2));\n                words.unshift(version);\n                return bech32.encode(coinInfo.prefix, words);\n            }\n        }\n\n        return null;\n    }\n\n\n    async getAddress(coinType?: number): Promise<string> {\n        if (coinType == null) { coinType = 60; }\n\n        // If Ethereum, use the standard `addr(bytes32)`\n        if (coinType === 60) {\n            try {\n                // keccak256(\"addr(bytes32)\")\n                const transaction = {\n                    to: this.address,\n                    data: (\"0x3b3b57de\" + namehash(this.name).substring(2))\n                };\n                const hexBytes = await this.provider.call(transaction);\n\n                // No address\n                if (hexBytes === \"0x\" || hexBytes === HashZero) { return null; }\n\n                return this.provider.formatter.callAddress(hexBytes);\n            } catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n                throw error;\n            }\n        }\n\n        // keccak256(\"addr(bytes32,uint256\")\n        const hexBytes = await this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType));\n\n        // No address\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // Compute the address\n        const address = this._getAddress(coinType, hexBytes);\n\n        if (address == null) {\n            logger.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`,\n                coinType: coinType,\n                data: hexBytes\n            });\n        }\n\n        return address;\n    }\n\n    async getAvatar(): Promise<null | Avatar> {\n        const linkage: Array<{ type: string, content: string }> = [ ];\n        try {\n            const avatar = await this.getText(\"avatar\");\n            if (avatar == null) { return null; }\n\n            for (let i = 0; i < matchers.length; i++) {\n                const match = avatar.match(matchers[i]);\n\n                if (match == null) { continue; }\n                switch (match[1]) {\n                    case \"https\":\n                        linkage.push({ type: \"url\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"data\":\n                        linkage.push({ type: \"data\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"ipfs\":\n                        linkage.push({ type: \"ipfs\", content: avatar });\n                        return { linkage, url: `https:/\\/gateway.ipfs.io/ipfs/${ avatar.substring(7) }` }\n\n                    case \"erc721\":\n                    case \"erc1155\": {\n                        // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n                        const selector = (match[1] === \"erc721\") ? \"0xc87b56dd\": \"0x0e89341c\";\n                        linkage.push({ type: match[1], content: avatar });\n\n                        // The owner of this name\n                        const owner = (this._resolvedAddress || await this.getAddress());\n\n                        const comps = (match[2] || \"\").split(\"/\");\n                        if (comps.length !== 2) { return null; }\n\n                        const addr = await this.provider.formatter.address(comps[0]);\n                        const tokenId = hexZeroPad(BigNumber.from(comps[1]).toHexString(), 32);\n\n                        // Check that this account owns the token\n                        if (match[1] === \"erc721\") {\n                            // ownerOf(uint256 tokenId)\n                            const tokenOwner = this.provider.formatter.callAddress(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x6352211e\", tokenId ])\n                            }));\n                            if (owner !== tokenOwner) { return null; }\n                            linkage.push({ type: \"owner\", content: tokenOwner });\n\n                        } else if (match[1] === \"erc1155\") {\n                            // balanceOf(address owner, uint256 tokenId)\n                            const balance = BigNumber.from(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x00fdd58e\", hexZeroPad(owner, 32), tokenId ])\n                            }));\n                            if (balance.isZero()) { return null; }\n                            linkage.push({ type: \"balance\", content: balance.toString() });\n                        }\n\n                        // Call the token contract for the metadata URL\n                        const tx = {\n                            to: this.provider.formatter.address(comps[0]),\n                            data: hexConcat([ selector, tokenId ])\n                        };\n                        let metadataUrl = _parseString(await this.provider.call(tx))\n                        if (metadataUrl == null) { return null; }\n                        linkage.push({ type: \"metadata-url\", content: metadataUrl });\n\n                        // ERC-1155 allows a generic {id} in the URL\n                        if (match[1] === \"erc1155\") {\n                            metadataUrl = metadataUrl.replace(\"{id}\", tokenId.substring(2));\n                        }\n\n                        // Get the token metadata\n                        const metadata = await fetchJson(metadataUrl);\n\n                        // Pull the image URL out\n                        if (!metadata || typeof(metadata.image) !== \"string\" || !metadata.image.match(/^https:\\/\\//i)) {\n                            return null;\n                        }\n                        linkage.push({ type: \"metadata\", content: JSON.stringify(metadata) });\n                        linkage.push({ type: \"url\", content: metadata.image });\n\n                        return { linkage, url: metadata.image };\n                    }\n                }\n            }\n        } catch (error) { }\n\n        return null;\n    }\n\n    async getContentHash(): Promise<string> {\n\n        // keccak256(\"contenthash()\")\n        const hexBytes = await this._fetchBytes(\"0xbc1c58d1\");\n\n        // No contenthash\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // IPFS (CID: 1, Type: DAG-PB)\n        const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipfs) {\n            const length = parseInt(ipfs[3], 16);\n            if (ipfs[4].length === length * 2) {\n                return \"ipfs:/\\/\" + Base58.encode(\"0x\" + ipfs[1]);\n            }\n        }\n\n        // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n        const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/)\n        if (swarm) {\n            if (swarm[1].length === (32 * 2)) {\n                return \"bzz:/\\/\" + swarm[1]\n            }\n        }\n\n        return logger.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"getContentHash()\",\n            data: hexBytes\n        });\n    }\n\n    async getText(key: string): Promise<string> {\n\n        // The key encoded as parameter to fetchBytes\n        let keyBytes = toUtf8Bytes(key);\n\n        // The nodehash consumes the first slot, so the string pointer targets\n        // offset 64, with the length at offset 64 and data starting at offset 96\n        keyBytes = concat([ bytes32ify(64), bytes32ify(keyBytes.length), keyBytes ]);\n\n        // Pad to word-size (32 bytes)\n        if ((keyBytes.length % 32) !== 0) {\n            keyBytes = concat([ keyBytes, hexZeroPad(\"0x\", 32 - (key.length % 32)) ])\n        }\n\n        const hexBytes = await this._fetchBytes(\"0x59d1d43c\", hexlify(keyBytes));\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        return toUtf8String(hexBytes);\n    }\n}\n\nlet defaultFormatter: Formatter = null;\n\nlet nextPollId = 1;\n\nexport class BaseProvider extends Provider implements EnsProvider {\n    _networkPromise: Promise<Network>;\n    _network: Network;\n\n    _events: Array<Event>;\n\n    formatter: Formatter;\n\n    // To help mitigate the eventually consistent nature of the blockchain\n    // we keep a mapping of events we emit. If we emit an event X, we expect\n    // that a user should be able to query for that event in the callback,\n    // if the node returns null, we stall the response until we get back a\n    // meaningful value, since we may be hitting a re-org, or a node that\n    // has not indexed the event yet.\n    // Events:\n    //   - t:{hash}    - Transaction hash\n    //   - b:{hash}    - BlockHash\n    //   - block       - The most recent emitted block\n    _emitted: { [ eventName: string ]: number | \"pending\" };\n\n    _pollingInterval: number;\n    _poller: NodeJS.Timer;\n    _bootstrapPoll: NodeJS.Timer;\n\n    _lastBlockNumber: number;\n\n    _fastBlockNumber: number;\n    _fastBlockNumberPromise: Promise<number>;\n    _fastQueryDate: number;\n\n    _maxInternalBlockNumber: number;\n    _internalBlockNumber: Promise<{ blockNumber: number, reqTime: number, respTime: number }>;\n\n    readonly anyNetwork: boolean;\n\n\n    /**\n     *  ready\n     *\n     *  A Promise<Network> that resolves only once the provider is ready.\n     *\n     *  Sub-classes that call the super with a network without a chainId\n     *  MUST set this. Standard named networks have a known chainId.\n     *\n     */\n\n    constructor(network: Networkish | Promise<Network>) {\n        logger.checkNew(new.target, Provider);\n\n        super();\n\n        // Events being listened to\n        this._events = [];\n\n        this._emitted = { block: -2 };\n\n        this.formatter = new.target.getFormatter();\n\n        // If network is any, this Provider allows the underlying\n        // network to change dynamically, and we auto-detect the\n        // current network\n        defineReadOnly(this, \"anyNetwork\", (network === \"any\"));\n        if (this.anyNetwork) { network = this.detectNetwork(); }\n\n        if (network instanceof Promise) {\n            this._networkPromise = network;\n\n            // Squash any \"unhandled promise\" errors; that do not need to be handled\n            network.catch((error) => { });\n\n            // Trigger initial network setting (async)\n            this._ready().catch((error) => { });\n\n        } else {\n            const knownNetwork = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n            if (knownNetwork) {\n                defineReadOnly(this, \"_network\", knownNetwork);\n                this.emit(\"network\", knownNetwork, null);\n\n            } else {\n                logger.throwArgumentError(\"invalid network\", \"network\", network);\n            }\n        }\n\n        this._maxInternalBlockNumber = -1024;\n\n        this._lastBlockNumber = -2;\n\n        this._pollingInterval = 4000;\n\n        this._fastQueryDate = 0;\n    }\n\n    async _ready(): Promise<Network> {\n        if (this._network == null) {\n            let network: Network = null;\n            if (this._networkPromise) {\n                try {\n                    network = await this._networkPromise;\n                } catch (error) { }\n            }\n\n            // Try the Provider's network detection (this MUST throw if it cannot)\n            if (network == null) {\n                network = await this.detectNetwork();\n            }\n\n            // This should never happen; every Provider sub-class should have\n            // suggested a network by here (or have thrown).\n            if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, { });\n            }\n\n            // Possible this call stacked so do not call defineReadOnly again\n            if (this._network == null) {\n                if (this.anyNetwork) {\n                    this._network = network;\n                } else {\n                    defineReadOnly(this, \"_network\", network);\n                }\n                this.emit(\"network\", network, null);\n            }\n        }\n\n        return this._network;\n    }\n\n    // This will always return the most recently established network.\n    // For \"any\", this can change (a \"network\" event is emitted before\n    // any change is reflected); otherwise this cannot change\n    get ready(): Promise<Network> {\n        return poll(() => {\n            return this._ready().then((network) => {\n                return network;\n            }, (error) => {\n                // If the network isn't running yet, we will wait\n                if (error.code === Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n                    return undefined;\n                }\n                throw error;\n            });\n        });\n    }\n\n    // @TODO: Remove this and just create a singleton formatter\n    static getFormatter(): Formatter {\n        if (defaultFormatter == null) {\n            defaultFormatter = new Formatter();\n        }\n        return defaultFormatter;\n    }\n\n    // @TODO: Remove this and just use getNetwork\n    static getNetwork(network: Networkish): Network {\n        return getNetwork((network == null) ? \"homestead\": network);\n    }\n\n    // Fetches the blockNumber, but will reuse any result that is less\n    // than maxAge old or has been requested since the last request\n    async _getInternalBlockNumber(maxAge: number): Promise<number> {\n        await this._ready();\n\n        // Allowing stale data up to maxAge old\n        if (maxAge > 0) {\n\n            // While there are pending internal block requests...\n            while (this._internalBlockNumber) {\n\n                // ...\"remember\" which fetch we started with\n                const internalBlockNumber = this._internalBlockNumber;\n\n                try {\n                    // Check the result is not too stale\n                    const result = await internalBlockNumber;\n                    if ((getTime() - result.respTime) <= maxAge) {\n                        return result.blockNumber;\n                    }\n\n                    // Too old; fetch a new value\n                    break;\n\n                } catch(error) {\n\n                    // The fetch rejected; if we are the first to get the\n                    // rejection, drop through so we replace it with a new\n                    // fetch; all others blocked will then get that fetch\n                    // which won't match the one they \"remembered\" and loop\n                    if (this._internalBlockNumber === internalBlockNumber) {\n                        break;\n                    }\n                }\n            }\n        }\n\n        const reqTime = getTime();\n\n        const checkInternalBlockNumber = resolveProperties({\n            blockNumber: this.perform(\"getBlockNumber\", { }),\n            networkError: this.getNetwork().then((network) => (null), (error) => (error))\n        }).then(({ blockNumber, networkError }) => {\n            if (networkError) {\n                // Unremember this bad internal block number\n                if (this._internalBlockNumber === checkInternalBlockNumber) {\n                    this._internalBlockNumber = null;\n                }\n                throw networkError;\n            }\n\n            const respTime = getTime();\n\n            blockNumber = BigNumber.from(blockNumber).toNumber();\n            if (blockNumber < this._maxInternalBlockNumber) { blockNumber = this._maxInternalBlockNumber; }\n\n            this._maxInternalBlockNumber = blockNumber;\n            this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n            return { blockNumber, reqTime, respTime };\n        });\n\n        this._internalBlockNumber = checkInternalBlockNumber;\n\n        // Swallow unhandled exceptions; if needed they are handled else where\n        checkInternalBlockNumber.catch((error) => {\n            // Don't null the dead (rejected) fetch, if it has already been updated\n            if (this._internalBlockNumber === checkInternalBlockNumber) {\n                this._internalBlockNumber = null;\n            }\n        });\n\n        return (await checkInternalBlockNumber).blockNumber;\n    }\n\n    async poll(): Promise<void> {\n        const pollId = nextPollId++;\n\n        // Track all running promises, so we can trigger a post-poll once they are complete\n        const runners: Array<Promise<void>> = [];\n\n        let blockNumber: number = null;\n        try {\n            blockNumber = await this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n        } catch (error) {\n            this.emit(\"error\", error);\n            return;\n        }\n        this._setFastBlockNumber(blockNumber);\n\n        // Emit a poll event after we have the latest (fast) block number\n        this.emit(\"poll\", pollId, blockNumber);\n\n        // If the block has not changed, meh.\n        if (blockNumber === this._lastBlockNumber) {\n            this.emit(\"didPoll\", pollId);\n            return;\n        }\n\n        // First polling cycle, trigger a \"block\" events\n        if (this._emitted.block === -2) {\n            this._emitted.block = blockNumber - 1;\n        }\n\n        if (Math.abs((<number>(this._emitted.block)) - blockNumber) > 1000) {\n            logger.warn(`network block skew detected; skipping block events (emitted=${ this._emitted.block } blockNumber${ blockNumber })`);\n            this.emit(\"error\", logger.makeError(\"network block skew detected\", Logger.errors.NETWORK_ERROR, {\n                blockNumber: blockNumber,\n                event: \"blockSkew\",\n                previousBlockNumber: this._emitted.block\n            }));\n            this.emit(\"block\", blockNumber);\n\n        } else {\n            // Notify all listener for each block that has passed\n            for (let i = (<number>this._emitted.block) + 1; i <= blockNumber; i++) {\n                this.emit(\"block\", i);\n            }\n        }\n\n        // The emitted block was updated, check for obsolete events\n        if ((<number>this._emitted.block) !== blockNumber) {\n            this._emitted.block = blockNumber;\n\n            Object.keys(this._emitted).forEach((key) => {\n                // The block event does not expire\n                if (key === \"block\") { return; }\n\n                // The block we were at when we emitted this event\n                const eventBlockNumber = this._emitted[key];\n\n                // We cannot garbage collect pending transactions or blocks here\n                // They should be garbage collected by the Provider when setting\n                // \"pending\" events\n                if (eventBlockNumber === \"pending\") { return; }\n\n                // Evict any transaction hashes or block hashes over 12 blocks\n                // old, since they should not return null anyways\n                if (blockNumber - eventBlockNumber > 12) {\n                    delete this._emitted[key];\n                }\n            });\n        }\n\n        // First polling cycle\n        if (this._lastBlockNumber === -2) {\n            this._lastBlockNumber = blockNumber - 1;\n        }\n\n        // Find all transaction hashes we are waiting on\n        this._events.forEach((event) => {\n            switch (event.type) {\n                case \"tx\": {\n                    const hash = event.hash;\n                    let runner = this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt || receipt.blockNumber == null) { return null; }\n                        this._emitted[\"t:\" + hash] = receipt.blockNumber;\n                        this.emit(hash, receipt);\n                        return null;\n                    }).catch((error: Error) => { this.emit(\"error\", error); });\n\n                    runners.push(runner);\n\n                    break;\n                }\n\n                case \"filter\": {\n                    const filter = event.filter;\n                    filter.fromBlock = this._lastBlockNumber + 1;\n                    filter.toBlock = blockNumber;\n\n                    const runner = this.getLogs(filter).then((logs) => {\n                        if (logs.length === 0) { return; }\n                        logs.forEach((log: Log) => {\n                            this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                            this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n                            this.emit(filter, log);\n                        });\n                    }).catch((error: Error) => { this.emit(\"error\", error); });\n                    runners.push(runner);\n\n                    break;\n                }\n            }\n        });\n\n        this._lastBlockNumber = blockNumber;\n\n        // Once all events for this loop have been processed, emit \"didPoll\"\n        Promise.all(runners).then(() => {\n            this.emit(\"didPoll\", pollId);\n        }).catch((error) => { this.emit(\"error\", error); });\n\n        return;\n    }\n\n    // Deprecated; do not use this\n    resetEventsBlock(blockNumber: number): void {\n        this._lastBlockNumber = blockNumber - 1;\n        if (this.polling) { this.poll(); }\n    }\n\n    get network(): Network {\n        return this._network;\n    }\n\n    // This method should query the network if the underlying network\n    // can change, such as when connected to a JSON-RPC backend\n    async detectNetwork(): Promise<Network> {\n        return logger.throwError(\"provider does not support network detection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"provider.detectNetwork\"\n        });\n    }\n\n    async getNetwork(): Promise<Network> {\n        const network = await this._ready();\n\n        // Make sure we are still connected to the same network; this is\n        // only an external call for backends which can have the underlying\n        // network change spontaneously\n        const currentNetwork = await this.detectNetwork();\n        if (network.chainId !== currentNetwork.chainId) {\n\n            // We are allowing network changes, things can get complex fast;\n            // make sure you know what you are doing if you use \"any\"\n            if (this.anyNetwork) {\n                this._network = currentNetwork;\n\n                // Reset all internal block number guards and caches\n                this._lastBlockNumber = -2;\n                this._fastBlockNumber = null;\n                this._fastBlockNumberPromise = null;\n                this._fastQueryDate = 0;\n                this._emitted.block = -2;\n                this._maxInternalBlockNumber = -1024;\n                this._internalBlockNumber = null;\n\n                // The \"network\" event MUST happen before this method resolves\n                // so any events have a chance to unregister, so we stall an\n                // additional event loop before returning from /this/ call\n                this.emit(\"network\", currentNetwork, network);\n                await stall(0);\n\n                return this._network;\n            }\n\n            const error = logger.makeError(\"underlying network changed\", Logger.errors.NETWORK_ERROR, {\n                event: \"changed\",\n                network: network,\n                detectedNetwork: currentNetwork\n            });\n\n            this.emit(\"error\", error);\n            throw error;\n        }\n\n        return network;\n    }\n\n    get blockNumber(): number {\n        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {\n            this._setFastBlockNumber(blockNumber);\n        }, (error) => { });\n\n        return (this._fastBlockNumber != null) ? this._fastBlockNumber: -1;\n    }\n\n    get polling(): boolean {\n        return (this._poller != null);\n    }\n\n    set polling(value: boolean) {\n        if (value && !this._poller) {\n            this._poller = setInterval(() => { this.poll(); }, this.pollingInterval);\n\n            if (!this._bootstrapPoll) {\n                this._bootstrapPoll = setTimeout(() => {\n                    this.poll();\n\n                    // We block additional polls until the polling interval\n                    // is done, to prevent overwhelming the poll function\n                    this._bootstrapPoll = setTimeout(() => {\n                        // If polling was disabled, something may require a poke\n                        // since starting the bootstrap poll and it was disabled\n                        if (!this._poller) { this.poll(); }\n\n                        // Clear out the bootstrap so we can do another\n                        this._bootstrapPoll = null;\n                    }, this.pollingInterval);\n                }, 0);\n            }\n\n        } else if (!value && this._poller) {\n            clearInterval(this._poller);\n            this._poller = null;\n        }\n    }\n\n    get pollingInterval(): number {\n        return this._pollingInterval;\n    }\n\n    set pollingInterval(value: number) {\n        if (typeof(value) !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n            throw new Error(\"invalid polling interval\");\n        }\n\n        this._pollingInterval = value;\n\n        if (this._poller) {\n            clearInterval(this._poller);\n            this._poller = setInterval(() => { this.poll(); }, this._pollingInterval);\n        }\n    }\n\n    _getFastBlockNumber(): Promise<number> {\n        const now = getTime();\n\n        // Stale block number, request a newer value\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\n            this._fastQueryDate = now;\n            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {\n                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n                    this._fastBlockNumber = blockNumber;\n                }\n                return this._fastBlockNumber;\n            });\n        }\n\n        return this._fastBlockNumberPromise;\n    }\n\n    _setFastBlockNumber(blockNumber: number): void {\n        // Older block, maybe a stale request\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) { return; }\n\n        // Update the time we updated the blocknumber\n        this._fastQueryDate = getTime();\n\n        // Newer block number, use  it\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n            this._fastBlockNumber = blockNumber;\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n        }\n    }\n\n    async waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt> {\n        return this._waitForTransaction(transactionHash, (confirmations == null) ? 1: confirmations, timeout || 0, null);\n    }\n\n    async _waitForTransaction(transactionHash: string, confirmations: number, timeout: number, replaceable: { data: string, from: string, nonce: number, to: string, value: BigNumber, startBlock: number }): Promise<TransactionReceipt> {\n        const receipt = await this.getTransactionReceipt(transactionHash);\n\n        // Receipt is already good\n        if ((receipt ? receipt.confirmations: 0) >= confirmations) { return receipt; }\n\n        // Poll until the receipt is good...\n        return new Promise((resolve, reject) => {\n            const cancelFuncs: Array<() => void> = [];\n\n            let done = false;\n            const alreadyDone = function() {\n                if (done) { return true; }\n                done = true;\n                cancelFuncs.forEach((func) => { func(); });\n                return false;\n            };\n\n            const minedHandler = (receipt: TransactionReceipt) => {\n                if (receipt.confirmations < confirmations) { return; }\n                if (alreadyDone()) { return; }\n                resolve(receipt);\n            }\n            this.on(transactionHash, minedHandler);\n            cancelFuncs.push(() => { this.removeListener(transactionHash, minedHandler); });\n\n            if (replaceable) {\n                let lastBlockNumber = replaceable.startBlock;\n                let scannedBlock: number = null;\n                const replaceHandler = async (blockNumber: number) => {\n                    if (done) { return; }\n\n                    // Wait 1 second; this is only used in the case of a fault, so\n                    // we will trade off a little bit of latency for more consistent\n                    // results and fewer JSON-RPC calls\n                    await stall(1000);\n\n                    this.getTransactionCount(replaceable.from).then(async (nonce) => {\n                        if (done) { return; }\n\n                        if (nonce <= replaceable.nonce) {\n                            lastBlockNumber = blockNumber;\n\n                        } else {\n                            // First check if the transaction was mined\n                            {\n                                const mined = await this.getTransaction(transactionHash);\n                                if (mined && mined.blockNumber != null) { return; }\n                            }\n\n                            // First time scanning. We start a little earlier for some\n                            // wiggle room here to handle the eventually consistent nature\n                            // of blockchain (e.g. the getTransactionCount was for a\n                            // different block)\n                            if (scannedBlock == null) {\n                                scannedBlock = lastBlockNumber - 3;\n                                if (scannedBlock < replaceable.startBlock) {\n                                    scannedBlock = replaceable.startBlock;\n                                }\n                            }\n\n                            while (scannedBlock <= blockNumber) {\n                                if (done) { return; }\n\n                                const block = await this.getBlockWithTransactions(scannedBlock);\n                                for (let ti = 0; ti < block.transactions.length; ti++) {\n                                    const tx = block.transactions[ti];\n\n                                    // Successfully mined!\n                                    if (tx.hash === transactionHash) { return; }\n\n                                    // Matches our transaction from and nonce; its a replacement\n                                    if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {\n                                        if (done) { return; }\n\n                                        // Get the receipt of the replacement\n                                        const receipt = await this.waitForTransaction(tx.hash, confirmations);\n\n                                        // Already resolved or rejected (prolly a timeout)\n                                        if (alreadyDone()) { return; }\n\n                                        // The reason we were replaced\n                                        let reason = \"replaced\";\n                                        if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                                            reason = \"repriced\";\n                                        } else  if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                                            reason = \"cancelled\"\n                                        }\n\n                                        // Explain why we were replaced\n                                        reject(logger.makeError(\"transaction was replaced\", Logger.errors.TRANSACTION_REPLACED, {\n                                            cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                                            reason,\n                                            replacement: this._wrapTransaction(tx),\n                                            hash: transactionHash,\n                                            receipt\n                                        }));\n\n                                        return;\n                                    }\n                                }\n                                scannedBlock++;\n                            }\n                        }\n\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n\n                    }, (error) => {\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n                    });\n                };\n\n                if (done) { return; }\n                this.once(\"block\", replaceHandler);\n\n                cancelFuncs.push(() => {\n                    this.removeListener(\"block\", replaceHandler);\n                });\n            }\n\n            if (typeof(timeout) === \"number\" && timeout > 0) {\n                const timer = setTimeout(() => {\n                    if (alreadyDone()) { return; }\n                    reject(logger.makeError(\"timeout exceeded\", Logger.errors.TIMEOUT, { timeout: timeout }));\n                }, timeout);\n                if (timer.unref) { timer.unref(); }\n\n                cancelFuncs.push(() => { clearTimeout(timer); });\n            }\n        });\n    }\n\n    async getBlockNumber(): Promise<number> {\n        return this._getInternalBlockNumber(0);\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        await this.getNetwork();\n\n        const result = await this.perform(\"getGasPrice\", { });\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getGasPrice\",\n                result, error\n            });\n        }\n    }\n\n    async getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getBalance\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getBalance\",\n                params, result, error\n            });\n        }\n    }\n\n    async getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getTransactionCount\", params);\n        try {\n            return BigNumber.from(result).toNumber();\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getTransactionCount\",\n                params, result, error\n            });\n        }\n    }\n\n    async getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getCode\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getCode\",\n                params, result, error\n            });\n        }\n    }\n\n    async getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag),\n            position: Promise.resolve(position).then((p) => hexValue(p))\n        });\n        const result = await this.perform(\"getStorageAt\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getStorageAt\",\n                params, result, error\n            });\n        }\n    }\n\n    // This should be called by any subclass wrapping a TransactionResponse\n    _wrapTransaction(tx: Transaction, hash?: string, startBlock?: number): TransactionResponse {\n        if (hash != null && hexDataLength(hash) !== 32) { throw new Error(\"invalid response - sendTransaction\"); }\n\n        const result = <TransactionResponse>tx;\n\n        // Check the hash we expect is the same as the hash the server reported\n        if (hash != null && tx.hash !== hash) {\n            logger.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\n        }\n\n        result.wait = async (confirms?: number, timeout?: number) => {\n            if (confirms == null) { confirms = 1; }\n            if (timeout == null) { timeout = 0; }\n\n            // Get the details to detect replacement\n            let replacement = undefined;\n            if (confirms !== 0 && startBlock != null) {\n                replacement = {\n                    data: tx.data,\n                    from: tx.from,\n                    nonce: tx.nonce,\n                    to: tx.to,\n                    value: tx.value,\n                    startBlock\n                };\n            }\n\n            const receipt = await this._waitForTransaction(tx.hash, confirms, timeout, replacement);\n            if (receipt == null && confirms === 0) { return null; }\n\n            // No longer pending, allow the polling loop to garbage collect this\n            this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n\n            if (receipt.status === 0) {\n                logger.throwError(\"transaction failed\", Logger.errors.CALL_EXCEPTION, {\n                    transactionHash: tx.hash,\n                    transaction: tx,\n                    receipt: receipt\n                });\n            }\n            return receipt;\n        };\n\n        return result;\n    }\n\n    async sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        const hexTx = await Promise.resolve(signedTransaction).then(t => hexlify(t));\n        const tx = this.formatter.transaction(signedTransaction);\n        if (tx.confirmations == null) { tx.confirmations = 0; }\n        const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n        try {\n            const hash = await this.perform(\"sendTransaction\", { signedTransaction: hexTx });\n            return this._wrapTransaction(tx, hash, blockNumber);\n        } catch (error) {\n            (<any>error).transaction = tx;\n            (<any>error).transactionHash = tx.hash;\n            throw error;\n        }\n    }\n\n    async _getTransactionRequest(transaction: Deferrable<TransactionRequest>): Promise<Transaction> {\n        const values: any = await transaction;\n\n        const tx: any = { };\n\n        [\"from\", \"to\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? this._getAddress(v): null))\n        });\n\n        [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? BigNumber.from(v): null));\n        });\n\n        [\"type\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => ((v != null) ? v: null));\n        });\n\n        if (values.accessList) {\n            tx.accessList = this.formatter.accessList(values.accessList);\n        }\n\n        [\"data\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? hexlify(v): null));\n        });\n\n        return this.formatter.transactionRequest(await resolveProperties(tx));\n    }\n\n    async _getFilter(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Filter | FilterByBlockHash> {\n        filter = await filter;\n\n        const result: any = { };\n\n        if (filter.address != null) {\n            result.address = this._getAddress(filter.address);\n        }\n\n        [\"blockHash\", \"topics\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = (<any>filter)[key];\n        });\n\n        [\"fromBlock\", \"toBlock\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = this._getBlockTag((<any>filter)[key]);\n        });\n\n        return this.formatter.filter(await resolveProperties(result));\n    }\n\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"call\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"call\",\n                params, result, error\n            });\n        }\n    }\n\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction)\n        });\n\n        const result = await this.perform(\"estimateGas\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"estimateGas\",\n                params, result, error\n            });\n        }\n    }\n\n    async _getAddress(addressOrName: string | Promise<string>): Promise<string> {\n        addressOrName = await addressOrName;\n        if (typeof(addressOrName) !== \"string\") {\n            logger.throwArgumentError(\"invalid address or ENS name\", \"name\", addressOrName);\n        }\n\n        const address = await this.resolveName(addressOrName);\n        if (address == null) {\n            logger.throwError(\"ENS name not configured\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `resolveName(${ JSON.stringify(addressOrName) })`\n            });\n        }\n        return address;\n    }\n\n    async _getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>, includeTransactions?: boolean): Promise<Block | BlockWithTransactions> {\n        await this.getNetwork();\n\n        blockHashOrBlockTag = await blockHashOrBlockTag;\n\n        // If blockTag is a number (not \"latest\", etc), this is the block number\n        let blockNumber = -128;\n\n        const params: { [key: string]: any } = {\n            includeTransactions: !!includeTransactions\n        };\n\n        if (isHexString(blockHashOrBlockTag, 32)) {\n            params.blockHash = blockHashOrBlockTag;\n        } else {\n            try {\n                params.blockTag = await this._getBlockTag(blockHashOrBlockTag);\n                if (isHexString(params.blockTag)) {\n                    blockNumber = parseInt(params.blockTag.substring(2), 16);\n                }\n            } catch (error) {\n                logger.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n            }\n        }\n\n        return poll(async () => {\n            const block = await this.perform(\"getBlock\", params);\n\n            // Block was not found\n            if (block == null) {\n\n                // For blockhashes, if we didn't say it existed, that blockhash may\n                // not exist. If we did see it though, perhaps from a log, we know\n                // it exists, and this node is just not caught up yet.\n                if (params.blockHash != null) {\n                    if (this._emitted[\"b:\" + params.blockHash] == null) { return null; }\n                }\n\n                // For block tags, if we are asking for a future block, we return null\n                if (params.blockTag != null) {\n                    if (blockNumber > this._emitted.block) { return null; }\n                }\n\n                // Retry on the next block\n                return undefined;\n            }\n\n            // Add transactions\n            if (includeTransactions) {\n                let blockNumber: number = null;\n                for (let i = 0; i < block.transactions.length; i++) {\n                    const tx = block.transactions[i];\n                    if (tx.blockNumber == null) {\n                        tx.confirmations = 0;\n\n                    } else if (tx.confirmations == null) {\n                        if (blockNumber == null) {\n                            blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                        }\n\n                        // Add the confirmations using the fast block number (pessimistic)\n                        let confirmations = (blockNumber - tx.blockNumber) + 1;\n                        if (confirmations <= 0) { confirmations = 1; }\n                        tx.confirmations = confirmations;\n                    }\n                }\n\n                const blockWithTxs: any = this.formatter.blockWithTransactions(block);\n                blockWithTxs.transactions = blockWithTxs.transactions.map((tx: TransactionResponse) => this._wrapTransaction(tx));\n                return blockWithTxs;\n            }\n\n            return this.formatter.block(block);\n\n        }, { oncePoll: this });\n    }\n\n    getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block> {\n        return <Promise<Block>>(this._getBlock(blockHashOrBlockTag, false));\n    }\n\n    getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions> {\n        return <Promise<BlockWithTransactions>>(this._getBlock(blockHashOrBlockTag, true));\n    }\n\n    async getTransaction(transactionHash: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransaction\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            const tx = this.formatter.transactionResponse(result);\n\n            if (tx.blockNumber == null) {\n                tx.confirmations = 0;\n\n            } else if (tx.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - tx.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                tx.confirmations = confirmations;\n            }\n\n            return this._wrapTransaction(tx);\n        }, { oncePoll: this });\n    }\n\n    async getTransactionReceipt(transactionHash: string | Promise<string>): Promise<TransactionReceipt> {\n        await this.getNetwork();\n\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransactionReceipt\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            // \"geth-etc\" returns receipts before they are ready\n            if (result.blockHash == null) { return undefined; }\n\n            const receipt = this.formatter.receipt(result);\n\n            if (receipt.blockNumber == null) {\n                receipt.confirmations = 0;\n\n            } else if (receipt.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - receipt.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                receipt.confirmations = confirmations;\n            }\n\n            return receipt;\n        }, { oncePoll: this });\n    }\n\n    async getLogs(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Array<Log>> {\n        await this.getNetwork();\n        const params = await resolveProperties({ filter: this._getFilter(filter) });\n        const logs: Array<Log> = await this.perform(\"getLogs\", params);\n        logs.forEach((log) => {\n            if (log.removed == null) { log.removed = false; }\n        });\n        return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n    }\n\n    async getEtherPrice(): Promise<number> {\n        await this.getNetwork();\n        return this.perform(\"getEtherPrice\", { });\n    }\n\n    async _getBlockTag(blockTag: BlockTag | Promise<BlockTag>): Promise<BlockTag> {\n        blockTag = await blockTag;\n\n        if (typeof(blockTag) === \"number\" && blockTag < 0) {\n            if (blockTag % 1) {\n                logger.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n            }\n\n            let blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n            blockNumber += blockTag;\n            if (blockNumber < 0) { blockNumber = 0; }\n            return this.formatter.blockTag(blockNumber)\n        }\n\n        return this.formatter.blockTag(blockTag);\n    }\n\n\n    async getResolver(name: string): Promise<null | Resolver> {\n        try {\n            const address = await this._getResolver(name);\n            if (address == null) { return null; }\n            return new Resolver(this, address, name);\n        } catch (error) {\n            if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n            return null;\n        }\n    }\n\n    async _getResolver(name: string): Promise<string> {\n        // Get the resolver from the blockchain\n        const network = await this.getNetwork();\n\n        // No ENS...\n        if (!network.ensAddress) {\n            logger.throwError(\n                \"network does not support ENS\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { operation: \"ENS\", network: network.name }\n            );\n        }\n\n        // keccak256(\"resolver(bytes32)\")\n        const transaction = {\n            to: network.ensAddress,\n            data: (\"0x0178b8bf\" + namehash(name).substring(2))\n        };\n\n        try {\n            return this.formatter.callAddress(await this.call(transaction));\n        } catch (error) {\n            if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n            throw error;\n        }\n    }\n\n    async resolveName(name: string | Promise<string>): Promise<null | string> {\n        name = await name;\n\n        // If it is already an address, nothing to resolve\n        try {\n            return Promise.resolve(this.formatter.address(name));\n        } catch (error) {\n            // If is is a hexstring, the address is bad (See #694)\n            if (isHexString(name)) { throw error; }\n        }\n\n        if (typeof(name) !== \"string\") {\n            logger.throwArgumentError(\"invalid ENS name\", \"name\", name);\n        }\n\n        // Get the addr from the resovler\n        const resolver = await this.getResolver(name);\n        if (!resolver) { return null; }\n\n        return await resolver.getAddress();\n    }\n\n    async lookupAddress(address: string | Promise<string>): Promise<null | string> {\n        address = await address;\n        address = this.formatter.address(address);\n\n        const reverseName = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n        const resolverAddress = await this._getResolver(reverseName);\n        if (!resolverAddress) { return null; }\n\n        // keccak(\"name(bytes32)\")\n        let bytes = arrayify(await this.call({\n            to: resolverAddress,\n            data: (\"0x691f3431\" + namehash(reverseName).substring(2))\n        }));\n\n        // Strip off the dynamic string pointer (0x20)\n        if (bytes.length < 32 || !BigNumber.from(bytes.slice(0, 32)).eq(32)) { return null; }\n        bytes = bytes.slice(32);\n\n        // Not a length-prefixed string\n        if (bytes.length < 32) { return null; }\n\n        // Get the length of the string (from the length-prefix)\n        const length = BigNumber.from(bytes.slice(0, 32)).toNumber();\n        bytes = bytes.slice(32);\n\n        // Length longer than available data\n        if (length > bytes.length) { return null; }\n\n        const name = toUtf8String(bytes.slice(0, length));\n\n        // Make sure the reverse record matches the foward record\n        const addr = await this.resolveName(name);\n        if (addr != address) { return null; }\n\n        return name;\n    }\n\n    async getAvatar(nameOrAddress: string): Promise<null | string> {\n        let resolver: Resolver = null;\n        if (isHexString(nameOrAddress)) {\n            // Address; reverse lookup\n            const address = this.formatter.address(nameOrAddress);\n\n            const reverseName = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n            const resolverAddress = await this._getResolver(reverseName);\n            if (!resolverAddress) { return null; }\n\n            resolver = new Resolver(this, resolverAddress, \"_\", address);\n\n        } else {\n            // ENS name; forward lookup\n            resolver = await this.getResolver(nameOrAddress);\n        }\n\n        const avatar = await resolver.getAvatar();\n        if (avatar == null) { return null; }\n\n        return avatar.url;\n    }\n\n    perform(method: string, params: any): Promise<any> {\n        return logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n    }\n\n    _startEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _stopEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _addEventListener(eventName: EventType, listener: Listener, once: boolean): this {\n        const event = new Event(getEventTag(eventName), listener, once)\n        this._events.push(event);\n        this._startEvent(event);\n\n        return this;\n    }\n\n    on(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, false);\n    }\n\n    once(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, true);\n    }\n\n\n    emit(eventName: EventType, ...args: Array<any>): boolean {\n        let result = false;\n\n        let stopped: Array<Event> = [ ];\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag) { return true; }\n\n            setTimeout(() => {\n                event.listener.apply(this, args);\n            }, 0);\n\n            result = true;\n\n            if (event.once) {\n                stopped.push(event);\n                return false;\n            }\n\n            return true;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return result;\n    }\n\n    listenerCount(eventName?: EventType): number {\n        if (!eventName) { return this._events.length; }\n\n        let eventTag = getEventTag(eventName);\n        return this._events.filter((event) => {\n            return (event.tag === eventTag);\n        }).length;\n    }\n\n    listeners(eventName?: EventType): Array<Listener> {\n        if (eventName == null) {\n            return this._events.map((event) => event.listener);\n        }\n\n        let eventTag = getEventTag(eventName);\n        return this._events\n            .filter((event) => (event.tag === eventTag))\n            .map((event) => event.listener);\n    }\n\n    off(eventName: EventType, listener?: Listener): this {\n        if (listener == null) {\n            return this.removeAllListeners(eventName);\n        }\n\n        const stopped: Array<Event> = [ ];\n\n        let found = false;\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag || event.listener != listener) { return true; }\n            if (found) { return true; }\n            found = true;\n            stopped.push(event);\n            return false;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n\n    removeAllListeners(eventName?: EventType): this {\n        let stopped: Array<Event> = [ ];\n        if (eventName == null) {\n            stopped = this._events;\n\n            this._events = [ ];\n        } else {\n            const eventTag = getEventTag(eventName);\n            this._events = this._events.filter((event) => {\n                if (event.tag !== eventTag) { return true; }\n                stopped.push(event);\n                return false;\n            });\n        }\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n}\n","\"use strict\";\n\n// See: https://github.com/ethereum/wiki/wiki/JSON-RPC\n\nimport { Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { Signer, TypedDataDomain, TypedDataField, TypedDataSigner } from \"@ethersproject/abstract-signer\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Bytes, hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { checkProperties, deepCopy, Deferrable, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { AccessList, accessListify } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, fetchJson, poll } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BaseProvider, Event } from \"./base-provider\";\n\n\nconst errorGas = [ \"call\", \"estimateGas\" ];\n\nfunction checkError(method: string, error: any, params: any): any {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n        if (e && e.message.match(\"reverted\") && isHexString(e.data)) {\n            return e.data;\n        }\n\n        logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n            error, data: \"0x\"\n        });\n    }\n\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof(error.error.message) === \"string\") {\n        message = error.error.message;\n    } else if (typeof(error.body) === \"string\") {\n        message = error.body;\n    } else if (typeof(error.responseText) === \"string\") {\n        message = error.responseText;\n    }\n    message = (message || \"\").toLowerCase();\n\n    const transaction = params.transaction || params.signedTransaction;\n\n    // \"insufficient funds for gas * price + value + cost(data)\"\n    if (message.match(/insufficient funds|base fee exceeds gas limit/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n\n    // \"nonce too low\"\n    if (message.match(/nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/replacement transaction underpriced/)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/only replay-protected/)) {\n        logger.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            error, method, transaction\n        });\n    }\n\n    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n\n    throw error;\n}\n\nfunction timer(timeout: number): Promise<any> {\n    return new Promise(function(resolve) {\n        setTimeout(resolve, timeout);\n    });\n}\n\nfunction getResult(payload: { error?: { code?: number, data?: any, message?: string }, result?: any }): any {\n    if (payload.error) {\n        // @TODO: not any\n        const error: any = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n\n    return payload.result;\n}\n\nfunction getLowerCase(value: string): string {\n    if (value) { return value.toLowerCase(); }\n    return value;\n}\n\nconst _constructorGuard = {};\n\nexport class JsonRpcSigner extends Signer implements TypedDataSigner {\n    readonly provider: JsonRpcProvider;\n    _index: number;\n    _address: string;\n\n    constructor(constructorGuard: any, provider: JsonRpcProvider, addressOrIndex?: string | number) {\n        logger.checkNew(new.target, JsonRpcSigner);\n\n        super();\n\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n        }\n\n        defineReadOnly(this, \"provider\", provider);\n\n        if (addressOrIndex == null) { addressOrIndex = 0; }\n\n        if (typeof(addressOrIndex) === \"string\") {\n            defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n            defineReadOnly(this, \"_index\", null);\n\n        } else if (typeof(addressOrIndex) === \"number\") {\n            defineReadOnly(this, \"_index\", addressOrIndex);\n            defineReadOnly(this, \"_address\", null);\n\n        } else {\n            logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n        }\n    }\n\n    connect(provider: Provider): JsonRpcSigner {\n        return logger.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"connect\"\n        });\n    }\n\n    connectUnchecked(): JsonRpcSigner {\n        return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n    }\n\n    getAddress(): Promise<string> {\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n\n        return this.provider.send(\"eth_accounts\", []).then((accounts) => {\n            if (accounts.length <= this._index) {\n                logger.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"getAddress\"\n                });\n            }\n            return this.provider.formatter.address(accounts[this._index])\n        });\n    }\n\n    sendUncheckedTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        transaction = shallowCopy(transaction);\n\n        const fromAddress = this.getAddress().then((address) => {\n            if (address) { address = address.toLowerCase(); }\n            return address;\n        });\n\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            const estimate = shallowCopy(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n\n        if (transaction.to != null) {\n            transaction.to = Promise.resolve(transaction.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.provider.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n        }\n\n        return resolveProperties({\n            tx: resolveProperties(transaction),\n            sender: fromAddress\n        }).then(({ tx, sender }) => {\n\n            if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n            } else {\n                tx.from = sender;\n            }\n\n            const hexTx = (<any>this.provider.constructor).hexlifyTransaction(tx, { from: true });\n\n            return this.provider.send(\"eth_sendTransaction\", [ hexTx ]).then((hash) => {\n                return hash;\n            }, (error) => {\n                return checkError(\"sendTransaction\", error, hexTx);\n            });\n        });\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return logger.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"signTransaction\"\n        });\n    }\n\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        // This cannot be mined any earlier than any recent block\n        const blockNumber = await this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);\n\n        // Send the transaction\n        const hash = await this.sendUncheckedTransaction(transaction);\n\n        try {\n            // Unfortunately, JSON-RPC only provides and opaque transaction hash\n            // for a response, and we need the actual transaction, so we poll\n            // for it; it should show up very quickly\n            return await poll(async () => {\n                const tx = await this.provider.getTransaction(hash);\n                if (tx === null) { return undefined; }\n                return this.provider._wrapTransaction(tx, hash, blockNumber);\n            }, { oncePoll: this.provider });\n        } catch (error) {\n            (<any>error).transactionHash = hash;\n            throw error;\n        }\n    }\n\n    async signMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n\n        return await this.provider.send(\"personal_sign\", [ hexlify(data), address.toLowerCase() ]);\n    }\n\n    async _legacySignMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n\n        // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n        return await this.provider.send(\"eth_sign\", [ address.toLowerCase(), hexlify(data) ]);\n    }\n\n    async _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        // Populate any ENS names (in-place)\n        const populated = await _TypedDataEncoder.resolveNames(domain, types, value, (name: string) => {\n            return this.provider.resolveName(name);\n        });\n\n        const address = await this.getAddress();\n\n        return await this.provider.send(\"eth_signTypedData_v4\", [\n            address.toLowerCase(),\n            JSON.stringify(_TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n        ]);\n    }\n\n    async unlock(password: string): Promise<boolean> {\n        const provider = this.provider;\n\n        const address = await this.getAddress();\n\n        return provider.send(\"personal_unlockAccount\", [ address.toLowerCase(), password, null ]);\n    }\n}\n\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n    sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return <TransactionResponse>{\n                hash: hash,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: (confirmations?: number) => { return this.provider.waitForTransaction(hash, confirmations); }\n            };\n        });\n    }\n}\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true\n}\n\nexport class JsonRpcProvider extends BaseProvider {\n    readonly connection: ConnectionInfo;\n\n    _pendingFilter: Promise<number>;\n    _nextId: number;\n\n    // During any given event loop, the results for a given call will\n    // all be the same, so we can dedup the calls to save requests and\n    // bandwidth. @TODO: Try out generalizing this against send?\n    _eventLoopCache: Record<string, Promise<any>>;\n    get _cache(): Record<string, Promise<any>> {\n        if (this._eventLoopCache == null) {\n            this._eventLoopCache = { };\n        }\n        return this._eventLoopCache;\n    }\n\n    constructor(url?: ConnectionInfo | string, network?: Networkish) {\n        logger.checkNew(new.target, JsonRpcProvider);\n\n        let networkOrReady: Networkish | Promise<Network> = network;\n\n        // The network is unknown, query the JSON-RPC for it\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then((network) => {\n                        resolve(network);\n                    }, (error) => {\n                        reject(error);\n                    });\n                }, 0);\n            });\n        }\n\n        super(networkOrReady);\n\n        // Default URL\n        if (!url) { url = getStatic<() => string>(this.constructor, \"defaultUrl\")(); }\n\n        if (typeof(url) === \"string\") {\n            defineReadOnly(this, \"connection\",Object.freeze({\n                url: url\n            }));\n        } else {\n            defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n        }\n\n        this._nextId = 42;\n    }\n\n    static defaultUrl(): string {\n        return \"http:/\\/localhost:8545\";\n    }\n\n    detectNetwork(): Promise<Network> {\n        if (!this._cache[\"detectNetwork\"]) {\n            this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n\n            // Clear this cache at the beginning of the next event loop\n            setTimeout(() => {\n                this._cache[\"detectNetwork\"] = null;\n            }, 0);\n        }\n        return this._cache[\"detectNetwork\"];\n    }\n\n    async _uncachedDetectNetwork(): Promise<Network> {\n        await timer(0);\n\n        let chainId = null;\n        try {\n            chainId = await this.send(\"eth_chainId\", [ ]);\n        } catch (error) {\n            try {\n                chainId = await this.send(\"net_version\", [ ]);\n            } catch (error) { }\n        }\n\n        if (chainId != null) {\n            const getNetwork = getStatic<(network: Networkish) => Network>(this.constructor, \"getNetwork\");\n            try {\n                return getNetwork(BigNumber.from(chainId).toNumber());\n            } catch (error) {\n                return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                    chainId: chainId,\n                    event: \"invalidNetwork\",\n                    serverError: error\n                });\n            }\n        }\n\n        return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n            event: \"noNetwork\"\n        });\n    }\n\n    getSigner(addressOrIndex?: string | number): JsonRpcSigner {\n        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    }\n\n    getUncheckedSigner(addressOrIndex?: string | number): UncheckedJsonRpcSigner {\n        return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n\n    listAccounts(): Promise<Array<string>> {\n        return this.send(\"eth_accounts\", []).then((accounts: Array<string>) => {\n            return accounts.map((a) => this.formatter.address(a));\n        });\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        // We can expand this in the future to any call, but for now these\n        // are the biggest wins and do not require any serializing parameters.\n        const cache = ([ \"eth_chainId\", \"eth_blockNumber\" ].indexOf(method) >= 0);\n        if (cache && this._cache[method]) {\n            return this._cache[method];\n        }\n\n        const result = fetchJson(this.connection, JSON.stringify(request), getResult).then((result) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: request,\n                response: result,\n                provider: this\n            });\n\n            return result;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                error: error,\n                request: request,\n                provider: this\n            });\n\n            throw error;\n        });\n\n        // Cache the fetch, but clear it on the next event loop\n        if (cache) {\n            this._cache[method] = result;\n            setTimeout(() => {\n                this._cache[method] = null;\n            }, 0);\n        }\n\n        return result;\n    }\n\n    prepareRequest(method: string, params: any): [ string, Array<any> ] {\n        switch (method) {\n            case \"getBlockNumber\":\n                return [ \"eth_blockNumber\", [] ];\n\n            case \"getGasPrice\":\n                return [ \"eth_gasPrice\", [] ];\n\n            case \"getBalance\":\n                return [ \"eth_getBalance\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getTransactionCount\":\n                return [ \"eth_getTransactionCount\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getCode\":\n                return [ \"eth_getCode\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getStorageAt\":\n                return [ \"eth_getStorageAt\", [ getLowerCase(params.address), params.position, params.blockTag ] ];\n\n            case \"sendTransaction\":\n                return [ \"eth_sendRawTransaction\", [ params.signedTransaction ] ]\n\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return [ \"eth_getBlockByNumber\", [ params.blockTag, !!params.includeTransactions ] ];\n                } else if (params.blockHash) {\n                    return [ \"eth_getBlockByHash\", [ params.blockHash, !!params.includeTransactions ] ];\n                }\n                return null;\n\n            case \"getTransaction\":\n                return [ \"eth_getTransactionByHash\", [ params.transactionHash ] ];\n\n            case \"getTransactionReceipt\":\n                return [ \"eth_getTransactionReceipt\", [ params.transactionHash ] ];\n\n            case \"call\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_call\", [ hexlifyTransaction(params.transaction, { from: true }), params.blockTag ] ];\n            }\n\n            case \"estimateGas\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_estimateGas\", [ hexlifyTransaction(params.transaction, { from: true }) ] ];\n            }\n\n            case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return [ \"eth_getLogs\", [ params.filter ] ];\n\n            default:\n                break;\n        }\n\n        return null;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // Legacy networks do not like the type field being passed along (which\n        // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n        if (method === \"call\" || method === \"estimateGas\") {\n            const tx = params.transaction;\n            if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n                // If there are no EIP-1559 properties, it might be non-EIP-a559\n                if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                    const feeData = await this.getFeeData();\n                    if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                        // Network doesn't know about EIP-1559 (and hence type)\n                        params = shallowCopy(params);\n                        params.transaction = shallowCopy(tx);\n                        delete params.transaction.type;\n                    }\n                }\n            }\n        }\n\n        const args = this.prepareRequest(method,  params);\n\n        if (args == null) {\n            logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n        }\n        try {\n            return await this.send(args[0], args[1])\n        } catch (error) {\n            return checkError(method, error, params);\n        }\n    }\n\n    _startEvent(event: Event): void {\n        if (event.tag === \"pending\") { this._startPending(); }\n        super._startEvent(event);\n    }\n\n    _startPending(): void {\n        if (this._pendingFilter != null) { return; }\n        const self = this;\n\n        const pendingFilter: Promise<number> = this.send(\"eth_newPendingTransactionFilter\", []);\n        this._pendingFilter = pendingFilter;\n\n        pendingFilter.then(function(filterId) {\n            function poll() {\n                self.send(\"eth_getFilterChanges\", [ filterId ]).then(function(hashes: Array<string>) {\n                    if (self._pendingFilter != pendingFilter) { return null; }\n\n                    let seq = Promise.resolve();\n                    hashes.forEach(function(hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n                        seq = seq.then(function() {\n                            return self.getTransaction(hash).then(function(tx) {\n                                self.emit(\"pending\", tx);\n                                return null;\n                            });\n                        });\n                    });\n\n                    return seq.then(function() {\n                        return timer(1000);\n                    });\n                }).then(function() {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send(\"eth_uninstallFilter\", [ filterId ]);\n                        return;\n                    }\n                    setTimeout(function() { poll(); }, 0);\n\n                    return null;\n                }).catch((error: Error) => { });\n            }\n            poll();\n\n            return filterId;\n        }).catch((error: Error) => { });\n    }\n\n    _stopEvent(event: Event): void {\n        if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n            this._pendingFilter = null;\n        }\n        super._stopEvent(event);\n    }\n\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n    static hexlifyTransaction(transaction: TransactionRequest, allowExtra?: { [key: string]: boolean }): { [key: string]: string | AccessList } {\n        // Check only allowed properties are given\n        const allowed = shallowCopy(allowedTransactionKeys);\n        if (allowExtra) {\n            for (const key in allowExtra) {\n                if (allowExtra[key]) { allowed[key] = true; }\n            }\n        }\n\n        checkProperties(transaction, allowed);\n\n        const result: { [key: string]: string | AccessList } = {};\n\n        // Some nodes (INFURA ropsten; INFURA mainnet is fine) do not like leading zeros.\n        [\"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            const value = hexValue((<any>transaction)[key]);\n            if (key === \"gasLimit\") { key = \"gas\"; }\n            result[key] = value;\n        });\n\n        [\"from\", \"to\", \"data\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            result[key] = hexlify((<any>transaction)[key]);\n        });\n\n        if ((<any>transaction).accessList) {\n            result[\"accessList\"] = accessListify((<any>transaction).accessList);\n        }\n\n        return result;\n    }\n}\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\n\nlet WS: any = null;\n\ntry {\n    WS = (WebSocket as any);\n    if (WS == null) { throw new Error(\"inject please\"); }\n} catch (error) {\n    const logger = new Logger(version);\n    WS = function() {\n        logger.throwError(\"WebSockets not supported in this environment\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new WebSocket()\"\n        });\n    }\n}\n//export default WS;\n//module.exports = WS;\nexport { WS as WebSocket };\n","\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Event } from \"./base-provider\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nimport { WebSocket } from \"./ws\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n/**\n *  Notes:\n *\n *  This provider differs a bit from the polling providers. One main\n *  difference is how it handles consistency. The polling providers\n *  will stall responses to ensure a consistent state, while this\n *  WebSocket provider assumes the connected backend will manage this.\n *\n *  For example, if a polling provider emits an event which indicates\n *  the event occurred in blockhash XXX, a call to fetch that block by\n *  its hash XXX, if not present will retry until it is present. This\n *  can occur when querying a pool of nodes that are mildly out of sync\n *  with each other.\n */\n\nlet NextId = 1;\n\nexport type InflightRequest = {\n     callback: (error: Error, result: any) => void;\n     payload: string;\n};\n\nexport type Subscription = {\n    tag: string;\n    processFunc: (payload: any) => void;\n};\n\n\n// For more info about the Real-time Event API see:\n//   https://geth.ethereum.org/docs/rpc/pubsub\n\nexport class WebSocketProvider extends JsonRpcProvider {\n    readonly _websocket: any;\n    readonly _requests: { [ name: string ]: InflightRequest };\n    readonly _detectNetwork: Promise<Network>;\n\n    // Maps event tag to subscription ID (we dedupe identical events)\n    readonly _subIds: { [ tag: string ]: Promise<string> };\n\n    // Maps Subscription ID to Subscription\n    readonly _subs: { [ name: string ]: Subscription };\n\n    _wsReady: boolean;\n\n    constructor(url: string, network?: Networkish) {\n        // This will be added in the future; please open an issue to expedite\n        if (network === \"any\") {\n            logger.throwError(\"WebSocketProvider does not support 'any' network yet\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"network:any\"\n            });\n        }\n\n        super(url, network);\n        this._pollingInterval = -1;\n\n        this._wsReady = false;\n\n        defineReadOnly(this, \"_websocket\", new WebSocket(this.connection.url));\n        defineReadOnly(this, \"_requests\", { });\n        defineReadOnly(this, \"_subs\", { });\n        defineReadOnly(this, \"_subIds\", { });\n        defineReadOnly(this, \"_detectNetwork\", super.detectNetwork());\n\n        // Stall sending requests until the socket is open...\n        this._websocket.onopen = () => {\n            this._wsReady = true;\n            Object.keys(this._requests).forEach((id) => {\n                this._websocket.send(this._requests[id].payload);\n            });\n        };\n\n        this._websocket.onmessage = (messageEvent: { data: string }) => {\n            const data = messageEvent.data;\n            const result = JSON.parse(data);\n            if (result.id != null) {\n                const id = String(result.id);\n                const request = this._requests[id];\n                delete this._requests[id];\n\n                if (result.result !== undefined) {\n                    request.callback(null, result.result);\n\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: JSON.parse(request.payload),\n                        response: result.result,\n                        provider: this\n                    });\n\n                } else {\n                    let error: Error = null;\n                    if (result.error) {\n                        error = new Error(result.error.message || \"unknown error\");\n                        defineReadOnly(<any>error, \"code\", result.error.code || null);\n                        defineReadOnly(<any>error, \"response\", data);\n                    } else {\n                        error = new Error(\"unknown error\");\n                    }\n\n                    request.callback(error, undefined);\n\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: JSON.parse(request.payload),\n                        provider: this\n                    });\n\n                }\n\n            } else if (result.method === \"eth_subscription\") {\n                // Subscription...\n                const sub = this._subs[result.params.subscription];\n                if (sub) {\n                    //this.emit.apply(this,                  );\n                    sub.processFunc(result.params.result)\n                }\n\n            } else {\n                console.warn(\"this should not happen\");\n            }\n        };\n\n        // This Provider does not actually poll, but we want to trigger\n        // poll events for things that depend on them (like stalling for\n        // block and transaction lookups)\n        const fauxPoll = setInterval(() => {\n            this.emit(\"poll\");\n        }, 1000);\n        if (fauxPoll.unref) { fauxPoll.unref(); }\n    }\n\n    detectNetwork(): Promise<Network> {\n        return this._detectNetwork;\n    }\n\n    get pollingInterval(): number {\n        return 0;\n    }\n\n    resetEventsBlock(blockNumber: number): void {\n        logger.throwError(\"cannot reset events block on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resetEventBlock\"\n        });\n    }\n\n    set pollingInterval(value: number) {\n        logger.throwError(\"cannot set polling interval on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPollingInterval\"\n        });\n    }\n\n    async poll(): Promise<void> {\n        return null;\n    }\n\n    set polling(value: boolean) {\n        if (!value) { return; }\n\n        logger.throwError(\"cannot set polling on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPolling\"\n        });\n    }\n\n    send(method: string, params?: Array<any>): Promise<any> {\n        const rid = NextId++;\n\n        return new Promise((resolve, reject) => {\n            function callback(error: Error, result: any) {\n                if (error) { return reject(error); }\n                return resolve(result);\n            }\n\n            const payload = JSON.stringify({\n                method: method,\n                params: params,\n                id: rid,\n                jsonrpc: \"2.0\"\n            });\n\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: JSON.parse(payload),\n                provider: this\n            });\n\n            this._requests[String(rid)] = { callback, payload };\n\n            if (this._wsReady) { this._websocket.send(payload); }\n        });\n    }\n\n    static defaultUrl(): string {\n        return \"ws:/\\/localhost:8546\";\n    }\n\n    async _subscribe(tag: string, param: Array<any>, processFunc: (result: any) => void): Promise<void> {\n        let subIdPromise = this._subIds[tag];\n        if (subIdPromise == null) {\n            subIdPromise = Promise.all(param).then((param) => {\n                return this.send(\"eth_subscribe\", param);\n            });\n            this._subIds[tag] = subIdPromise;\n        }\n        const subId = await subIdPromise;\n        this._subs[subId] = { tag, processFunc };\n    }\n\n    _startEvent(event: Event): void {\n        switch (event.type) {\n            case \"block\":\n                this._subscribe(\"block\", [ \"newHeads\" ], (result: any) => {\n                    const blockNumber = BigNumber.from(result.number).toNumber();\n                    this._emitted.block = blockNumber;\n                    this.emit(\"block\", blockNumber);\n                });\n                break;\n\n            case \"pending\":\n                this._subscribe(\"pending\", [ \"newPendingTransactions\" ], (result: any) => {\n                    this.emit(\"pending\", result);\n                });\n                break;\n\n            case \"filter\":\n                this._subscribe(event.tag, [ \"logs\", this._getFilter(event.filter) ], (result: any) => {\n                    if (result.removed == null) { result.removed = false; }\n                    this.emit(event.filter, this.formatter.filterLog(result));\n                });\n                break;\n\n            case \"tx\": {\n                const emitReceipt = (event: Event) => {\n                    const hash = event.hash;\n                    this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt) { return; }\n                        this.emit(hash, receipt);\n                    });\n                };\n\n                // In case it is already mined\n                emitReceipt(event);\n\n                // To keep things simple, we start up a single newHeads subscription\n                // to keep an eye out for transactions we are watching for.\n                // Starting a subscription for an event (i.e. \"tx\") that is already\n                // running is (basically) a nop.\n                this._subscribe(\"tx\", [ \"newHeads\" ], (result: any) => {\n                    this._events.filter((e) => (e.type === \"tx\")).forEach(emitReceipt);\n                });\n                break;\n            }\n\n            // Nothing is needed\n            case \"debug\":\n            case \"poll\":\n            case \"willPoll\":\n            case \"didPoll\":\n            case \"error\":\n                break;\n\n            default:\n                console.log(\"unhandled:\", event);\n                break;\n        }\n    }\n\n    _stopEvent(event: Event): void {\n        let tag = event.tag;\n\n        if (event.type === \"tx\") {\n            // There are remaining transaction event listeners\n            if (this._events.filter((e) => (e.type === \"tx\")).length) {\n                return;\n            }\n            tag = \"tx\";\n        } else if (this.listenerCount(event.event)) {\n            // There are remaining event listeners\n            return;\n        }\n\n        const subId = this._subIds[tag];\n        if (!subId) { return; }\n\n       delete this._subIds[tag];\n       subId.then((subId) => {\n            if (!this._subs[subId]) { return; }\n            delete this._subs[subId];\n            this.send(\"eth_unsubscribe\", [ subId ]);\n        });\n    }\n\n    async destroy(): Promise<void> {\n        // Wait until we have connected before trying to disconnect\n        if (this._websocket.readyState === WebSocket.CONNECTING) {\n            await (new Promise((resolve) => {\n                this._websocket.onopen = function() {\n                    resolve(true);\n                };\n\n                this._websocket.onerror = function() {\n                    resolve(false);\n                };\n            }));\n        }\n\n        // Hangup\n        // See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n        this._websocket.close(1000);\n    }\n}\n","\n\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly, getStatic } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { CommunityResourcable } from \"./formatter\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\n\ntype getUrlFunc = (network: Network, apiKey: string) => string | ConnectionInfo;\n\n// A StaticJsonRpcProvider is useful when you *know* for certain that\n// the backend will never change, as it never calls eth_chainId to\n// verify its backend. However, if the backend does change, the effects\n// are undefined and may include:\n// - inconsistent results\n// - locking up the UI\n// - block skew warnings\n// - wrong results\n// If the network is not explicit (i.e. auto-detection is expected), the\n// node MUST be running and available to respond to requests BEFORE this\n// is instantiated.\nexport class StaticJsonRpcProvider extends JsonRpcProvider {\n    async detectNetwork(): Promise<Network> {\n        let network = this.network;\n        if (network == null) {\n            network = await super.detectNetwork();\n\n            if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, { });\n            }\n\n            // If still not set, set it\n            if (this._network == null) {\n                // A static network does not support \"any\"\n                defineReadOnly(this, \"_network\", network);\n\n                this.emit(\"network\", network, null);\n            }\n        }\n        return network;\n    }\n}\n\nexport abstract class UrlJsonRpcProvider extends StaticJsonRpcProvider implements CommunityResourcable {\n    readonly apiKey: any;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        logger.checkAbstract(new.target, UrlJsonRpcProvider);\n\n        // Normalize the Network and API Key\n        network = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n        apiKey = getStatic<(apiKey: string) => string>(new.target, \"getApiKey\")(apiKey);\n\n        const connection = getStatic<getUrlFunc>(new.target, \"getUrl\")(network, apiKey);\n\n        super(connection, network);\n\n        if (typeof(apiKey) === \"string\") {\n            defineReadOnly(this, \"apiKey\", apiKey);\n        } else if (apiKey != null) {\n            Object.keys(apiKey).forEach((key) => {\n                defineReadOnly<any, any>(this, key, apiKey[key]);\n            });\n        }\n    }\n\n    _startPending(): void {\n        logger.warn(\"WARNING: API provider does not support pending filters\");\n    }\n\n    isCommunityResource(): boolean {\n        return false;\n    }\n\n    getSigner(address?: string): JsonRpcSigner {\n        return logger.throwError(\n            \"API provider does not support signing\",\n            Logger.errors.UNSUPPORTED_OPERATION,\n            { operation: \"getSigner\" }\n        );\n    }\n\n    listAccounts(): Promise<Array<string>> {\n        return Promise.resolve([]);\n    }\n\n    // Return a defaultApiKey if null, otherwise validate the API key\n    static getApiKey(apiKey: any): any {\n        return apiKey;\n    }\n\n    // Returns the url or connection for the given network and API key. The\n    // API key will have been sanitized by the getApiKey first, so any validation\n    // or transformations can be done there.\n    static getUrl(network: Network, apiKey: any): string | ConnectionInfo {\n        return logger.throwError(\"not implemented; sub-classes must override getUrl\", Logger.errors.NOT_IMPLEMENTED, {\n            operation: \"getUrl\"\n        });\n    }\n}\n","\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { CommunityResourcable, showThrottleMessage } from \"./formatter\";\nimport { WebSocketProvider } from \"./websocket-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\n// This key was provided to ethers.js by Alchemy to be used by the\n// default provider, but it is recommended that for your own\n// production environments, that you acquire your own API key at:\n//   https://dashboard.alchemyapi.io\n\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\"\n\nexport class AlchemyWebSocketProvider extends WebSocketProvider implements CommunityResourcable {\n    readonly apiKey: string;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        const provider = new AlchemyProvider(network, apiKey);\n\n        const url = provider.connection.url.replace(/^http/i, \"ws\")\n                                           .replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n\n        super(url, provider.network);\n        defineReadOnly(this, \"apiKey\", provider.apiKey);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n\nexport class AlchemyProvider extends UrlJsonRpcProvider {\n\n    static getWebSocketProvider(network?: Networkish, apiKey?: any): AlchemyWebSocketProvider {\n        return new AlchemyWebSocketProvider(network, apiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey == null) { return defaultApiKey; }\n        if (apiKey && typeof(apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey;\n    }\n\n    static getUrl(network: Network, apiKey: string): ConnectionInfo {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"eth-mainnet.alchemyapi.io/v2/\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.alchemyapi.io/v2/\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.alchemyapi.io/v2/\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.alchemyapi.io/v2/\";\n                break;\n            case \"kovan\":\n                host = \"eth-kovan.alchemyapi.io/v2/\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.g.alchemy.com/v2/\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + apiKey),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n","\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport class CloudflareProvider extends UrlJsonRpcProvider {\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey != null) {\n            logger.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n        }\n        return null;\n    }\n\n    static getUrl(network: Network, apiKey?: any): string {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://cloudflare-eth.com/\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return host;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // The Cloudflare provider does not support eth_blockNumber,\n        // so we get the latest block and pull it from that\n        if (method === \"getBlockNumber\") {\n            const block = await super.perform(\"getBlock\", { blockTag: \"latest\" });\n            return block.number;\n        }\n\n        return super.perform(method, params);\n    }\n}\n","\"use strict\";\n\nimport { BlockTag, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, fetchJson } from \"@ethersproject/web\";\n\nimport { showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BaseProvider } from \"./base-provider\";\n\n\n// The transaction has already been sanitized by the calls in Provider\nfunction getTransactionPostData(transaction: TransactionRequest): Record<string, string> {\n    const result: Record<string, string> = { };\n    for (let key in transaction) {\n        if ((<any>transaction)[key] == null) { continue; }\n        let value = (<any>transaction)[key];\n        if (key === \"type\" && value === 0) { continue; }\n\n        // Quantity-types require no leading zero, unless 0\n        if ((<any>{ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true })[key]) {\n            value = hexValue(hexlify(value));\n        } else if (key === \"accessList\") {\n            value = \"[\" + accessListify(value).map((set) => {\n                return `{address:\"${ set.address }\",storageKeys:[\"${ set.storageKeys.join('\",\"') }\"]}`;\n            }).join(\",\") + \"]\";\n        } else {\n            value = hexlify(value);\n        }\n        result[key] = value;\n    }\n    return result;\n}\n\nfunction getResult(result: { status?: number, message?: string, result?: any }): any {\n    // getLogs, getHistory have weird success responses\n    if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n        return result.result;\n    }\n\n    if (result.status != 1 || result.message != \"OK\") {\n        const error: any = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n            error.throttleRetry = true;\n        }\n        throw error;\n    }\n\n    return result.result;\n}\n\nfunction getJsonResult(result: { jsonrpc: string, result?: any, error?: { code?: number, data?: any, message?: string} } ): any {\n    // This response indicates we are being throttled\n    if (result && (<any>result).status == 0 && (<any>result).message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n        const error: any = new Error(\"throttled response\");\n        error.result = JSON.stringify(result);\n        error.throttleRetry = true;\n        throw error;\n    }\n\n    if (result.jsonrpc != \"2.0\") {\n        // @TODO: not any\n        const error: any = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        throw error;\n    }\n\n    if (result.error) {\n        // @TODO: not any\n        const error: any = new Error(result.error.message || \"unknown error\");\n        if (result.error.code) { error.code = result.error.code; }\n        if (result.error.data) { error.data = result.error.data; }\n        throw error;\n    }\n\n    return result.result;\n}\n\n// The blockTag was normalized as a string by the Provider pre-perform operations\nfunction checkLogTag(blockTag: string): number | \"latest\" {\n    if (blockTag === \"pending\") { throw new Error(\"pending not supported\"); }\n    if (blockTag === \"latest\") { return blockTag; }\n\n    return parseInt(blockTag.substring(2), 16);\n}\n\n\nconst defaultApiKey = \"9D13ZE7XSBTJ94N9BNJ2MA33VMAY2YPIRB\";\n\nfunction checkError(method: string, error: any, transaction: any): any {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n\n        // Etherscan keeps changing their string\n        if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {\n            // Etherscan prefixes the data like \"Reverted 0x1234\"\n            let data = e.data;\n            if (data) { data = \"0x\" + data.replace(/^.*0x/i, \"\"); }\n\n            if (isHexString(data)) { return data; }\n\n            logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n                error, data: \"0x\"\n            });\n        }\n    }\n\n    // Get the message from any nested error structure\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR) {\n        if (error.error && typeof(error.error.message) === \"string\") {\n            message = error.error.message;\n        } else if (typeof(error.body) === \"string\") {\n            message = error.body;\n        } else if (typeof(error.responseText) === \"string\") {\n            message = error.responseText;\n        }\n    }\n    message = (message || \"\").toLowerCase();\n\n    // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n    if (message.match(/insufficient funds/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n           error, method, transaction\n        });\n    }\n\n    // \"Transaction with the same hash was already imported.\"\n    if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n           error, method, transaction\n        });\n    }\n\n    // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n    if (message.match(/another transaction with same nonce/)) {\n         logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n         });\n    }\n\n    if (message.match(/execution failed due to an exception|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n\n    throw error;\n}\n\nexport class EtherscanProvider extends BaseProvider{\n    readonly baseUrl: string;\n    readonly apiKey: string;\n\n    constructor(network?: Networkish, apiKey?: string) {\n        logger.checkNew(new.target, EtherscanProvider);\n\n        super(network);\n\n        defineReadOnly(this, \"baseUrl\", this.getBaseUrl());\n        defineReadOnly(this, \"apiKey\", apiKey || defaultApiKey);\n    }\n\n    getBaseUrl(): string {\n        switch(this.network ? this.network.name: \"invalid\") {\n            case \"homestead\":\n                return \"https:/\\/api.etherscan.io\";\n            case \"ropsten\":\n                return \"https:/\\/api-ropsten.etherscan.io\";\n            case \"rinkeby\":\n                return \"https:/\\/api-rinkeby.etherscan.io\";\n            case \"kovan\":\n                return \"https:/\\/api-kovan.etherscan.io\";\n            case \"goerli\":\n                return \"https:/\\/api-goerli.etherscan.io\";\n            default:\n        }\n\n        return logger.throwArgumentError(\"unsupported network\", \"network\", name);\n    }\n\n    getUrl(module: string, params: Record<string, string>): string {\n        const query = Object.keys(params).reduce((accum, key) => {\n            const value = params[key];\n            if (value != null) {\n                accum += `&${ key }=${ value }`\n            }\n            return accum\n        }, \"\");\n        const apiKey = ((this.apiKey) ? `&apikey=${ this.apiKey }`: \"\");\n        return `${ this.baseUrl }/api?module=${ module }${ query }${ apiKey }`;\n    }\n\n    getPostUrl(): string {\n        return `${ this.baseUrl }/api`;\n    }\n\n    getPostData(module: string, params: Record<string, any>): Record<string, any> {\n        params.module = module;\n        params.apikey = this.apiKey;\n        return params;\n    }\n\n    async fetch(module: string, params: Record<string, any>, post?: boolean): Promise<any> {\n        const url = (post ? this.getPostUrl(): this.getUrl(module, params));\n        const payload = (post ? this.getPostData(module, params): null);\n        const procFunc = (module === \"proxy\") ? getJsonResult: getResult;\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: url,\n            provider: this\n        });\n\n        const connection: ConnectionInfo = {\n            url: url,\n            throttleSlotInterval: 1000,\n            throttleCallback: (attempt: number, url: string) => {\n                if (this.isCommunityResource()) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        let payloadStr: string = null;\n        if (payload) {\n            connection.headers = { \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" };\n            payloadStr = Object.keys(payload).map((key) => {\n                return `${ key }=${ payload[key] }`\n            }).join(\"&\");\n        }\n\n        const result = await fetchJson(connection, payloadStr, procFunc || getJsonResult);\n\n        this.emit(\"debug\", {\n            action: \"response\",\n            request: url,\n            response: deepCopy(result),\n            provider: this\n        });\n\n        return result;\n    }\n\n    async detectNetwork(): Promise<Network> {\n        return this.network;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n\n        switch (method) {\n            case \"getBlockNumber\":\n                return this.fetch(\"proxy\", { action: \"eth_blockNumber\" });\n\n            case \"getGasPrice\":\n                return this.fetch(\"proxy\", { action: \"eth_gasPrice\" });\n\n            case \"getBalance\":\n                // Returns base-10 result\n                return this.fetch(\"account\", {\n                    action: \"balance\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getTransactionCount\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionCount\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getCode\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getCode\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getStorageAt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getStorageAt\",\n                    address: params.address,\n                    position: params.position,\n                    tag: params.blockTag\n                });\n\n            case \"sendTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_sendRawTransaction\",\n                    hex: params.signedTransaction\n                }, true).catch((error) => {\n                    return checkError(\"sendTransaction\", error, params.signedTransaction);\n                });\n\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getBlockByNumber\",\n                        tag: params.blockTag,\n                        boolean: (params.includeTransactions ? \"true\": \"false\")\n                    });\n                }\n                throw new Error(\"getBlock by blockHash not implemented\");\n\n            case \"getTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionByHash\",\n                    txhash: params.transactionHash\n                });\n\n            case \"getTransactionReceipt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionReceipt\",\n                    txhash: params.transactionHash\n                });\n\n            case \"call\": {\n                if (params.blockTag !== \"latest\") {\n                    throw new Error(\"EtherscanProvider does not support blockTag for call\");\n                }\n\n                const postData = getTransactionPostData(params.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_call\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return checkError(\"call\", error, params.transaction);\n                }\n            }\n\n            case \"estimateGas\": {\n                const postData = getTransactionPostData(params.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_estimateGas\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return checkError(\"estimateGas\", error, params.transaction);\n                }\n            }\n\n            case \"getLogs\": {\n                const args: Record<string, any> = { action: \"getLogs\" }\n\n                if (params.filter.fromBlock) {\n                    args.fromBlock = checkLogTag(params.filter.fromBlock);\n                }\n\n                if (params.filter.toBlock) {\n                    args.toBlock = checkLogTag(params.filter.toBlock);\n                }\n\n                if (params.filter.address) {\n                    args.address = params.filter.address;\n                }\n\n                // @TODO: We can handle slightly more complicated logs using the logs API\n                if (params.filter.topics && params.filter.topics.length > 0) {\n                    if (params.filter.topics.length > 1) {\n                        logger.throwError(\"unsupported topic count\", Logger.errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });\n                    }\n\n                    if (params.filter.topics.length === 1) {\n                        const topic0 = params.filter.topics[0];\n                        if (typeof(topic0) !== \"string\" || topic0.length !== 66) {\n                            logger.throwError(\"unsupported topic format\", Logger.errors.UNSUPPORTED_OPERATION, { topic0: topic0 });\n                        }\n                        args.topic0 = topic0;\n                    }\n                }\n\n                const logs: Array<any> = await this.fetch(\"logs\", args);\n\n                // Cache txHash => blockHash\n                let blocks: { [tag: string]: string } = {};\n\n                // Add any missing blockHash to the logs\n                for (let i = 0; i < logs.length; i++) {\n                    const log = logs[i];\n                    if (log.blockHash != null) { continue; }\n                    if (blocks[log.blockNumber] == null) {\n                        const block = await this.getBlock(log.blockNumber);\n                        if (block) {\n                            blocks[log.blockNumber] = block.hash;\n                        }\n                    }\n                    log.blockHash = blocks[log.blockNumber];\n                }\n\n                return logs;\n            }\n\n            case \"getEtherPrice\":\n                if (this.network.name !== \"homestead\") { return 0.0; }\n                return parseFloat((await this.fetch(\"stats\", { action: \"ethprice\" })).ethusd);\n\n            default:\n                break;\n         }\n\n        return super.perform(method, params);\n    }\n\n    // Note: The `page` page parameter only allows pagination within the\n    //       10,000 window available without a page and offset parameter\n    //       Error: Result window is too large, PageNo x Offset size must\n    //              be less than or equal to 10000\n    async getHistory(addressOrName: string | Promise<string>, startBlock?: BlockTag, endBlock?: BlockTag): Promise<Array<TransactionResponse>> {\n        const params = {\n            action: \"txlist\",\n            address: (await this.resolveName(addressOrName)),\n            startblock: ((startBlock == null) ? 0: startBlock),\n            endblock: ((endBlock == null) ? 99999999: endBlock),\n            sort: \"asc\"\n        };\n\n        const result = await this.fetch(\"account\", params);\n\n        return result.map((tx: any) => {\n            [\"contractAddress\", \"to\"].forEach(function(key) {\n                if (tx[key] == \"\") { delete tx[key]; }\n            });\n            if (tx.creates == null && tx.contractAddress != null) {\n                tx.creates = tx.contractAddress;\n            }\n            const item = this.formatter.transactionResponse(tx);\n            if (tx.timeStamp) { item.timestamp = parseInt(tx.timeStamp); }\n            return item;\n        });\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n","\"use strict\";\n\nimport { Block, BlockWithTransactions, Provider } from \"@ethersproject/abstract-provider\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { Network } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { shuffled } from \"@ethersproject/random\";\nimport { poll } from \"@ethersproject/web\";\n\nimport { BaseProvider } from \"./base-provider\";\nimport { isCommunityResource } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction now() { return (new Date()).getTime(); }\n\n// Returns to network as long as all agree, or null if any is null.\n// Throws an error if any two networks do not match.\nfunction checkNetworks(networks: Array<Network>): Network {\n    let result = null;\n\n    for (let i = 0; i < networks.length; i++) {\n        const network = networks[i];\n\n        // Null! We do not know our network; bail.\n        if (network == null) { return null; }\n\n        if (result) {\n            // Make sure the network matches the previous networks\n            if (!(result.name === network.name && result.chainId === network.chainId &&\n                ((result.ensAddress === network.ensAddress) || (result.ensAddress == null && network.ensAddress == null)))) {\n\n                logger.throwArgumentError(\"provider mismatch\", \"networks\", networks);\n           }\n        } else {\n            result = network;\n        }\n    }\n\n    return result;\n}\n\nfunction median(values: Array<number>, maxDelta?: number): number {\n    values = values.slice().sort();\n    const middle = Math.floor(values.length / 2);\n\n    // Odd length; take the middle\n    if (values.length % 2) {\n        return values[middle];\n    }\n\n    // Even length; take the average of the two middle\n    const a = values[middle - 1], b = values[middle];\n\n    if (maxDelta != null && Math.abs(a - b) > maxDelta) {\n        return null;\n    }\n\n    return (a + b) / 2;\n}\n\nfunction serialize(value: any): string {\n    if (value === null) {\n        return \"null\";\n    } else if (typeof(value) === \"number\" || typeof(value) === \"boolean\") {\n        return JSON.stringify(value);\n    } else if (typeof(value) === \"string\") {\n        return value;\n    } else if (BigNumber.isBigNumber(value)) {\n        return value.toString();\n    } else if (Array.isArray(value)) {\n        return JSON.stringify(value.map((i) => serialize(i)));\n    } else if (typeof(value) === \"object\") {\n        const keys = Object.keys(value);\n        keys.sort();\n        return \"{\" + keys.map((key) => {\n            let v = value[key];\n            if (typeof(v) === \"function\") {\n                v = \"[function]\";\n            } else {\n                v = serialize(v);\n            }\n            return JSON.stringify(key) + \":\" + v;\n        }).join(\",\") + \"}\";\n    }\n\n    throw new Error(\"unknown value type: \" + typeof(value));\n}\n\n// Next request ID to use for emitting debug info\nlet nextRid = 1;\n\n\nexport interface FallbackProviderConfig {\n    // The Provider\n    provider: Provider;\n\n    // The priority to favour this Provider; lower values are used first (higher priority)\n    priority?: number;\n\n    // Timeout before also triggering the next provider; this does not stop\n    // this provider and if its result comes back before a quorum is reached\n    // it will be incorporated into the vote\n    // - lower values will cause more network traffic but may result in a\n    //   faster result.\n    stallTimeout?: number;\n\n    // How much this provider contributes to the quorum; sometimes a specific\n    // provider may be more reliable or trustworthy than others, but usually\n    // this should be left as the default\n    weight?: number;\n};\n\n// A Staller is used to provide a delay to give a Provider a chance to response\n// before asking the next Provider to try.\ntype Staller = {\n    wait: (func: () => void) => Promise<void>\n    getPromise: () => Promise<void>,\n    cancel: () => void\n};\n\nfunction stall(duration: number): Staller {\n    let cancel: () => void = null;\n\n    let timer: NodeJS.Timer = null;\n    let promise = <Promise<void>>(new Promise((resolve) => {\n        cancel = function() {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n            resolve();\n        }\n        timer = setTimeout(cancel, duration);\n    }));\n\n    const wait = (func: () => void) => {\n        promise = promise.then(func);\n        return promise;\n    }\n\n    function getPromise(): Promise<void> {\n        return promise;\n    }\n\n    return { cancel, getPromise, wait };\n}\n\nconst ForwardErrors = [\n    Logger.errors.CALL_EXCEPTION,\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n    Logger.errors.UNPREDICTABLE_GAS_LIMIT\n];\n\nconst ForwardProperties = [\n    \"address\",\n    \"args\",\n    \"errorArgs\",\n    \"errorSignature\",\n    \"method\",\n    \"transaction\",\n];\n\n\n// @TODO: Make this an object with staller and cancel built-in\ninterface RunningConfig extends FallbackProviderConfig {\n    start?: number;\n    done?: boolean;\n    cancelled?: boolean;\n    runner?: Promise<any>;\n    staller?: Staller;\n    result?: any;\n    error?: Error;\n};\n\nfunction exposeDebugConfig(config: RunningConfig, now?: number): any {\n    const result: any = {\n        weight: config.weight\n    };\n    Object.defineProperty(result, \"provider\", { get: () => config.provider });\n    if (config.start) { result.start = config.start; }\n    if (now) { result.duration = (now - config.start); }\n    if (config.done) {\n        if (config.error) {\n            result.error = config.error;\n        } else {\n            result.result = config.result || null;\n        }\n    }\n    return result;\n}\n\nfunction normalizedTally(normalize: (value: any) => string, quorum: number): (configs: Array<RunningConfig>) => any {\n    return function(configs: Array<RunningConfig>): any {\n\n        // Count the votes for each result\n        const tally: { [ key: string]: { count: number, result: any } } = { };\n        configs.forEach((c) => {\n            const value = normalize(c.result);\n            if (!tally[value]) { tally[value] = { count: 0, result: c.result }; }\n            tally[value].count++;\n        });\n\n        // Check for a quorum on any given result\n        const keys = Object.keys(tally);\n        for (let i = 0; i < keys.length; i++) {\n            const check = tally[keys[i]];\n            if (check.count >= quorum) {\n                return check.result;\n            }\n        }\n\n        // No quroum\n        return undefined;\n    }\n}\nfunction getProcessFunc(provider: FallbackProvider, method: string, params: { [ key: string ]: any }): (configs: Array<RunningConfig>) => any {\n\n    let normalize = serialize;\n\n    switch (method) {\n        case \"getBlockNumber\":\n            // Return the median value, unless there is (median + 1) is also\n            // present, in which case that is probably true and the median\n            // is going to be stale soon. In the event of a malicious node,\n            // the lie will be true soon enough.\n            return function(configs: Array<RunningConfig>): number {\n                const values = configs.map((c) => c.result);\n\n                // Get the median block number\n                let blockNumber = median(configs.map((c) => c.result), 2);\n                if (blockNumber == null) { return undefined; }\n\n                blockNumber = Math.ceil(blockNumber);\n\n                // If the next block height is present, its prolly safe to use\n                if (values.indexOf(blockNumber + 1) >= 0) { blockNumber++; }\n\n                // Don't ever roll back the blockNumber\n                if (blockNumber >= provider._highestBlockNumber) {\n                    provider._highestBlockNumber = blockNumber;\n                }\n\n                return provider._highestBlockNumber;\n            };\n\n        case \"getGasPrice\":\n            // Return the middle (round index up) value, similar to median\n            // but do not average even entries and choose the higher.\n            // Malicious actors must compromise 50% of the nodes to lie.\n            return function(configs: Array<RunningConfig>): BigNumber {\n                const values = configs.map((c) => c.result);\n                values.sort();\n                return values[Math.floor(values.length / 2)];\n            }\n\n        case \"getEtherPrice\":\n            // Returns the median price. Malicious actors must compromise at\n            // least 50% of the nodes to lie (in a meaningful way).\n            return function(configs: Array<RunningConfig>): number {\n                return median(configs.map((c) => c.result));\n            }\n\n        // No additional normalizing required; serialize is enough\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n        case \"getStorageAt\":\n        case \"call\":\n        case \"estimateGas\":\n        case \"getLogs\":\n            break;\n\n        // We drop the confirmations from transactions as it is approximate\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            normalize = function(tx: any): string {\n                if (tx == null) { return null; }\n\n                tx = shallowCopy(tx);\n                tx.confirmations = -1;\n                return serialize(tx);\n            }\n            break;\n\n        // We drop the confirmations from transactions as it is approximate\n        case \"getBlock\":\n            // We drop the confirmations from transactions as it is approximate\n            if (params.includeTransactions) {\n                normalize = function(block: BlockWithTransactions): string {\n                    if (block == null) { return null; }\n\n                    block = shallowCopy(block);\n                    block.transactions = block.transactions.map((tx) => {\n                        tx = shallowCopy(tx);\n                        tx.confirmations = -1;\n                        return tx;\n                    });\n                    return serialize(block);\n                };\n            } else {\n                normalize = function(block: Block): string {\n                    if (block == null) { return null; }\n                    return serialize(block);\n                }\n            }\n            break;\n\n        default:\n            throw new Error(\"unknown method: \" + method);\n    }\n\n    // Return the result if and only if the expected quorum is\n    // satisfied and agreed upon for the final result.\n    return normalizedTally(normalize, provider.quorum);\n\n}\n\n// If we are doing a blockTag query, we need to make sure the backend is\n// caught up to the FallbackProvider, before sending a request to it.\nasync function waitForSync(config: RunningConfig, blockNumber: number): Promise<BaseProvider> {\n    const provider = <BaseProvider>(config.provider);\n\n    if ((provider.blockNumber != null && provider.blockNumber >= blockNumber) || blockNumber === -1) {\n        return provider;\n    }\n\n    return poll(() => {\n        return new Promise((resolve, reject) => {\n            setTimeout(function() {\n\n                // We are synced\n                if (provider.blockNumber >= blockNumber) { return resolve(provider); }\n\n                // We're done; just quit\n                if (config.cancelled) { return resolve(null); }\n\n                // Try again, next block\n                return resolve(undefined);\n            }, 0);\n        });\n    }, { oncePoll: provider });\n}\n\nasync function getRunner(config: RunningConfig, currentBlockNumber: number, method: string, params: { [ key: string]: any }): Promise<any> {\n    let provider = config.provider;\n\n    switch (method) {\n        case \"getBlockNumber\":\n        case \"getGasPrice\":\n            return provider[method]();\n        case \"getEtherPrice\":\n            if ((<any>provider).getEtherPrice) {\n                return (<any>provider).getEtherPrice();\n            }\n            break;\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider[method](params.address, params.blockTag || \"latest\");\n        case \"getStorageAt\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider.getStorageAt(params.address, params.position, params.blockTag || \"latest\");\n        case \"getBlock\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider[(params.includeTransactions ? \"getBlockWithTransactions\": \"getBlock\")](params.blockTag || params.blockHash);\n        case \"call\":\n        case \"estimateGas\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider[method](params.transaction);\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            return provider[method](params.transactionHash);\n        case \"getLogs\": {\n            let filter = params.filter;\n            if ((filter.fromBlock && isHexString(filter.fromBlock)) || (filter.toBlock && isHexString(filter.toBlock))) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider.getLogs(filter);\n        }\n    }\n\n    return logger.throwError(\"unknown method error\", Logger.errors.UNKNOWN_ERROR, {\n        method: method,\n        params: params\n    });\n}\n\nexport class FallbackProvider extends BaseProvider {\n    readonly providerConfigs: ReadonlyArray<FallbackProviderConfig>;\n    readonly quorum: number;\n\n    // Due to the highly asyncronous nature of the blockchain, we need\n    // to make sure we never unroll the blockNumber due to our random\n    // sample of backends\n    _highestBlockNumber: number;\n\n    constructor(providers: Array<Provider | FallbackProviderConfig>, quorum?: number) {\n        logger.checkNew(new.target, FallbackProvider);\n\n        if (providers.length === 0) {\n            logger.throwArgumentError(\"missing providers\", \"providers\", providers);\n        }\n\n        const providerConfigs: Array<FallbackProviderConfig> = providers.map((configOrProvider, index) => {\n            if (Provider.isProvider(configOrProvider)) {\n                const stallTimeout = isCommunityResource(configOrProvider) ? 2000: 750;\n                const priority = 1;\n                return Object.freeze({ provider: configOrProvider, weight: 1, stallTimeout, priority });\n            }\n\n            const config: FallbackProviderConfig = shallowCopy(configOrProvider);\n\n            if (config.priority == null) { config.priority = 1; }\n            if (config.stallTimeout == null) {\n                config.stallTimeout = isCommunityResource(configOrProvider) ? 2000: 750;\n            }\n            if (config.weight == null) { config.weight = 1; }\n\n            const weight = config.weight;\n            if (weight % 1 || weight > 512 || weight < 1) {\n                logger.throwArgumentError(\"invalid weight; must be integer in [1, 512]\", `providers[${ index }].weight`, weight);\n            }\n\n            return Object.freeze(config);\n        });\n\n        const total = providerConfigs.reduce((accum, c) => (accum + c.weight), 0);\n\n        if (quorum == null) {\n            quorum = total / 2;\n        } else if (quorum > total) {\n            logger.throwArgumentError(\"quorum will always fail; larger than total weight\", \"quorum\", quorum);\n        }\n\n        // Are all providers' networks are known\n        let networkOrReady: Network | Promise<Network> = checkNetworks(providerConfigs.map((c) => (<any>(c.provider)).network));\n\n        // Not all networks are known; we must stall\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then(resolve, reject);\n                }, 0);\n            });\n        }\n\n        super(networkOrReady);\n\n        // Preserve a copy, so we do not get mutated\n        defineReadOnly(this, \"providerConfigs\", Object.freeze(providerConfigs));\n        defineReadOnly(this, \"quorum\", quorum);\n\n        this._highestBlockNumber = -1;\n    }\n\n    async detectNetwork(): Promise<Network> {\n        const networks = await Promise.all(this.providerConfigs.map((c) => c.provider.getNetwork()));\n        return checkNetworks(networks);\n    }\n\n    async perform(method: string, params: { [name: string]: any }): Promise<any> {\n        // Sending transactions is special; always broadcast it to all backends\n        if (method === \"sendTransaction\") {\n            const results: Array<string | Error> = await Promise.all(this.providerConfigs.map((c) => {\n                return c.provider.sendTransaction(params.signedTransaction).then((result) => {\n                    return result.hash;\n                }, (error) => {\n                    return error;\n                });\n            }));\n\n            // Any success is good enough (other errors are likely \"already seen\" errors\n            for (let i = 0; i < results.length; i++) {\n                const result = results[i];\n                if (typeof(result) === \"string\") { return result; }\n            }\n\n            // They were all an error; pick the first error\n            throw results[0];\n        }\n\n        // We need to make sure we are in sync with our backends, so we need\n        // to know this before we can make a lot of calls\n        if (this._highestBlockNumber === -1 && method !== \"getBlockNumber\") {\n            await this.getBlockNumber();\n        }\n\n        const processFunc = getProcessFunc(this, method, params);\n\n        // Shuffle the providers and then sort them by their priority; we\n        // shallowCopy them since we will store the result in them too\n        const configs: Array<RunningConfig> = shuffled(this.providerConfigs.map(shallowCopy));\n        configs.sort((a, b) => (a.priority - b.priority));\n\n        const currentBlockNumber = this._highestBlockNumber;\n\n        let i = 0;\n        let first = true;\n        while (true) {\n            const t0 = now();\n\n            // Compute the inflight weight (exclude anything past)\n            let inflightWeight = configs.filter((c) => (c.runner && ((t0 - c.start) < c.stallTimeout)))\n                                        .reduce((accum, c) => (accum + c.weight), 0);\n\n            // Start running enough to meet quorum\n            while (inflightWeight < this.quorum && i < configs.length) {\n                const config = configs[i++];\n\n                const rid = nextRid++;\n\n                config.start = now();\n                config.staller = stall(config.stallTimeout);\n                config.staller.wait(() => { config.staller = null; });\n\n                config.runner = getRunner(config, currentBlockNumber, method, params).then((result) => {\n                    config.done = true;\n                    config.result = result;\n\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, now()),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                     }\n\n                }, (error) => {\n                    config.done = true;\n                    config.error = error;\n\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, now()),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                    }\n                });\n\n                if (this.listenerCount(\"debug\")) {\n                    this.emit(\"debug\", {\n                        action: \"request\",\n                        rid: rid,\n                        backend: exposeDebugConfig(config, null),\n                        request: { method: method, params: deepCopy(params) },\n                        provider: this\n                    });\n                }\n\n                inflightWeight += config.weight;\n            }\n\n            // Wait for anything meaningful to finish or stall out\n            const waiting: Array<Promise<any>> = [ ];\n            configs.forEach((c) => {\n                if (c.done || !c.runner) { return; }\n                waiting.push(c.runner);\n                if (c.staller) { waiting.push(c.staller.getPromise()); }\n            });\n\n            if (waiting.length) { await Promise.race(waiting); }\n\n            // Check the quorum and process the results; the process function\n            // may additionally decide the quorum is not met\n            const results = configs.filter((c) => (c.done && c.error == null));\n            if (results.length >= this.quorum) {\n                const result = processFunc(results);\n                if (result !== undefined) {\n                    // Shut down any stallers\n                    configs.forEach(c => {\n                        if (c.staller) { c.staller.cancel(); }\n                        c.cancelled = true;\n                    });\n                    return result;\n                }\n                if (!first) { await stall(100).getPromise(); }\n                first = false;\n            }\n\n            // No result, check for errors that should be forwarded\n            const errors = configs.reduce((accum, c) => {\n                if (!c.done || c.error == null) { return accum; }\n\n                const code = (<any>(c.error)).code;\n                if (ForwardErrors.indexOf(code) >= 0) {\n                    if (!accum[code]) { accum[code] = { error: c.error, weight: 0 }; }\n                    accum[code].weight += c.weight;\n                }\n\n                return accum;\n            }, <{ [ code: string ]: { error: Error, weight: number } }>({ }));\n\n            Object.keys(errors).forEach((errorCode: string) => {\n                const tally = errors[errorCode];\n                if (tally.weight < this.quorum) { return; }\n\n                // Shut down any stallers\n                configs.forEach(c => {\n                    if (c.staller) { c.staller.cancel(); }\n                    c.cancelled = true;\n                });\n\n                const e = <any>(tally.error);\n\n                const props: { [ name: string ]: any } = { };\n                ForwardProperties.forEach((name) => {\n                    if (e[name] == null) { return; }\n                    props[name] = e[name];\n                });\n\n                logger.throwError(e.reason || e.message, <any>errorCode, props);\n            });\n\n            // All configs have run to completion; we will never get more data\n            if (configs.filter((c) => !c.done).length === 0) { break; }\n        }\n\n        // Shut down any stallers; shouldn't be any\n        configs.forEach(c => {\n            if (c.staller) { c.staller.cancel(); }\n            c.cancelled = true;\n        });\n\n        return logger.throwError(\"failed to meet quorum\", Logger.errors.SERVER_ERROR, {\n            method: method,\n            params: params,\n            //results: configs.map((c) => c.result),\n            //errors: configs.map((c) => c.error),\n            results: configs.map((c) => exposeDebugConfig(c)),\n            provider: this\n        });\n    }\n}\n","\"use strict\";\n\nconst IpcProvider: any = null;\n\nexport {\n    IpcProvider\n};\n","\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { CommunityResourcable, showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\n\nconst defaultProjectId = \"84842078b09946638c03157f83405213\"\n\nexport class InfuraWebSocketProvider extends WebSocketProvider implements CommunityResourcable {\n    readonly apiKey: string;\n    readonly projectId: string;\n    readonly projectSecret: string;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        const provider = new InfuraProvider(network, apiKey);\n        const connection = provider.connection;\n        if (connection.password) {\n            logger.throwError(\"INFURA WebSocket project secrets unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"InfuraProvider.getWebSocketProvider()\"\n            });\n        }\n\n        const url = connection.url.replace(/^http/i, \"ws\").replace(\"/v3/\", \"/ws/v3/\");\n        super(url, network);\n\n        defineReadOnly(this, \"apiKey\", provider.projectId);\n        defineReadOnly(this, \"projectId\", provider.projectId);\n        defineReadOnly(this, \"projectSecret\", provider.projectSecret);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n}\n\nexport class InfuraProvider extends UrlJsonRpcProvider {\n    readonly projectId: string;\n    readonly projectSecret: string;\n\n    static getWebSocketProvider(network?: Networkish, apiKey?: any): InfuraWebSocketProvider {\n        return new InfuraWebSocketProvider(network, apiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        const apiKeyObj: { apiKey: string, projectId: string, projectSecret: string } = {\n            apiKey: defaultProjectId,\n            projectId: defaultProjectId,\n            projectSecret: null\n        };\n\n        if (apiKey == null) { return apiKeyObj; }\n\n        if (typeof(apiKey) === \"string\") {\n            apiKeyObj.projectId = apiKey;\n\n        } else if (apiKey.projectSecret != null) {\n            logger.assertArgument((typeof(apiKey.projectId) === \"string\"),\n                \"projectSecret requires a projectId\", \"projectId\", apiKey.projectId);\n            logger.assertArgument((typeof(apiKey.projectSecret) === \"string\"),\n                \"invalid projectSecret\", \"projectSecret\", \"[REDACTED]\");\n\n            apiKeyObj.projectId = apiKey.projectId;\n            apiKeyObj.projectSecret = apiKey.projectSecret;\n\n        } else if (apiKey.projectId) {\n            apiKeyObj.projectId = apiKey.projectId;\n        }\n\n        apiKeyObj.apiKey = apiKeyObj.projectId;\n\n        return apiKeyObj;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        let host: string = null;\n        switch(network ? network.name: \"unknown\") {\n            case \"homestead\":\n                host = \"mainnet.infura.io\";\n                break;\n            case \"ropsten\":\n                host = \"ropsten.infura.io\";\n                break;\n            case \"rinkeby\":\n                host = \"rinkeby.infura.io\";\n                break;\n            case \"kovan\":\n                host = \"kovan.infura.io\";\n                break;\n            case \"goerli\":\n                host = \"goerli.infura.io\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.infura.io\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.infura.io\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n\n        const connection: ConnectionInfo = {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + \"/v3/\" + apiKey.projectId),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey.projectId === defaultProjectId) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret\n        }\n\n        return connection;\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n}\n","\nimport { deepCopy } from \"@ethersproject/properties\";\nimport { fetchJson } from \"@ethersproject/web\";\n\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n\n// Experimental\n\nexport class JsonRpcBatchProvider extends JsonRpcProvider {\n    _pendingBatchAggregator: NodeJS.Timer;\n    _pendingBatch: Array<{\n        request: { method: string, params: Array<any>, id: number, jsonrpc: \"2.0\" },\n        resolve: (result: any) => void,\n        reject: (error: Error) => void\n    }>;\n\n    send(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        if (this._pendingBatch == null) {\n            this._pendingBatch = [ ];\n        }\n\n        const inflightRequest: any = { request, resolve: null, reject: null };\n\n        const promise = new Promise((resolve, reject) => {\n            inflightRequest.resolve = resolve;\n            inflightRequest.reject = reject;\n        });\n\n        this._pendingBatch.push(inflightRequest);\n\n        if (!this._pendingBatchAggregator) {\n            // Schedule batch for next event loop + short duration\n            this._pendingBatchAggregator = setTimeout(() => {\n\n                // Get teh current batch and clear it, so new requests\n                // go into the next batch\n                const batch = this._pendingBatch;\n                this._pendingBatch = null;\n                this._pendingBatchAggregator = null;\n\n                // Get the request as an array of requests\n                const request = batch.map((inflight) => inflight.request);\n\n                this.emit(\"debug\", {\n                    action: \"requestBatch\",\n                    request: deepCopy(request),\n                    provider: this\n                });\n\n                return fetchJson(this.connection, JSON.stringify(request)).then((result) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: request,\n                        response: result,\n                        provider: this\n                    });\n\n                    // For each result, feed it to the correct Promise, depending\n                    // on whether it was a success or error\n                    batch.forEach((inflightRequest, index) => {\n                        const payload = result[index];\n                        if (payload.error) {\n                            const error = new Error(payload.error.message);\n                            (<any>error).code = payload.error.code;\n                            (<any>error).data = payload.error.data;\n                            inflightRequest.reject(error);\n                        } else {\n                            inflightRequest.resolve(payload.result);\n                        }\n                    });\n\n                }, (error) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: request,\n                        provider: this\n                    });\n\n                    batch.forEach((inflightRequest) => {\n                        inflightRequest.reject(error);\n                    });\n                });\n\n            }, 10);\n        }\n\n        return promise;\n    }\n}\n","/* istanbul ignore file */\n\n\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Special API key provided by Nodesmith for ethers.js\nconst defaultApiKey = \"ETHERS_JS_SHARED\";\n\nexport class NodesmithProvider extends UrlJsonRpcProvider {\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey && typeof(apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey || defaultApiKey;\n    }\n\n    static getUrl(network: Network, apiKey?: any): string {\n        logger.warn(\"NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.\");\n\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc\";\n                break;\n            case \"ropsten\":\n                host = \"https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc\";\n                break;\n            case \"rinkeby\":\n                host = \"https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc\";\n                break;\n            case \"goerli\":\n                host = \"https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc\";\n                break;\n            case \"kovan\":\n                host = \"https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return (host + \"?apiKey=\" + apiKey);\n    }\n}\n","\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { getStatic } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\n// These are load-balancer-based application IDs\nconst defaultApplicationIds: Record<string, string> = {\n    homestead: \"6004bcd10040261633ade990\",\n    ropsten: \"6004bd4d0040261633ade991\",\n    rinkeby: \"6004bda20040261633ade994\",\n    goerli: \"6004bd860040261633ade992\",\n};\n\nexport class PocketProvider extends UrlJsonRpcProvider {\n    readonly applicationId: string;\n    readonly applicationSecretKey: string;\n    readonly loadBalancer: boolean;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        // We need a bit of creativity in the constructor because\n        // Pocket uses different default API keys based on the network\n\n        if (apiKey == null) {\n            const n = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n            if (n) {\n                const applicationId = defaultApplicationIds[n.name];\n                if (applicationId) {\n                    apiKey = {\n                        applicationId: applicationId,\n                        loadBalancer: true\n                    };\n                }\n            }\n\n            // If there was any issue above, we don't know this network\n            if (apiKey == null) {\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n            }\n\n        }\n\n        super(network, apiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        // Most API Providers allow null to get the default configuration, but\n        // Pocket requires the network to decide the default provider, so we\n        // rely on hijacking the constructor to add a sensible default for us\n\n        if (apiKey == null) {\n            logger.throwArgumentError(\"PocketProvider.getApiKey does not support null apiKey\", \"apiKey\", apiKey);\n        }\n\n        const apiKeyObj: { applicationId: string, applicationSecretKey: string, loadBalancer: boolean } = {\n            applicationId: null,\n            loadBalancer: false,\n            applicationSecretKey: null\n        };\n\n        // Parse applicationId and applicationSecretKey\n        if (typeof (apiKey) === \"string\") {\n            apiKeyObj.applicationId = apiKey;\n\n        } else if (apiKey.applicationSecretKey != null) {\n            logger.assertArgument((typeof (apiKey.applicationId) === \"string\"),\n                \"applicationSecretKey requires an applicationId\", \"applicationId\", apiKey.applicationId);\n            logger.assertArgument((typeof (apiKey.applicationSecretKey) === \"string\"),\n                \"invalid applicationSecretKey\", \"applicationSecretKey\", \"[REDACTED]\");\n\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n            apiKeyObj.loadBalancer = !!apiKey.loadBalancer;\n\n        } else if (apiKey.applicationId) {\n            logger.assertArgument((typeof (apiKey.applicationId) === \"string\"),\n                \"apiKey.applicationId must be a string\", \"apiKey.applicationId\", apiKey.applicationId);\n\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.loadBalancer = !!apiKey.loadBalancer;\n\n        } else {\n            logger.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n        }\n\n        return apiKeyObj;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        let host: string = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"homestead\":\n                host = \"eth-mainnet.gateway.pokt.network\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.gateway.pokt.network\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.gateway.pokt.network\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.gateway.pokt.network\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n\n        let url = null;\n        if (apiKey.loadBalancer) {\n            url = `https:/\\/${ host }/v1/lb/${ apiKey.applicationId }`\n        } else {\n            url = `https:/\\/${ host }/v1/${ apiKey.applicationId }`\n        }\n\n        const connection: ConnectionInfo = { url };\n\n        // Initialize empty headers\n        connection.headers = {}\n\n        // Apply application secret key\n        if (apiKey.applicationSecretKey != null) {\n            connection.user = \"\";\n            connection.password = apiKey.applicationSecretKey\n        }\n\n        return connection;\n    }\n\n    isCommunityResource(): boolean {\n        return (this.applicationId === defaultApplicationIds[this.network.name]);\n    }\n}\n","\"use strict\";\n\nimport { Networkish } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n\n// Exported Types\nexport type ExternalProvider = {\n    isMetaMask?: boolean;\n    isStatus?: boolean;\n    host?: string;\n    path?: string;\n    sendAsync?: (request: { method: string, params?: Array<any> }, callback: (error: any, response: any) => void) => void\n    send?: (request: { method: string, params?: Array<any> }, callback: (error: any, response: any) => void) => void\n    request?: (request: { method: string, params?: Array<any> }) => Promise<any>\n}\n\nlet _nextId = 1;\n\nexport type JsonRpcFetchFunc = (method: string, params?: Array<any>) => Promise<any>;\n\ntype Web3LegacySend = (request: any, callback: (error: Error, response: any) => void) => void;\n\nfunction buildWeb3LegacyFetcher(provider: ExternalProvider, sendFunc: Web3LegacySend) : JsonRpcFetchFunc {\n    const fetcher = \"Web3LegacyFetcher\";\n\n    return function(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        return new Promise((resolve, reject) => {\n            this.emit(\"debug\", {\n                action: \"request\",\n                fetcher,\n                request: deepCopy(request),\n                provider: this\n            });\n\n            sendFunc(request, (error, response) => {\n\n                if (error) {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        fetcher,\n                        error,\n                        request,\n                        provider: this\n                    });\n\n                    return reject(error);\n                }\n\n                this.emit(\"debug\", {\n                    action: \"response\",\n                    fetcher,\n                    request,\n                    response,\n                    provider: this\n                });\n\n                if (response.error) {\n                    const error = new Error(response.error.message);\n                    (<any>error).code = response.error.code;\n                    (<any>error).data = response.error.data;\n                    return reject(error);\n                }\n\n                resolve(response.result);\n            });\n        });\n    }\n}\n\nfunction buildEip1193Fetcher(provider: ExternalProvider): JsonRpcFetchFunc {\n    return function(method: string, params: Array<any>): Promise<any> {\n        if (params == null) { params = [ ]; }\n\n        const request = { method, params };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            fetcher: \"Eip1193Fetcher\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        return provider.request(request).then((response) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                response,\n                provider: this\n            });\n\n            return response;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                error,\n                provider: this\n            });\n\n            throw error;\n        });\n    }\n}\n\nexport class Web3Provider extends JsonRpcProvider {\n    readonly provider: ExternalProvider;\n    readonly jsonRpcFetchFunc: JsonRpcFetchFunc;\n\n    constructor(provider: ExternalProvider | JsonRpcFetchFunc, network?: Networkish) {\n        logger.checkNew(new.target, Web3Provider);\n\n        if (provider == null) {\n            logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n        }\n\n        let path: string = null;\n        let jsonRpcFetchFunc: JsonRpcFetchFunc = null;\n        let subprovider: ExternalProvider = null;\n\n        if (typeof(provider) === \"function\") {\n            path = \"unknown:\";\n            jsonRpcFetchFunc = provider;\n\n        } else {\n            path = provider.host || provider.path || \"\";\n            if (!path && provider.isMetaMask) {\n                path = \"metamask\";\n            }\n\n            subprovider = provider;\n\n            if (provider.request) {\n                if (path === \"\") { path = \"eip-1193:\"; }\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n            } else if (provider.sendAsync) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n            } else if (provider.send) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n            } else {\n                logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n            }\n\n            if (!path) { path = \"unknown:\"; }\n        }\n\n        super(path, network);\n\n        defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n        defineReadOnly(this, \"provider\", subprovider);\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        return this.jsonRpcFetchFunc(method, params);\n    }\n}\n","\"use strict\";\n\nimport { BaseContract, Contract, ContractFactory } from \"@ethersproject/contracts\";\n\nimport { BigNumber, FixedNumber } from \"@ethersproject/bignumber\";\n\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { Wallet } from \"@ethersproject/wallet\";\n\nimport * as constants from \"@ethersproject/constants\";\n\nimport * as providers from \"@ethersproject/providers\";\nimport { getDefaultProvider } from \"@ethersproject/providers\";\n\nimport { Wordlist, wordlists} from \"@ethersproject/wordlists\";\n\nimport * as utils from \"./utils\";\n\nimport { ErrorCode as errors, Logger } from \"@ethersproject/logger\";\n\n////////////////////////\n// Types\n\nimport { BigNumberish } from \"@ethersproject/bignumber\";\nimport { Bytes, BytesLike, Signature } from \"@ethersproject/bytes\";\nimport { Transaction, UnsignedTransaction } from \"@ethersproject/transactions\";\n\n\n////////////////////////\n// Compile-Time Constants\n\n// This is generated by \"npm run dist\"\nimport { version } from \"./_version\";\n\nconst logger = new Logger(version);\n\n////////////////////////\n// Types\n\nimport {\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface\n} from \"@ethersproject/contracts\";\n\n\n////////////////////////\n// Exports\n\nexport {\n    Signer,\n\n    Wallet,\n    VoidSigner,\n\n    getDefaultProvider,\n    providers,\n\n    BaseContract,\n    Contract,\n    ContractFactory,\n\n    BigNumber,\n    FixedNumber,\n\n    constants,\n    errors,\n\n    logger,\n\n    utils,\n\n    wordlists,\n\n\n    ////////////////////////\n    // Compile-Time Constants\n\n    version,\n\n\n    ////////////////////////\n    // Types\n\n    ContractFunction,\n    ContractReceipt,\n    ContractTransaction,\n    Event,\n    EventFilter,\n\n    Overrides,\n    PayableOverrides,\n    CallOverrides,\n\n    PopulatedTransaction,\n\n    ContractInterface,\n\n    BigNumberish,\n\n    Bytes,\n    BytesLike,\n\n    Signature,\n\n    Transaction,\n    UnsignedTransaction,\n\n    Wordlist\n};\n\n","import \"regenerator-runtime/runtime\";\nimport { ethers } from \"ethers\";\nimport { parseUnits, hexlify } from \"ethers/lib/utils\";\n\nlet provider;\nlet signer;\n\ndocument.addEventListener(\"DOMContentLoaded\", loadApp());\n\nasync function loadApp() {\n  provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n  signer = provider.getSigner();\n  if (!signer) window.location.reload();\n  await provider.send(\"eth_requestAccounts\", []);\n  processAction();\n}\n\nfunction processAction() {\n  const urlParams = new URLSearchParams(window.location.search);\n  const action = urlParams.get(\"action\");\n  const message = urlParams.get(\"message\");\n  const chainId = urlParams.get(\"chainId\") || 1;\n  const to = urlParams.get(\"to\");\n  const value = urlParams.get(\"value\");\n  const data = urlParams.get(\"data\") || \"\";\n  const gasLimit = urlParams.get(\"gasLimit\") || undefined;\n  const gasPrice = urlParams.get(\"gasPrice\") || undefined;\n\n  if (action === \"sign\" && message) {\n    return signMessage(message);\n  }\n\n  if (action === \"send\" && to && value) {\n    return sendTransaction(chainId, to, value, gasLimit, gasPrice, data);\n  }\n\n  displayResponse(\"Invalid URL\");\n}\n\nasync function sendTransaction(chainId, to, value, gasLimit, gasPrice, data) {\n  try {\n    await new Promise((resolve) => setTimeout(resolve, 1000));\n    const network = await provider.getNetwork();\n    if (network.chainId !== chainId) {\n      await window.ethereum.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: `0x${parseInt(chainId, 10).toString(16)}` }], // chainId must be in hexadecimal numbers\n      });\n    }\n    const from = await signer.getAddress();\n    const tx = await signer.sendTransaction({\n      from,\n      to,\n      value: parseUnits(value, \"wei\"),\n      gasLimit: gasLimit ? hexlify(Number(gasLimit)) : gasLimit,\n      gasPrice: gasPrice ? hexlify(Number(gasPrice)) : gasPrice,\n      data: data ? data : \"0x\",\n    });\n    console.log({ tx });\n    displayResponse(\"Transaction sent.<br><br>Copy to clipboard then continue to App\", tx.hash);\n  } catch (error) {\n    copyToClipboard(\"error\");\n    displayResponse(\"Transaction Denied\");\n  }\n}\n\nasync function signMessage(message) {\n  try {\n    await new Promise((resolve) => setTimeout(resolve, 1000));\n    const signature = await signer.signMessage(message);\n    console.log({ signature });\n    displayResponse(\"Signature complete.<br><br>Copy to clipboard then continue to App\", signature);\n  } catch (error) {\n    copyToClipboard(\"error\");\n    displayResponse(\"Signature Denied\");\n  }\n}\n\nasync function copyToClipboard(response) {\n  try {\n    // focus from metamask back to browser\n    window.focus();\n    // wait to finish focus\n    await new Promise((resolve) => setTimeout(resolve, 500));\n    // copy tx hash to clipboard\n    await navigator.clipboard.writeText(response);\n    document.getElementById(\"response-button\").innerHTML = \"Copied\";\n  } catch {\n    // for metamask mobile android\n    const input = document.createElement(\"input\");\n    input.type = \"text\";\n    input.value = response;\n    document.body.appendChild(input);\n    input.select();\n    document.execCommand(\"Copy\");\n    input.style = \"visibility: hidden\";\n    document.getElementById(\"response-button\").innerHTML = \"Copied\";\n  }\n}\n\nfunction displayResponse(text, response) {\n  // display error or response\n  const responseText = document.getElementById(\"response-text\");\n  responseText.innerHTML = text;\n  responseText.className = \"active\";\n\n  if (response) {\n    // display button to copy tx.hash or signature\n    const responseButton = document.getElementById(\"response-button\");\n    responseButton.className = \"active\";\n    responseButton.onclick = () => copyToClipboard(response);\n  }\n}\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}